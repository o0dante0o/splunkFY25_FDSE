"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _light = _interopRequireDefault(require("./light"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var dragHandleDark = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAA1SURBVHgB7dKhEQAgDAPAhHmwSKZHYtmHVtZVVNTkXS53UeG57yPYazLmrB8o6h8QgPqBOAOboRAPJUGIOAAAAABJRU5ErkJggg=="; // see babel-plugin-base64-png

var dark = {
  backgroundColor: _light["default"].gray20,
  backgroundColorHover: _light["default"].gray30,
  borderColor: _light["default"].gray22,
  borderColorWeak: _light["default"].gray60,
  borderColorStrong: _light["default"].black,
  borderActiveColor: "rgba(225,225,225, 0.5)",
  textColor: _light["default"].white,
  textGray: _light["default"].gray92,
  textDisabledColor: _light["default"].gray45,
  linkColor: _light["default"].accentColorL10,
  linkColorHover: _light["default"].accentColorL20,
  border: "1px solid ".concat(_light["default"].gray22),
  borderDark: "1px solid ".concat(_light["default"].black),
  borderLight: "1px solid ".concat(_light["default"].gray60),
  focusShadowInset: "inset 0 0 1px 1px ".concat(_light["default"].gray25, ", inset 0 0 0 3px ").concat(_light["default"].focusColor),
  draggableBackground: "url('data:image/png;base64,".concat(dragHandleDark, "') 0 0 / 8px 8px repeat")
};
/**
 * ## Syntax colors
 * Syntax colors are used only for code blocks.
 *
 * @colorSet verbose alphabetical
 */

var syntaxColors = {
  syntaxBlue: '#6cd0f0',
  syntaxBrown: '#fccf87',
  syntaxGray: '#b5b5b5',
  syntaxGreen: '#cef06c',
  syntaxOrange: '#f7994a',
  syntaxPink: '#f494e5',
  syntaxPurple: '#c99eff',
  syntaxRed: '#fa94aa',
  syntaxTeal: '#45d4ba'
};
/**
 * ## Interactive borders
 *
 * @borderSet
 */

var bordersInteractive = {
  activeBorder: "".concat(dark.borderActiveColor, " double")
};

var theme = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _light["default"]), dark), syntaxColors), bordersInteractive), {}, {
  borderLightColor: _light["default"].gray60 // @deprecated, SUI-5981

});

var _default = theme;
exports["default"] = _default;