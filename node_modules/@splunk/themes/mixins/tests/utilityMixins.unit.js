"use strict";

var _styledComponents = require("styled-components");

var _variables = _interopRequireDefault(require("../../variables"));

var _utilityMixins = require("../utilityMixins");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n            ", ";\n            ", ";\n            ", ";\n            ", ";\n            ", ";\n            ", ";\n            ", ";\n            ", ";\n            ", "\n            ", "\n            ", ";\n        "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

describe('colorWithAlpha', function () {
  var defaultProps = {};
  var enterpriseLightProps = {
    theme: {
      splunkThemeV1: {
        family: 'enterprise',
        colorScheme: 'light'
      }
    }
  };
  it('sets alpha on a string value', function () {
    var result = (0, _utilityMixins.colorWithAlpha)('#70f', 0.5)(defaultProps);
    expect(result).toBe('rgba(119, 0, 255, 0.5)');
    var result2 = (0, _utilityMixins.colorWithAlpha)('#1700f3', 0.5)(defaultProps);
    expect(result2).toBe('rgba(23, 0, 243, 0.5)');
    var result3 = (0, _utilityMixins.colorWithAlpha)('rgb(51, 162, 212)', 0.2)(defaultProps);
    expect(result3).toBe('rgba(51, 162, 212, 0.2)');
    var result4 = (0, _utilityMixins.colorWithAlpha)('rgba(255, 255, 255, 0.7)', 0.2)(defaultProps);
    expect(result4).toBe('rgba(255, 255, 255, 0.2)');
  });
  it('sets alpha on a variable', function () {
    var result = (0, _utilityMixins.colorWithAlpha)(_variables["default"].white, 0.5)(defaultProps);
    expect(result).toBe('rgba(255, 255, 255, 0.5)');
    var result2 = (0, _utilityMixins.colorWithAlpha)(_variables["default"].contentColorDefault, 0.2)(defaultProps);
    expect(result2).toBe('rgba(181, 181, 181, 0.2)');
    var result3 = (0, _utilityMixins.colorWithAlpha)(_variables["default"].contentColorDefault, 0.3)(enterpriseLightProps);
    expect(result3).toBe('rgba(60, 68, 77, 0.3)');
    var result4 = (0, _utilityMixins.colorWithAlpha)(_variables["default"].brandColor, 0.3)(enterpriseLightProps);
    expect(result4).toBe('rgba(92, 192, 92, 0.3)');
  });
  it('defaults to black for undefined variable', function () {
    var consoleWarn = jest.spyOn(console, 'warn').mockImplementation();
    var result = (0, _utilityMixins.colorWithAlpha)(_variables["default"].brandColor, 0.3)(defaultProps);
    expect(result).toBe('rgba(0, 0, 0, 0.3)');
    expect(consoleWarn).toHaveBeenCalled();
    expect(consoleWarn).toHaveBeenCalledWith("The variable 'brandColor' does not exist in the theme 'prisma dark comfortable'.");
    consoleWarn.mockRestore();
  });
  it('warns developers of invalid alpha prop at runtime', function () {
    var consoleWarn = jest.spyOn(console, 'warn').mockImplementation();
    (0, _utilityMixins.colorWithAlpha)(_variables["default"].white, 1.1)(defaultProps);
    expect(consoleWarn).toHaveBeenCalled();
    expect(consoleWarn).toHaveBeenCalledWith('The alpha value "1.1" is not within acceptable 0-1 range.');
    consoleWarn.mockRestore();
  });
});
describe('overlayColors', function () {
  var defaultProps = {};
  it('overlays two string values', function () {
    var result = (0, _utilityMixins.overlayColors)('#f0f', 'rgba(255, 255, 128, 0.5)')(defaultProps);
    expect(result).toBe('rgb(255, 128, 192)');
  });
  it('overlays a solid color', function () {
    var result = (0, _utilityMixins.overlayColors)('#f39', _variables["default"].black)(defaultProps);
    expect(result).toBe('rgb(0, 0, 0)');
  });
  it('uses default theme variables', function () {
    var result = (0, _utilityMixins.overlayColors)(_variables["default"].interactiveColorPrimary, _variables["default"].interactiveColorOverlayHover)(defaultProps);
    expect(result).toBe('rgb(67, 152, 255)');
  });
  var enterpriseLightProps = {
    theme: {
      splunkThemeV1: {
        family: 'enterprise',
        colorScheme: 'light'
      }
    }
  };
  it('uses Enterprise variables', function () {
    var result = (0, _utilityMixins.overlayColors)(_variables["default"].brandColor, 'rgba(255, 255, 255, 0.5)')(enterpriseLightProps);
    expect(result).toBe('rgb(174, 224, 174)');
  });
  it('defaults to black for undefined colors', function () {
    var result = (0, _utilityMixins.overlayColors)(_variables["default"].brandColor, 'rgba(255, 255, 255, 0.5)')(defaultProps);
    expect(result).toBe('rgb(128, 128, 128)');
  });
});
describe('passes TS verification', function () {
  it.skip('allows mixins in styled-components css', function () {
    /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */
    (0, _styledComponents.css)(_templateObject(), _utilityMixins.clearfix, (0, _utilityMixins.colorWithAlpha)('foo', 0.5), _utilityMixins.ellipsis, (0, _utilityMixins.overlayColors)('foo', 'bar'), _utilityMixins.printHide, _utilityMixins.printNoBackground, _utilityMixins.printWidth100Percent, _utilityMixins.printWrapAll, (0, _utilityMixins.reset)(), (0, _utilityMixins.reset)('block'), _utilityMixins.screenReaderContent);
  });
});