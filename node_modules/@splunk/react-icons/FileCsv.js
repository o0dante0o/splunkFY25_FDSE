/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var r = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, r) => {
            /******/ for (var C in r) {
                /******/ if (e.o(r, C) && !e.o(t, C)) {
                    /******/ Object.defineProperty(t, C, {
                        enumerable: true,
                        get: r[C]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        default: () => /* binding */ s
    });
    // CONCATENATED MODULE: external "react"
    const r = require("react");
    var C =  e.n(r);
    // CONCATENATED MODULE: external "@splunk/react-icons/SVG"
    const n = require("@splunk/react-icons/SVG");
    var a =  e.n(n);
    // CONCATENATED MODULE: external "@splunk/react-icons/IconProvider"
    const l = require("@splunk/react-icons/IconProvider");
    // CONCATENATED MODULE: ./src/icons/FileCsv.tsx
    function o(e, t) {
        if (e == null) return {};
        var r = u(e, t);
        var C, n;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (n = 0; n < a.length; n++) {
                C = a[n];
                if (t.indexOf(C) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, C)) continue;
                r[C] = e[C];
            }
        }
        return r;
    }
    function u(e, t) {
        if (e == null) return {};
        var r = {};
        var C = Object.keys(e);
        var n, a;
        for (a = 0; a < C.length; a++) {
            n = C[a];
            if (t.indexOf(n) >= 0) continue;
            r[n] = e[n];
        }
        return r;
    }
    var c = {
        variant: "default"
    };
    var i = new Map;
    i.set("outlined", (function() {
        
        return C().createElement(C().Fragment, null,  C().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M7 3.99805V12.998H5V3.49805C5 2.66962 5.67157 1.99805 6.5 1.99805H13.3486C13.7464 1.99805 14.128 2.15609 14.4093 2.4374L18.5607 6.58895C18.842 6.87025 19.0001 7.25178 19.0001 7.6496V12.998H17.0001V8.99799H13.3889C12.5605 8.99799 11.8889 8.32641 11.8889 7.49799V3.99805H7ZM13.8889 4.74549L16.1414 6.99799H13.8889V4.74549Z"
        }),  C().createElement("path", {
            d: "M6.85797 19.5431H8.77497C8.72697 20.3591 8.45697 20.9951 7.96497 21.4511C7.47297 21.9011 6.78897 22.1261 5.91297 22.1261C4.92897 22.1261 4.19097 21.8441 3.69897 21.2801C3.21297 20.7161 2.96997 19.9271 2.96997 18.9131C2.96997 18.2651 3.07797 17.6981 3.29397 17.2121C3.51597 16.7261 3.84897 16.3481 4.29297 16.0781C4.74297 15.8021 5.30997 15.6641 5.99397 15.6641C6.83997 15.6641 7.49397 15.8981 7.95597 16.3661C8.42397 16.8341 8.67897 17.4611 8.72097 18.2471H6.80397C6.76197 17.9531 6.66297 17.7281 6.50697 17.5721C6.35697 17.4161 6.15597 17.3381 5.90397 17.3381C5.57397 17.3381 5.32497 17.4731 5.15697 17.7431C4.98897 18.0071 4.90497 18.3971 4.90497 18.9131C4.90497 19.4051 4.98897 19.7861 5.15697 20.0561C5.33097 20.3201 5.58297 20.4521 5.91297 20.4521C6.14697 20.4521 6.35097 20.3741 6.52497 20.2181C6.69897 20.0621 6.80997 19.8371 6.85797 19.5431Z"
        }),  C().createElement("path", {
            d: "M9.45067 19.9751H11.3497C11.3977 20.1851 11.4847 20.3501 11.6107 20.4701C11.7427 20.5841 11.9287 20.6411 12.1687 20.6411C12.3607 20.6411 12.5167 20.6021 12.6367 20.5241C12.7567 20.4461 12.8167 20.3321 12.8167 20.1821C12.8167 20.0501 12.7657 19.9511 12.6637 19.8851C12.5677 19.8131 12.4177 19.7591 12.2137 19.7231L11.6467 19.6241C10.9327 19.4981 10.4017 19.2761 10.0537 18.9581C9.71167 18.6401 9.54067 18.2201 9.54067 17.6981C9.54067 17.2361 9.65467 16.8551 9.88267 16.5551C10.1167 16.2551 10.4257 16.0331 10.8097 15.8891C11.1937 15.7391 11.6107 15.6641 12.0607 15.6641C12.5527 15.6641 12.9907 15.7451 13.3747 15.9071C13.7587 16.0691 14.0617 16.2971 14.2837 16.5911C14.5117 16.8851 14.6287 17.2331 14.6347 17.6351H12.7267C12.6847 17.4731 12.5977 17.3531 12.4657 17.2751C12.3397 17.1971 12.1957 17.1581 12.0337 17.1581C11.8777 17.1581 11.7457 17.1941 11.6377 17.2661C11.5297 17.3381 11.4757 17.4431 11.4757 17.5811C11.4757 17.6531 11.5057 17.7341 11.5657 17.8241C11.6317 17.9081 11.7757 17.9711 11.9977 18.0131L12.5467 18.1121C13.3207 18.2501 13.8817 18.4721 14.2297 18.7781C14.5777 19.0781 14.7517 19.4951 14.7517 20.0291C14.7517 20.4731 14.6437 20.8511 14.4277 21.1631C14.2177 21.4751 13.9177 21.7151 13.5277 21.8831C13.1377 22.0451 12.6817 22.1261 12.1597 22.1261C11.5957 22.1261 11.1127 22.0331 10.7107 21.8471C10.3147 21.6611 10.0087 21.4061 9.79267 21.0821C9.58267 20.7581 9.46867 20.3891 9.45067 19.9751Z"
        }),  C().createElement("path", {
            d: "M15.1558 15.7901L17.1628 22.0001H19.2778L21.2668 15.7901H19.3138L18.3688 19.7951C18.3568 19.8551 18.3388 19.8971 18.3148 19.9211C18.2908 19.9391 18.2638 19.9481 18.2338 19.9481C18.2038 19.9481 18.1768 19.9391 18.1528 19.9211C18.1348 19.8971 18.1198 19.8551 18.1078 19.7951L17.1448 15.7901H15.1558Z"
        }));
    }));
    i.set("filled", (function() {
        
        return C().createElement(C().Fragment, null,  C().createElement("path", {
            d: "M6.85797 19.5431H8.77497C8.72697 20.3591 8.45697 20.9951 7.96497 21.4511C7.47297 21.9011 6.78897 22.1261 5.91297 22.1261C4.92897 22.1261 4.19097 21.8441 3.69897 21.2801C3.21297 20.7161 2.96997 19.9271 2.96997 18.9131C2.96997 18.2651 3.07797 17.6981 3.29397 17.2121C3.51597 16.7261 3.84897 16.3481 4.29297 16.0781C4.74297 15.8021 5.30997 15.6641 5.99397 15.6641C6.83997 15.6641 7.49397 15.8981 7.95597 16.3661C8.42397 16.8341 8.67897 17.4611 8.72097 18.2471H6.80397C6.76197 17.9531 6.66297 17.7281 6.50697 17.5721C6.35697 17.4161 6.15597 17.3381 5.90397 17.3381C5.57397 17.3381 5.32497 17.4731 5.15697 17.7431C4.98897 18.0071 4.90497 18.3971 4.90497 18.9131C4.90497 19.4051 4.98897 19.7861 5.15697 20.0561C5.33097 20.3201 5.58297 20.4521 5.91297 20.4521C6.14697 20.4521 6.35097 20.3741 6.52497 20.2181C6.69897 20.0621 6.80997 19.8371 6.85797 19.5431Z"
        }),  C().createElement("path", {
            d: "M9.45067 19.9751H11.3497C11.3977 20.1851 11.4847 20.3501 11.6107 20.4701C11.7427 20.5841 11.9287 20.6411 12.1687 20.6411C12.3607 20.6411 12.5167 20.6021 12.6367 20.5241C12.7567 20.4461 12.8167 20.3321 12.8167 20.1821C12.8167 20.0501 12.7657 19.9511 12.6637 19.8851C12.5677 19.8131 12.4177 19.7591 12.2137 19.7231L11.6467 19.6241C10.9327 19.4981 10.4017 19.2761 10.0537 18.9581C9.71167 18.6401 9.54067 18.2201 9.54067 17.6981C9.54067 17.2361 9.65467 16.8551 9.88267 16.5551C10.1167 16.2551 10.4257 16.0331 10.8097 15.8891C11.1937 15.7391 11.6107 15.6641 12.0607 15.6641C12.5527 15.6641 12.9907 15.7451 13.3747 15.9071C13.7587 16.0691 14.0617 16.2971 14.2837 16.5911C14.5117 16.8851 14.6287 17.2331 14.6347 17.6351H12.7267C12.6847 17.4731 12.5977 17.3531 12.4657 17.2751C12.3397 17.1971 12.1957 17.1581 12.0337 17.1581C11.8777 17.1581 11.7457 17.1941 11.6377 17.2661C11.5297 17.3381 11.4757 17.4431 11.4757 17.5811C11.4757 17.6531 11.5057 17.7341 11.5657 17.8241C11.6317 17.9081 11.7757 17.9711 11.9977 18.0131L12.5467 18.1121C13.3207 18.2501 13.8817 18.4721 14.2297 18.7781C14.5777 19.0781 14.7517 19.4951 14.7517 20.0291C14.7517 20.4731 14.6437 20.8511 14.4277 21.1631C14.2177 21.4751 13.9177 21.7151 13.5277 21.8831C13.1377 22.0451 12.6817 22.1261 12.1597 22.1261C11.5957 22.1261 11.1127 22.0331 10.7107 21.8471C10.3147 21.6611 10.0087 21.4061 9.79267 21.0821C9.58267 20.7581 9.46867 20.3891 9.45067 19.9751Z"
        }),  C().createElement("path", {
            d: "M15.1558 15.7901L17.1628 22.0001H19.2778L21.2668 15.7901H19.3138L18.3688 19.7951C18.3568 19.8551 18.3388 19.8971 18.3148 19.9211C18.2908 19.9391 18.2638 19.9481 18.2338 19.9481C18.2038 19.9481 18.1768 19.9391 18.1528 19.9211C18.1348 19.8971 18.1198 19.8551 18.1078 19.7951L17.1448 15.7901H15.1558Z"
        }),  C().createElement("path", {
            d: "M19.0003 8.99799H13.5002C12.6718 8.99799 12.0002 8.32641 12.0002 7.49799V1.99805H6.50024C5.67182 1.99805 5.00024 2.66962 5.00024 3.49805V12.998H19.0003V8.99799Z"
        }),  C().createElement("path", {
            d: "M18.8514 6.99799H14.0002V2.14687C14.1506 2.21936 14.2892 2.31711 14.4095 2.4374L18.561 6.58895C18.6812 6.70917 18.7789 6.8477 18.8514 6.99799Z"
        }));
    }));
    var d = [ "default", "outlined", "filled" ];
    var f = function e(t) {
        return d.indexOf(t) >= 0;
    };
    var v = function e(t) {
        return t === "default" || t && !f(t) ? "outlined" : t;
    };
    /**
 * @description File CSV is one of file formats
 * @category File Extensions
 * @keywords document format
 * @variants outlined,filled
 */    var p = function e(t) {
        var n = t.children, u = t.variant, c = o(t, [ "children", "variant" ]);
        var d = v(u);
        var f = "filecsv-".concat(d);
        var p = (0, r.useContext)(l.IconContext);
        var s = i.get(d);
        if (false) {}
        if (p && s) {
            var H = p.toRender, m = p.addIcon;
            m(f, s());
            if (!H) {
                return null;
            }
        }
        
        return C().createElement(a(), c, n, p ?  C().createElement("use", {
            href: "#".concat(f)
        }) : !!s && s());
    };
    p.defaultProps = c;
    /* harmony default export */    const s = p;
    module.exports = t;
    /******/})();