import React from 'react';
import PropTypes from 'prop-types';
interface SVGPropsBase {
    children?: React.ReactNode;
    /** When false, display as inline-block. */
    inline?: boolean;
    /**
     * @private
     * Defaults to 16px. Width is defined as a number of px or as a string with any other unit.
     */
    height?: number | string;
    /**
     * @private
     * Defaults to 0 0 24 24 as per the Figma
     */
    viewBox?: string;
    /**
     * @private
     * Defaults to 16px. Width is defined as a number of px or as a string with any other unit.
     */
    width?: number | string;
}
type SVGProps = SVGPropsBase & Omit<JSX.IntrinsicElements['svg'], keyof SVGPropsBase | 'ref' | 'color'>;
declare function SVG({ children, height, inline, viewBox, width, ...otherProps }: SVGProps): JSX.Element;
declare namespace SVG {
    var defaultProps: {
        inline: boolean;
        height: string;
        viewBox: string;
        width: string;
    };
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        height: PropTypes.Requireable<NonNullable<string | number | null | undefined>>;
        inline: PropTypes.Requireable<boolean>;
        width: PropTypes.Requireable<NonNullable<string | number | null | undefined>>;
    };
}
export default SVG;
