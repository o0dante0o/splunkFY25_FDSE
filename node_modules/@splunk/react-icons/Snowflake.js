/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var n in t) {
                /******/ if (e.o(t, n) && !e.o(r, n)) {
                    /******/ Object.defineProperty(r, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* binding */ s
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var n =  e.n(t);
    // CONCATENATED MODULE: external "@splunk/react-icons/SVG"
    const L = require("@splunk/react-icons/SVG");
    var C =  e.n(L);
    // CONCATENATED MODULE: external "@splunk/react-icons/IconProvider"
    const a = require("@splunk/react-icons/IconProvider");
    // CONCATENATED MODULE: ./src/icons/Snowflake.tsx
    function o(e, r) {
        if (e == null) return {};
        var t = l(e, r);
        var n, L;
        if (Object.getOwnPropertySymbols) {
            var C = Object.getOwnPropertySymbols(e);
            for (L = 0; L < C.length; L++) {
                n = C[L];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function l(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var L, C;
        for (C = 0; C < n.length; C++) {
            L = n[C];
            if (r.indexOf(L) >= 0) continue;
            t[L] = e[L];
        }
        return t;
    }
    var u = {
        variant: "default"
    };
    var i = new Map;
    i.set("outlined", (function() {
        
        return n().createElement(n().Fragment, null,  n().createElement("path", {
            d: "M6.88091 3.13389C7.3592 2.85775 7.97079 3.02163 8.24693 3.49993L9.36577 5.43785L9.79878 5.18785C10.2771 4.91171 10.8887 5.07558 11.1648 5.55387C11.4409 6.03217 11.2771 6.64376 10.7988 6.9199L10.3658 7.1699L11.9995 9.99967L13.6333 7.1699L13.2003 6.9199C12.722 6.64376 12.5581 6.03217 12.8343 5.55388C13.1104 5.07558 13.722 4.91171 14.2003 5.18785L14.6333 5.43785L15.7522 3.49994C16.0283 3.02165 16.6399 2.85778 17.1182 3.13392C17.5965 3.41007 17.7604 4.02166 17.4842 4.49995L16.3654 6.43785L16.7984 6.68785C17.2767 6.96399 17.4405 7.57558 17.1644 8.05388C16.8883 8.53217 16.2767 8.69604 15.7984 8.4199L15.3654 8.1699L13.7314 11H17.0004V10.5C17.0004 9.94771 17.4481 9.5 18.0004 9.5C18.5527 9.5 19.0004 9.94771 19.0004 10.5V11L21.238 11C21.7902 11 22.238 11.4477 22.238 12C22.238 12.5523 21.7903 13 21.238 13L19.0004 13V13.5C19.0004 14.0523 18.5527 14.5 18.0004 14.5C17.4481 14.5 17.0004 14.0523 17.0004 13.5V13H13.7318L15.3658 15.8302L15.7988 15.5802C16.2771 15.304 16.8887 15.4679 17.1648 15.9462C17.4409 16.4245 17.2771 17.0361 16.7988 17.3122L16.3658 17.5622L17.4846 19.5C17.7607 19.9783 17.5968 20.5899 17.1185 20.866C16.6403 21.1421 16.0287 20.9783 15.7525 20.5L14.6337 18.5622L14.2007 18.8122C13.7224 19.0883 13.1108 18.9245 12.8347 18.4462C12.5585 17.9679 12.7224 17.3563 13.2007 17.0802L13.6337 16.8302L11.9995 13.9997L10.3654 16.8302L10.7984 17.0802C11.2767 17.3563 11.4405 17.9679 11.1644 18.4462C10.8883 18.9245 10.2767 19.0883 9.79837 18.8122L9.36536 18.5622L8.2466 20.5C7.97046 20.9783 7.35887 21.1422 6.88057 20.866C6.40228 20.5899 6.2384 19.9783 6.51454 19.5L7.63331 17.5622L7.20029 17.3122C6.722 17.0361 6.55813 16.4245 6.83427 15.9462C7.11041 15.4679 7.722 15.304 8.20029 15.5802L8.63331 15.8302L10.2673 13H7.00041V13.5C7.00041 14.0523 6.55269 14.5 6.00041 14.5C5.44812 14.5 5.00041 14.0523 5.00041 13.5V13L2.76269 13C2.2104 13 1.76269 12.5523 1.7627 12C1.7627 11.4477 2.21042 11 2.7627 11L5.00041 11L5.00041 10.5C5.00041 9.94771 5.44812 9.5 6.00041 9.5C6.55269 9.5 7.00041 9.94771 7.00041 10.5V11H10.2677L8.63372 8.1699L8.2007 8.4199C7.72241 8.69604 7.11082 8.53217 6.83468 8.05388C6.55853 7.57558 6.72241 6.96399 7.2007 6.68785L7.63372 6.43785L6.51487 4.49992C6.23874 4.02162 6.40262 3.41003 6.88091 3.13389Z"
        }));
    }));
    i.set("filled", (function() {
        
        return n().createElement(n().Fragment, null,  n().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.51431 3.49991C6.69294 3.19049 7.02308 2.99988 7.38036 2.99988L16.6177 2.9999C16.9749 2.9999 17.305 3.19047 17.4837 3.49984L22.1032 11.4999C22.2819 11.8093 22.2819 12.1905 22.1032 12.5L17.484 20.5C17.3054 20.8093 16.9752 20.9999 16.618 20.9999L7.38002 21C7.02273 21 6.69258 20.8093 6.51396 20.4999L1.8959 12.4999C1.71731 12.1905 1.71732 11.8093 1.89592 11.5L6.51431 3.49991ZM7.95884 4.99989L7.45373 5.87484L8.05331 6.91337L7.6195 7.16383C7.201 7.40546 7.05761 7.9406 7.29923 8.3591C7.54086 8.77761 8.076 8.921 8.4945 8.67938L8.92831 8.42892L10.4848 11.1249H7.37304L7.37304 10.624C7.37304 10.1408 6.98129 9.74901 6.49804 9.74901C6.01479 9.74901 5.62304 10.1408 5.62304 10.624V11.1249L4.42289 11.1249L3.91773 12L4.4228 12.8749L5.62304 12.8749V13.3758C5.62304 13.8591 6.01479 14.2508 6.49804 14.2508C6.98129 14.2508 7.37304 13.8591 7.37304 13.3758L7.37304 12.8749H10.485L8.9284 15.571L8.4946 15.3206C8.07609 15.0789 7.54095 15.2223 7.29933 15.6408C7.0577 16.0593 7.20109 16.5945 7.6196 16.8361L8.05341 17.0866L7.45366 18.1254L7.95852 19L8.96945 19L9.56895 17.9616L10.0028 18.212C10.4213 18.4536 10.9564 18.3103 11.198 17.8918C11.4396 17.4732 11.2963 16.9381 10.8778 16.6965L10.4439 16.446L12.0005 13.7501L13.557 16.446L13.1232 16.6965C12.7047 16.9381 12.5613 17.4732 12.8029 17.8917C13.0445 18.3102 13.5797 18.4536 13.9982 18.212L14.432 17.9615L15.0315 19L16.0418 18.9999L16.547 18.1249L15.9475 17.0865L16.3813 16.8361C16.7998 16.5945 16.9432 16.0593 16.7016 15.6408C16.46 15.2223 15.9248 15.0789 15.5063 15.3205L15.0725 15.571L13.5159 12.8749H16.6304V13.3758C16.6304 13.8591 17.0221 14.2508 17.5054 14.2508C17.9886 14.2508 18.3804 13.8591 18.3804 13.3758V12.8749L19.5784 12.8749L20.0836 12L19.5783 11.1249L18.3804 11.1249V10.624C18.3804 10.1408 17.9886 9.74901 17.5054 9.74901C17.0221 9.74901 16.6304 10.1408 16.6304 10.624V11.1249H13.5161L15.0726 8.42895L15.5064 8.67941C15.9249 8.92103 16.4601 8.77764 16.7017 8.35913C16.9433 7.94063 16.7999 7.40549 16.3814 7.16386L15.9476 6.91341L16.547 5.87532L16.0415 4.99991L15.0317 4.99991L14.4321 6.03841L13.9983 5.78795C13.5798 5.54632 13.0446 5.68971 12.803 6.10822C12.5614 6.52673 12.7048 7.06187 13.1233 7.30349L13.5571 7.55395L12.0005 10.2501L10.4439 7.55392L10.8777 7.30346C11.2962 7.06184 11.4396 6.52669 11.1979 6.10819C10.9563 5.68968 10.4212 5.54629 10.0027 5.78792L9.56886 6.03837L8.9693 4.99989L7.95884 4.99989Z"
        }));
    }));
    var c = [ "default", "outlined", "filled" ];
    var f = function e(r) {
        return c.indexOf(r) >= 0;
    };
    var d = function e(r) {
        return r === "default" || r && !f(r) ? "outlined" : r;
    };
    /**
 * @description Cold weather, snow and ice, low temperature, frozen, Objects, freezer, freezing, crystal
 *
 *
 * @variants outlined,filled
 */    var v = function e(r) {
        var L = r.children, l = r.variant, u = o(r, [ "children", "variant" ]);
        var c = d(l);
        var f = "snowflake-".concat(c);
        var v = (0, t.useContext)(a.IconContext);
        var s = i.get(c);
        if (false) {}
        if (v && s) {
            var p = v.toRender, m = v.addIcon;
            m(f, s());
            if (!p) {
                return null;
            }
        }
        
        return n().createElement(C(), u, L, v ?  n().createElement("use", {
            href: "#".concat(f)
        }) : !!s && s());
    };
    v.defaultProps = u;
    /* harmony default export */    const s = v;
    module.exports = r;
    /******/})();