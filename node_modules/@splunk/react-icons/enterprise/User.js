/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var n in t) {
                /******/ if (e.o(t, n) && !e.o(r, n)) {
                    /******/ Object.defineProperty(r, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* binding */ i
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var n =  e.n(t);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const o = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/react-icons/SVGInternal"
    const a = require("@splunk/react-icons/SVGInternal");
    var c =  e.n(a);
    // CONCATENATED MODULE: ./src/enterprise/User.tsx
    function u() {
        u = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return u.apply(this, arguments);
    }
    /* eslint-disable max-len */    function i(e) {
        
        return n().createElement(c(), u({
            screenReaderText: (0, o._)("User")
        }, e),  n().createElement("path", {
            d: "M1407.534 1233.904c61.644 37.67 92.466 76.37 92.466 116.096v150H0v-150c0-17.808 9.075-34.418 27.226-49.83 18.15-15.41 45.377-33.732 81.678-54.965C183.562 1202.055 272.26 1161.985 375 1125c49.315-17.123 87.5-32.02 114.555-44.692 27.055-12.67 49.486-27.568 67.294-44.692 17.808-17.123 29.45-35.616 34.93-55.48 5.48-19.862 8.22-45.89 8.22-78.08-60.96-54.796-113.7-125-158.22-210.618C397.26 605.822 375 525.342 375 450c0-146.575 33.562-258.22 100.685-334.932C542.808 38.356 634.247 0 750 0c115.753 0 207.192 38.356 274.315 115.068C1091.438 191.78 1125 303.425 1125 450c0 75.342-22.26 155.822-66.78 241.438C1013.7 777.055 960.96 847.26 900 902.055c0 60.274 13.7 103.424 41.096 129.452 27.397 26.027 88.7 57.192 183.904 93.493 10.274 3.425 34.59 11.815 72.945 25.17 38.356 13.357 66.78 23.46 85.274 30.31 18.492 6.85 40.41 15.41 65.753 25.684 25.342 10.274 44.863 19.52 58.56 27.74z"
        }));
    }
    module.exports = r;
    /******/})();