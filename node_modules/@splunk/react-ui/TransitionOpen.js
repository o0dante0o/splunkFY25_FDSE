/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        default: () => /* reexport */ W
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var a =  e.n(o);
    // CONCATENATED MODULE: external "lodash/keys"
    const i = require("lodash/keys");
    var s =  e.n(i);
    // CONCATENATED MODULE: external "lodash/omit"
    const l = require("lodash/omit");
    var u =  e.n(l);
    // CONCATENATED MODULE: external "@splunk/react-ui/Animation"
    const c = require("@splunk/react-ui/Animation");
    // CONCATENATED MODULE: external "@splunk/ui-utils/focus"
    const f = require("@splunk/ui-utils/focus");
    // CONCATENATED MODULE: external "@splunk/ui-utils/style"
    const p = require("@splunk/ui-utils/style");
    // CONCATENATED MODULE: external "react-spring"
    const d = require("react-spring");
    // CONCATENATED MODULE: external "styled-components"
    const m = require("styled-components");
    var y =  e.n(m);
    // CONCATENATED MODULE: external "@splunk/themes"
    const h = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/TransitionOpen/TransitionOpenStyles.ts
    var v = y()(d.animated.div).withConfig({
        displayName: "TransitionOpenStyles__Styled",
        componentId: "sc-1x58s0g-0"
    })([ "", ";", ";" ], h.mixins.reset("block"), (function(e) {
        var t = e.$hideOverflow;
        return t && (0, m.css)([ "overflow:hidden;" ]);
    }));
    var b = y()(d.animated.div).withConfig({
        displayName: "TransitionOpenStyles__StyledInner",
        componentId: "sc-1x58s0g-1"
    })([ "", ";", ";width:100%;" ], h.mixins.reset("table"), h.mixins.clearfix());
    // CONCATENATED MODULE: ./src/TransitionOpen/TransitionOpen.tsx
    function g(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            g = function e(t) {
                return typeof t;
            };
        } else {
            g = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return g(e);
    }
    function O() {
        O = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return O.apply(this, arguments);
    }
    function w(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function S(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                w(Object(n), true).forEach((function(t) {
                    R(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                w(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function j(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function F(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function x(e, t, n) {
        if (t) F(e.prototype, t);
        if (n) F(e, n);
        return e;
    }
    function P(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) T(e, t);
    }
    function T(e, t) {
        T = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return T(e, t);
    }
    function k(e) {
        var t = _();
        return function n() {
            var r = N(e), o;
            if (t) {
                var a = N(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return E(this, o);
        };
    }
    function E(e, t) {
        if (t && (g(t) === "object" || typeof t === "function")) {
            return t;
        }
        return C(e);
    }
    function C(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function _() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function N(e) {
        N = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return N(e);
    }
    function R(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var q = {
        animation: a().oneOf([ "slideFromTop", "slideFromRight", "slideFromBottom", "slideFromLeft", "expandHeight", "expandWidth", "none" ]),
        animateOnMount: a().bool,
        children: a().node,
        className: a().string,
        id: a().string,
        innerClassName: a().string,
        innerStyle: a().object,
        onAnimationEnd: a().func,
        open: a().bool,
        outerClassName: a().string,
        outerId: a().string,
        outerStyle: a().object,
        renderChildrenWhenCollapsed: a().bool,
        retainFocus: a().bool,
        takeFocus: a().bool
    };
    var D = {
        animation: "expandHeight",
        animateOnMount: false,
        innerStyle: {},
        open: false,
        outerStyle: {},
        renderChildrenWhenCollapsed: false,
        retainFocus: false,
        takeFocus: false
    };
    var M =  function(e) {
        P(n, e);
        var t = k(n);
        // @docs-props-type TransitionOpenPropsBase
                function n(e) {
            var o;
            j(this, n);
            o = t.call(this, e);
            R(C(o), "allowAnimationUpdates", true);
            R(C(o), "getValue", (function(e) {
                var t = o.props.animation;
                var n = 0;
                if (e) {
                    if (o.props.takeFocus) {
                        (0, f.takeFocus)(e, "container");
                    }
                    switch (t) {
                      case "slideFromTop":
                      case "slideFromBottom":
                      case "expandHeight":
                      case "none":
                        n = e.offsetHeight;
                        break;

                      case "slideFromLeft":
                      case "slideFromRight":
                      case "expandWidth":
                        n = e.offsetWidth;
                        break;

                      default:
 // Intentionally left empty.
                                        }
                }
                return n;
            }));
            R(C(o), "handleMount", (function(e) {
                var t = o.getValue(e);
                o.setState({
                    value: t,
                    innerEl: e
                });
            }));
            R(C(o), "handleRest", (function() {
                var e, t;
                if (o.allowAnimationUpdates) {
                    o.setState({
                        animating: false
                    });
                }
                (e = (t = o.props).onAnimationEnd) === null || e === void 0 ? void 0 : e.call(t);
            }));
            R(C(o), "handleTab", (function(e) {
                if (o.state.innerEl) {
                    (0, f.handleTab)(o.state.innerEl, e);
                }
            }));
            R(C(o), "internalRender", (function(e) {
                var t = e.value, a = e.transform;
                var i = o.props, l = i.animation, c = i.className, f = i.children, d = i.id, m = i.innerClassName, y = i.innerStyle, h = i.open, g = i.outerClassName, w = i.outerId, j = i.outerStyle, F = i.renderChildrenWhenCollapsed;
                var x = o.state.animating;
                var P;
                if (x) {
                    switch (l) {
                      case "slideFromTop":
                      case "slideFromBottom":
                      case "expandHeight":
                      case "none":
                        P = "height";
                        break;

                      case "slideFromLeft":
                      case "slideFromRight":
                      case "expandWidth":
                        P = "width";
                        break;

                      default:
 // Intentionally left empty.
                                        }
                }
                if (!h && !x && F) {
                    
                    return r().createElement(v, {
                        $hideOverflow: false,
                        className: (0, p.toClassName)(c, g),
                        style: S(S({}, j), P && R({}, P, t)),
                        id: w
                    },  r().createElement(b, O({
                        "data-test": "transition-open"
                    }, u()(o.props, s()(n.propTypes)), {
                        ref: o.handleMount,
                        tabIndex: -1,
                        className: m,
                        id: d,
                        onKeyDown: o.props.retainFocus ? o.handleTab : undefined,
                        style: S(S({}, y), {}, {
                            transform: a,
                            display: "none"
                        })
                    }), f));
                }
                /* eslint-disable jsx-a11y/no-static-element-interactions */                
                return r().createElement(v, {
                    $hideOverflow: !h || x,
                    className: (0, p.toClassName)(c, g),
                    style: S(S({}, j), P && R({}, P, t)),
                    id: w
                }, (h || x) &&  r().createElement(b, O({
                    "data-test": "transition-open"
                }, u()(o.props, s()(n.propTypes)), {
                    ref: o.handleMount,
                    tabIndex: -1,
                    className: m,
                    id: d,
                    onKeyDown: o.props.retainFocus ? o.handleTab : undefined,
                    style: S(S({}, y), {}, {
                        transform: a
                    })
                }), f));
            }));
            R(C(o), "getSpringTransition", (function() {
                var e = o.props, t = e.open, n = e.animation;
                var r = o.state.value;
                var a = {
                    value: t ? r : 0
                };
                var i = {
                    value: t ? 0 : r
                };
                var s = {
                    precision: 1
                };
 // Only use precision when not using transform, otherwise transform animation will break
                // Expansion doesn't require a valid value; the subsequent render animates it.
                                if (n === "expandWidth" || n === "expandHeight" || n === "none") {
                    return {
                        to: a,
                        config: s
                    };
                }
 // Slide transitions require a valid value, render without transition first.
                                if (!r) {
                    return null;
                }
                if (n !== "slideFromTop" && n !== "slideFromLeft") {
                    // Return the standard transition if not using a transform.
                    return {
                        to: a,
                        from: i,
                        config: s
                    };
                }
 // The top and left directions require an additional transform of their inner content to match the outer dimension animation.
                // This is needed to achieve a clipping effect from the outer div, rather than the consumer providing their own.
                                var l = n === "slideFromTop" ? "Y" : "X";
                var u = "translate".concat(l, "(").concat(t ? 0 : -r, "px)");
                var c = "translate".concat(l, "(").concat(t ? -r : 0, "px)");
                return {
                    to: S({
                        transform: u
                    }, a),
                    from: S({
                        transform: c
                    }, i)
                };
            }));
            o.state = {
                animating: e.animateOnMount ? e.open : false,
                innerEl: null,
                prevOpen: e.open
            };
            return o;
        }
        x(n, [ {
            key: "componentDidUpdate",
            value: function e() {
                var t = this.getValue(this.state.innerEl);
                if (this.state.value !== t && !this.state.animating) {
                    this.setState({
                        value: t
                    });
 // eslint-disable-line react/no-did-update-set-state
                                }
            }
        }, {
            key: "componentWillUnmount",
            value: function e() {
                this.allowAnimationUpdates = false;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props.animation;
                
                return r().createElement(c.Spring, O({}, this.getSpringTransition(), {
                    immediate: t === "none",
                    onRest: this.handleRest
                }), // eslint-disable-next-line @typescript-eslint/no-explicit-any
                this.internalRender);
            }
        } ]);
        return n;
    }(n.Component);
    R(M, "propTypes", q);
    R(M, "defaultProps", D);
    R(M, "getDerivedStateFromProps", (function(e, t) {
        if (e.open !== t.prevOpen) {
            return {
                animating: true,
                prevOpen: e.open
            };
        }
        return null;
    }));
    /* harmony default export */    const W = M;
    // CONCATENATED MODULE: ./src/TransitionOpen/index.ts
    module.exports = t;
    /******/})();