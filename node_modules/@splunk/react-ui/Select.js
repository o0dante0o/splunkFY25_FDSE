/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Divider: () => /* reexport */ T.Divider,
        Heading: () => /* reexport */ T.Heading,
        Option: () => /* reexport */ nn,
        default: () => /* reexport */ xn
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "lodash/has"
    const a = require("lodash/has");
    var l =  e.n(a);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const s = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "lodash/castArray"
    const c = require("lodash/castArray");
    var u =  e.n(c);
    // CONCATENATED MODULE: external "lodash/find"
    const p = require("lodash/find");
    var f =  e.n(p);
    // CONCATENATED MODULE: external "lodash/forEachRight"
    const d = require("lodash/forEachRight");
    var v =  e.n(d);
    // CONCATENATED MODULE: external "lodash/includes"
    const h = require("lodash/includes");
    var b =  e.n(h);
    // CONCATENATED MODULE: external "lodash/isUndefined"
    const m = require("lodash/isUndefined");
    var y =  e.n(m);
    // CONCATENATED MODULE: external "lodash/keys"
    const g = require("lodash/keys");
    var O =  e.n(g);
    // CONCATENATED MODULE: external "lodash/memoize"
    const S = require("lodash/memoize");
    var x =  e.n(S);
    // CONCATENATED MODULE: external "lodash/omit"
    const w = require("lodash/omit");
    var C =  e.n(w);
    // CONCATENATED MODULE: external "lodash/pick"
    const k = require("lodash/pick");
    var I =  e.n(k);
    // CONCATENATED MODULE: external "lodash/uniq"
    const _ = require("lodash/uniq");
    var A =  e.n(_);
    // CONCATENATED MODULE: external "lodash/without"
    const j = require("lodash/without");
    var E =  e.n(j);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const M = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/react-ui/Menu"
    const T = require("@splunk/react-ui/Menu");
    // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
    const P = require("@splunk/react-ui/Dropdown");
    var V =  e.n(P);
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const R = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/ui-utils/filter"
    const D = require("@splunk/ui-utils/filter");
    // CONCATENATED MODULE: external "@splunk/react-ui/Link"
    const L = require("@splunk/react-ui/Link");
    var q =  e.n(L);
    // CONCATENATED MODULE: external "@splunk/react-ui/ResultsMenu"
    const N = require("@splunk/react-ui/ResultsMenu");
    var B =  e.n(N);
    // CONCATENATED MODULE: external "@splunk/react-ui/Text"
    const K = require("@splunk/react-ui/Text");
    var F =  e.n(K);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
    const H = require("@splunk/react-icons/CaretSmallDown");
    var $ =  e.n(H);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
    const z = require("@splunk/react-icons/enterprise/Caret");
    var W =  e.n(z);
    // CONCATENATED MODULE: external "@splunk/themes"
    const U = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Select/icons/CaretSmallDown.tsx
    var G = function e() {
        var t = (0, U.useSplunkTheme)(), n = t.isEnterprise;
        var o = n ?  r().createElement(W(), {
            screenReaderText: null,
            hideDefaultTooltip: true,
            size: .5
        }) :  r().createElement($(), null);
        return o;
    };
    /* harmony default export */    const J = G;
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Search"
    const Q = require("@splunk/react-icons/enterprise/Search");
    var X =  e.n(Q);
    // CONCATENATED MODULE: external "@splunk/react-icons/Magnifier"
    const Y = require("@splunk/react-icons/Magnifier");
    var Z =  e.n(Y);
    // CONCATENATED MODULE: ./src/Select/icons/Search.tsx
    var ee = function e() {
        var t = (0, U.useSplunkTheme)(), n = t.isEnterprise, o = t.isCompact;
        var i = (0, s._)("Search");
        var a = o ? "20px" : "24px";
        var l = n ?  r().createElement(X(), {
            role: "presentation",
            size: "16px",
            screenReaderText: i,
            hideDefaultTooltip: true
        }) :  r().createElement(Z(), {
            role: "presentation",
            "aria-label": i,
            width: a,
            height: a
        });
        return l;
    };
    /* harmony default export */    const te = ee;
    // CONCATENATED MODULE: ./src/Select/OptionBase.tsx
    function ne(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            ne = function e(t) {
                return typeof t;
            };
        } else {
            ne = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return ne(e);
    }
    function re() {
        re = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return re.apply(this, arguments);
    }
    function oe(e, t) {
        if (e == null) return {};
        var n = ie(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function ie(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function ae(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function le(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function se(e, t, n) {
        if (t) le(e.prototype, t);
        if (n) le(e, n);
        return e;
    }
    function ce(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) ue(e, t);
    }
    function ue(e, t) {
        ue = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return ue(e, t);
    }
    function pe(e) {
        var t = ve();
        return function n() {
            var r = he(e), o;
            if (t) {
                var i = he(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return fe(this, o);
        };
    }
    function fe(e, t) {
        if (t && (ne(t) === "object" || typeof t === "function")) {
            return t;
        }
        return de(e);
    }
    function de(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function ve() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function he(e) {
        he = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return he(e);
    }
    function be(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var me = {
        /** @private */
        active: i().bool,
        children: i().node,
        description: i().string,
        descriptionPosition: i().oneOf([ "right", "bottom" ]),
        disabled: i().bool,
        hidden: i().bool,
        icon: i().node,
        label: i().string.isRequired,
        /**
   * @private Passed down from <BaseSelect>
   */
        multiple: i().bool,
        matchRanges: i().arrayOf(i().shape({
            start: i().number.isRequired,
            end: i().number.isRequired
        })),
        /** @private */
        onClick: i().func,
        /** @private */
        selected: i().bool,
        truncate: i().bool,
        value: i().oneOfType([ i().string, i().number, i().bool ]).isRequired
    };
    var ye = {
        descriptionPosition: "bottom",
        disabled: false,
        multiple: false,
        selected: false,
        truncate: false
    };
    /**
 * An option within a `Multiselect`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */    var ge =  function(e) {
        ce(n, e);
        var t = pe(n);
        function n() {
            var e;
            ae(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            be(de(e), "c", null);
            be(de(e), "handleClick", (function(t) {
                var n = e.props, r = n.onClick, o = n.value, i = n.disabled;
                if (!i) {
                    r === null || r === void 0 ? void 0 : r(t, {
                        value: o
                    });
                }
            }));
            be(de(e), "handleMount", (function(t) {
                e.c = t;
            }));
            return e;
        }
        se(n, [ {
            key: "scrollIntoViewIfNeeded",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.scrollIntoViewIfNeeded();
            }
            /**
     * Place focus on the button.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, n = t.value, o = t.children, i = t.label, a = t.multiple, l = oe(t, [ "value", "children", "label", "multiple" ]);
                
                return r().createElement(T.Item, re({
                    "aria-selected": this.props.selected,
                    "data-test-value": n,
                    "data-test": "option",
                    ref: this.handleMount
                }, l, {
                    selectable: true,
                    selectableAppearance: a ? "checkbox" : undefined,
                    onClick: this.handleClick,
                    role: "option",
                    value: n.toString()
                }), o || i);
            }
        } ]);
        return n;
    }(n.PureComponent);
    be(ge, "propTypes", me);
    be(ge, "defaultProps", ye);
    be(ge, "type", T.Item);
    /* harmony default export */    const Oe = ge;
    // CONCATENATED MODULE: external "styled-components"
    const Se = require("styled-components");
    var xe =  e.n(Se);
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const we = require("@splunk/react-ui/Clickable");
    var Ce =  e.n(we);
    // CONCATENATED MODULE: external "@splunk/react-ui/Switch"
    const ke = require("@splunk/react-ui/Switch");
    var Ie =  e.n(ke);
    // CONCATENATED MODULE: ./src/Menu/ItemStyles.ts
    var _e = (0, Se.css)([ "color:", ";font-size:", ";line-height:", ";overflow:inherit;white-space:inherit;text-overflow:inherit;" ], (0, 
    U.pick)({
        prisma: U.variables.contentColorDefault,
        enterprise: U.variables.textGray
    }), U.variables.fontSizeSmall, (0, U.pick)({
        prisma: "16px"
    }));
    var Ae = xe().span.withConfig({
        displayName: "ItemStyles__StyledItemDescriptionBottom",
        componentId: "sc-4kc053-0"
    })([ "", ";display:block;" ], _e);
    var je = xe().span.withConfig({
        displayName: "ItemStyles__StyledItemDescriptionRight",
        componentId: "sc-4kc053-1"
    })([ "", ";float:right;padding-left:", ";max-width:50%;text-align:right;box-sizing:border-box;" ], _e, U.variables.spacing);
    var Ee = xe().div.withConfig({
        displayName: "ItemStyles__StyledItemSelectedIcon",
        componentId: "sc-4kc053-2"
    })([ "position:absolute;", " color:", ";" ], (0, U.pick)({
        prisma: (0, Se.css)([ "right:16px;" ]),
        enterprise: (0, Se.css)([ "right:3px;left:8px;" ])
    }), (0, U.pick)({
        prisma: U.variables.contentColorActive,
        enterprise: U.variables.accentColorL10
    }));
    var Me = xe().span.withConfig({
        displayName: "ItemStyles__StyledItemIcon",
        componentId: "sc-4kc053-3"
    })([ "flex:0 0 auto;padding-right:", ";min-width:10px;display:inline-block;text-align:center;vertical-align:", ";", "" ], (0, 
    U.pick)({
        prisma: "8px",
        enterprise: "3px"
    }), (0, U.pick)({
        prisma: "initial",
        enterprise: "middle"
    }), (0, U.pick)({
        prisma: (0, Se.css)([ "color:", ";display:inline-flex;align-items:center;min-width:20px;min-height:20px;& > svg{width:20px;height:20px;}" ], U.variables.contentColorMuted),
        enterprise: (0, Se.css)([ "transform:translateY(-1px);" ])
    }));
    var Te = xe()(Ce()).withConfig({
        displayName: "ItemStyles__StyledClickable",
        componentId: "sc-4kc053-4"
    })([ "display:block;position:relative;cursor:pointer;color:", ";word-wrap:break-word;max-width:100%;width:100%;padding:", ";", " ", " ", " &:not([disabled]){&:hover{background:", ";", "}&:focus{outline:0;box-shadow:", ";", "}", " ", "}&[disabled]{color:", ";cursor:not-allowed;", ",", "{color:inherit;}", "{cursor:not-allowed;color:", ";}", "}", "" ], (0, 
    U.pick)({
        prisma: U.variables.contentColorActive,
        enterprise: {
            dark: U.variables.gray96,
            light: U.variables.gray22
        }
    }), (0, U.pick)({
        prisma: {
            comfortable: "10px 16px",
            compact: "6px 16px"
        },
        enterprise: "6px 10px"
    }), (function(e) {
        var t = e.$isSelectable, n = e.$selectableAppearance;
        return t && (0, U.pick)({
            prisma: (0, Se.css)([ "padding-right:44px;", "" ], (function() {
                return n === "checkbox" && "padding-left: 42px;";
            })),
            enterprise: (0, Se.css)([ "padding-right:10px;padding-left:", ";" ], (function() {
                return n === "checkbox" ? "32px" : "28px";
            }))
        });
    }), (function(e) {
        var t = e.$active, n = e.$preventFocus;
        return t && !n && (0, Se.css)([ "box-shadow:", ";" ], U.variables.focusShadowInset);
    }), (function(e) {
        var t = e.$active;
        return t && (0, Se.css)([ "background:", ";font-weight:", ";" ], (0, U.pick)({
            enterprise: {
                light: U.variables.gray92,
                dark: U.variables.gray22
            },
            prisma: U.variables.neutral100
        }), U.variables.fontWeightBold);
    }), (0, U.pick)({
        prisma: U.variables.interactiveColorOverlayHover,
        enterprise: U.variables.backgroundColorHover
    }), (function(e) {
        var t = e.$selected;
        return t && (0, U.pick)({
            prisma: (0, Se.css)([ "background:", ";" ], U.mixins.overlayColors(U.variables.interactiveColorOverlaySelected, U.variables.interactiveColorOverlayHover))
        });
    }), U.variables.focusShadowInset, (0, U.pick)({
        prisma: (0, Se.css)([ "background:", ";" ], U.variables.interactiveColorOverlayHover)
    }), (0, U.pick)({
        prisma: (0, Se.css)([ "&:active{background:", ";}" ], U.variables.interactiveColorOverlayActive)
    }), (function(e) {
        var t = e.$selected;
        return t && (0, U.pick)({
            prisma: (0, Se.css)([ "background:", ";&:active{background:", ";}" ], U.variables.interactiveColorOverlaySelected, U.mixins.overlayColors(U.variables.interactiveColorOverlaySelected, U.variables.interactiveColorOverlayActive))
        });
    }), (0, U.pick)({
        enterprise: {
            light: U.variables.gray45,
            dark: U.variables.contentColorDisabled
        },
        prisma: U.variables.contentColorDisabled
    }), 
    /* sc-sel */
    Ae, 
    /* sc-sel */
    je, 
    /* sc-sel */
    Ee, (0, U.pick)({
        prisma: U.variables.contentColorDisabled,
        enterprise: U.variables.gray80
    }), (0, U.pick)({
        prisma: (0, Se.css)([ "& > * > ", "{color:", ";}" ], 
        /* sc-sel */
        Me, U.variables.contentColorDisabled)
    }), (function(e) {
        var t = e.$selected;
        return t && (0, U.pick)({
            prisma: (0, Se.css)([ "", "{color:", ";}" ], 
            /* sc-sel */
            Me, U.variables.contentColorActive)
        });
    }));
    var Pe = xe()(Ie()).withConfig({
        displayName: "ItemStyles__StyledSwitch",
        componentId: "sc-4kc053-5"
    })([ "position:absolute;left:", ";top:", ";" ], (0, U.pick)({
        prisma: "16px",
        enterprise: "8px"
    }), (0, U.pick)({
        prisma: "0px",
        enterprise: {
            comfortable: "-1px",
            compact: "2px"
        }
    }));
    var Ve = xe().span.withConfig({
        displayName: "ItemStyles__StyledInnerWrapper",
        componentId: "sc-4kc053-6"
    })([ "display:flex;align-items:flex-start;" ]);
    var Re = xe().span.withConfig({
        displayName: "ItemStyles__StyledTitleAndDescriptionWrapper",
        componentId: "sc-4kc053-7"
    })([ "display:flex;flex-wrap:wrap;flex-direction:column;max-width:100%;width:100%;align-self:center;word-break:break-word;white-space:normal;", "" ], (function(e) {
        var t = e.$truncate;
        return t && (0, Se.css)([ "white-space:nowrap;overflow:hidden;text-overflow:ellipsis;" ]);
    }));
    var De = xe().div.withConfig({
        displayName: "ItemStyles__StyledLabel",
        componentId: "sc-4kc053-8"
    })([ "overflow:inherit;white-space:inherit;text-overflow:inherit;max-width:100%;min-height:20px;", "" ], (function(e) {
        var t = e.$truncate;
        return t && (0, Se.css)([ "display:block;clear:both;" ]);
    }));
    var Le = xe().span.withConfig({
        displayName: "ItemStyles__StyledMatch",
        componentId: "sc-4kc053-9"
    })([ "border-bottom:1px solid ", ";" ], (0, U.pick)({
        prisma: U.variables.contentColorActive,
        enterprise: {
            dark: U.variables.gray96,
            light: U.variables.gray45
        }
    }));
    var qe = xe().span.withConfig({
        displayName: "ItemStyles__StyledSubmenu",
        componentId: "sc-4kc053-10"
    })([ "float:right;padding-left:", ";color:", ";", "" ], U.variables.spacingSmall, (0, 
    U.pick)({
        prisma: "inherit",
        enterprise: U.variables.textGray
    }), (0, U.pick)({
        prisma: (0, Se.css)([ "& > svg{width:20px;height:20px;}" ])
    }));
    // CONCATENATED MODULE: ./src/Select/SelectAllOptionStyles.ts
    var Ne = xe()(De).withConfig({
        displayName: "SelectAllOptionStyles__StyledSelectAllLabel",
        componentId: "y6bn08-0"
    })([ "font-weight:", ";" ], U.variables.fontWeightBold);
    var Be = xe()(Oe).withConfig({
        displayName: "SelectAllOptionStyles__StyledSelectAllOption",
        componentId: "y6bn08-1"
    })([ "padding-inline-start:", ";box-shadow:none;" ], (0, U.pick)({
        prisma: "42px;",
        enterprise: "32px;"
    }));
    // CONCATENATED MODULE: ./src/Select/SelectAllOption.tsx
    var Ke = {
        active: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        id: i().string,
        onClick: i().func,
        selectAllLabel: i().string,
        totalCount: i().number,
        changedToggle: i().bool,
        selected: i().oneOf([ false, true, "some" ])
    };
    var Fe =  r().forwardRef((function(e, t) {
        var n = e.active, o = e.id, i = e.onClick, a = e.selectAllLabel, l = e.totalCount, c = e.changedToggle, u = e.selected;
        // When toggle is changed the total count is not displayed anymore so the count is now shown in the Select all menu item
                var p = c ? " (".concat(l === null || l === void 0 ? void 0 : l.toString(), ")") : "";
        
        return r().createElement(Be, {
            label: a,
            value: "selectAll",
            key: "selectAll",
            onClick: i,
            "data-test": "select-all",
            "aria-keyshortcuts": "Control+A",
            id: o,
            active: n,
            ref: t,
            tabIndex: -1
        },  r().createElement(Pe, {
            interactive: false,
            selected: u === "some" && "some" || u,
            key: "main-checkbox",
            value: "main-checkbox",
            appearance: "checkbox",
            "aria-label": !u && (0, s._)("No options selected") || u === "some" && (0, s._)("Some options selected") || (0, 
            s._)("All options selected"),
            "data-test": "select-all-switch",
            selectedLabel: u === true ? (0, s._)("All options selected") : (0, s._)("Option selected"),
            unselectedLabel: u === true ? (0, s._)("No options selected") : (0, s._)("Option unselected"),
            someSelectedLabel: (0, s._)("Some options selected")
        }),  r().createElement(je, {
            "data-test": "description"
        }, "".concat(p, " Ctrl-a")),  r().createElement(Ve, null,  r().createElement(Re, {
            $truncate: false
        },  r().createElement(Ne, {
            $truncate: false
        }, a))));
    }));
    Fe.propTypes = Ke;
    /* harmony default export */    const He = Fe;
    // CONCATENATED MODULE: external "@splunk/react-ui/Button"
    const $e = require("@splunk/react-ui/Button");
    var ze =  e.n($e);
    // CONCATENATED MODULE: ./src/Select/SelectBaseStyles.ts
    var We = xe()(ze()).withConfig({
        displayName: "SelectBaseStyles__StyledButton",
        componentId: "sc-16cj7sk-0"
    })([ "&[data-inline]{width:", ";}", "" ], (function(e) {
        var t = e.$multiple;
        return t ? "400px" : "auto";
    }), (function(e) {
        var t = e.$multiple;
        return !t && "flex-grow: 0;";
    }));
    var Ue = xe().span.withConfig({
        displayName: "SelectBaseStyles__StyledLinkIcon",
        componentId: "sc-16cj7sk-1"
    })([ "padding-right:2px;" ]);
    var Ge = xe().span.withConfig({
        displayName: "SelectBaseStyles__StyledLinkCaret",
        componentId: "sc-16cj7sk-2"
    })([ "padding-left:2px;" ]);
    var Je = xe().div.withConfig({
        displayName: "SelectBaseStyles__StyledFilter",
        componentId: "sc-16cj7sk-3"
    })([ "padding:", ";min-width:160px;" ], (0, U.pick)({
        enterprise: "8px",
        prisma: "10px 16px"
    }));
    var Qe = xe().span.withConfig({
        displayName: "SelectBaseStyles__StyledSearchIconWrapper",
        componentId: "sc-16cj7sk-4"
    })([ "color:", ";pointer-events:none;padding:", ";" ], (0, U.pick)({
        enterprise: {
            light: U.variables.gray60,
            dark: U.variables.white
        },
        prisma: U.variables.contentColorMuted
    }), (0, U.pick)({
        comfortable: "0 8px",
        compact: "0 6px"
    }));
    var Xe = xe().span.withConfig({
        displayName: "SelectBaseStyles__StyledCount",
        componentId: "sc-16cj7sk-5"
    })([ "padding-right:", ";" ], (0, U.pick)({
        enterprise: U.variables.spacingQuarter,
        prisma: U.variables.spacingXSmall
    }));
    var Ye = xe()(q()).withConfig({
        displayName: "SelectBaseStyles__StyledControlsLink",
        componentId: "sc-16cj7sk-6"
    })([ "margin-right:20px;", ";" ], (function(e) {
        var t = e.$disabled;
        return t && (0, Se.css)([ "color:", ";" ], U.variables.contentColorDisabled);
    }));
    var Ze = xe().div.withConfig({
        displayName: "SelectBaseStyles__StyledToggleAllControls",
        componentId: "sc-16cj7sk-7"
    })([ "padding:", ";", "" ], (0, U.pick)({
        enterprise: "5px 8px",
        prisma: "10px 16px"
    }), (0, U.pickVariant)("$placement", {
        above: {
            enterprise: (0, Se.css)([ "border-top:", ";" ], U.variables.border),
            prisma: (0, Se.css)([ "border-top:1px solid ", ";" ], U.variables.neutral200)
        },
        below: {
            enterprise: (0, Se.css)([ "border-bottom:", ";" ], U.variables.border),
            prisma: (0, Se.css)([ "border-bottom:1px solid ", ";" ], U.variables.neutral200)
        }
    }));
    // CONCATENATED MODULE: ./src/utils/fuzzyMatch.ts
    // A utility for matching keyboard characters to list values
    var et = function e(t, n) {
        return t ? t.label.charAt(n).toLowerCase() : "";
    };
    var tt = function e(t, n) {
        if (!t.length) {
            return t;
        }
        var r = null;
        var o = false;
        var i = t.filter((function(e) {
            var t = et(e, n.index);
            if (t === n.value) {
                o = true;
                return true;
            }
 // If we haven't found a match yet, keep track of the next closest match.
            // Secondary matching looks for the closest character of a higher value, and failing that, closest of a lower value.
                        if (!o) {
                var i = et(r, n.index);
                if (!i) {
                    r = e;
                } else if (t > n.value) {
                    if (i < n.value) {
                        r = e;
                    } else if (i > t) {
                        r = e;
                    }
                } else if (t > i) {
                    r = e;
                }
            }
            return false;
        }));
        return i.length === 0 && r ? [ r ] : i;
    };
    // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var nt = {
        body: {
            appendChild: function e() {
                return [];
            }
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        activeElement: {
            blur: function e() {},
            nodeName: ""
        },
        querySelector: function e() {
            return null;
        },
        querySelectorAll: function e() {
            return [];
        },
        getElementById: function e() {
            return null;
        },
        createEvent: function e() {
            return {
                initEvent: function e() {}
            };
        },
        createElement: function e() {
            return {
                children: [],
                childNodes: [],
                style: {},
                setAttribute: function e() {},
                getElementsByTagName: function e() {
                    return [];
                }
            };
        },
        createElementNS: function e() {
            return {};
        },
        importNode: function e() {
            return null;
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        }
    };
    function rt() {
        var e = typeof document !== "undefined" ? document : nt;
        return e;
    }
    // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var ot = {
        document: nt,
        navigator: {
            userAgent: ""
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        },
        history: {
            replaceState: function e() {},
            pushState: function e() {},
            go: function e() {},
            back: function e() {}
        },
        CustomEvent: function e() {
            return this;
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        getComputedStyle: function e() {
            return {
                getPropertyValue: function e() {
                    return "";
                }
            };
        },
        Image: function e() {},
        Date: function e() {},
        screen: {},
        setTimeout: function e() {},
        clearTimeout: function e() {},
        matchMedia: function e() {
            return {};
        },
        requestAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                t();
                return null;
            }
            return setTimeout(t, 0);
        },
        cancelAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                return;
            }
            clearTimeout(t);
        }
    };
    function it() {
        var e = typeof window !== "undefined" ? window : ot;
        return e;
    }
    // CONCATENATED MODULE: ./src/Select/SelectBase.tsx
    function at() {
        at = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return at.apply(this, arguments);
    }
    function lt(e, t) {
        return ut(e) || ct(e, t) || dt(e, t) || st();
    }
    function st() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ct(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var i = undefined;
        try {
            for (var a = e[Symbol.iterator](), l; !(r = (l = a.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            i = e;
        } finally {
            try {
                if (!r && a["return"] != null) a["return"]();
            } finally {
                if (o) throw i;
            }
        }
        return n;
    }
    function ut(e) {
        if (Array.isArray(e)) return e;
    }
    function pt(e) {
        return ht(e) || vt(e) || dt(e) || ft();
    }
    function ft() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function dt(e, t) {
        if (!e) return;
        if (typeof e === "string") return bt(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bt(e, t);
    }
    function vt(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function ht(e) {
        if (Array.isArray(e)) return bt(e);
    }
    function bt(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function mt(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function yt(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function gt(e, t, n) {
        if (t) yt(e.prototype, t);
        if (n) yt(e, n);
        return e;
    }
    function Ot(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) St(e, t);
    }
    function St(e, t) {
        St = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return St(e, t);
    }
    function xt(e) {
        var t = kt();
        return function n() {
            var r = It(e), o;
            if (t) {
                var i = It(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return wt(this, o);
        };
    }
    function wt(e, t) {
        if (t && (_t(t) === "object" || typeof t === "function")) {
            return t;
        }
        return Ct(e);
    }
    function Ct(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function kt() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function It(e) {
        It = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return It(e);
    }
    function _t(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _t = function e(t) {
                return typeof t;
            };
        } else {
            _t = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return _t(e);
    }
    function At(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function jt(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                At(Object(n), true).forEach((function(t) {
                    Et(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                At(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function Et(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Mt = {
        allowKeyMatching: i().bool,
        allowNewValues: i().bool,
        animateLoading: i().bool,
        appearance: i().oneOf([ "default", "link", "primary", "pill", "toggle", "flat" ]),
        append: i().bool,
        children: i().node,
        defaultPlacement: i().oneOf([ "above", "below", "vertical" ]),
        defaultValues: i().array,
        describedBy: i().string,
        disabled: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        error: i().bool,
        filter: i().oneOf([ false, true, "controlled" ]),
        footerMessage: i().node,
        inline: i().bool,
        inputId: i().string,
        inputRef: i().oneOfType([ i().func, i().object ]),
        isLoadingOptions: i().bool,
        labelledBy: i().string,
        labelText: i().string,
        loadingMessage: i().node,
        menuStyle: i().object,
        multiple: i().bool,
        name: i().string,
        noOptionsMessage: i().node,
        onChange: i().func,
        onClose: i().func,
        onFilterChange: i().func,
        onOpen: i().func,
        onScroll: i().func,
        onScrollBottom: i().func,
        /** @private. */
        required: i().bool,
        placeholder: i().string,
        prefixLabel: i().string,
        prepend: i().bool,
        repositionMode: i().oneOf([ "none", "flip" ]),
        selectAllAppearance: i().oneOf([ "buttongroup", "checkbox" ]),
        showSelectedValuesFirst: i().oneOf([ "nextOpen", "immediately", "never" ]),
        suffixLabel: i().string,
        tabConfirmsNewValue: i().bool,
        toggleContent: i().oneOf([ "optionChildren", "optionLabel" ]),
        values: i().array,
        /** @private. */
        virtualization: i().number
    };
    var Tt = {
        allowKeyMatching: true,
        allowNewValues: false,
        animateLoading: false,
        appearance: "toggle",
        append: false,
        defaultPlacement: "vertical",
        disabled: false,
        filter: false,
        inline: false,
        isLoadingOptions: false,
        menuStyle: {},
        multiple: false,
        noOptionsMessage: (0, s._)("No matches"),
        placeholder: (0, s._)("Select..."),
        prepend: false,
        repositionMode: "flip",
        selectAllAppearance: "buttongroup",
        tabConfirmsNewValue: false,
        toggleContent: "optionChildren"
    };
    var Pt = x()((function(e) {
        return [ e ];
    }));
 // preserve separate widths for single vs. multi mode
        var Vt = x()((function(e) {
        var t = e.anchorWidth, n = e.isMultiple, r = e.maxHeight, o = e.menuStyle;
        return n ? jt({
            width: Math.max(t !== null && t !== void 0 ? t : 0, 200),
            maxHeight: r
        }, o) : jt({
            minWidth: t !== null && t !== void 0 ? t : undefined,
            maxWidth: Math.max(t !== null && t !== void 0 ? t : 0, 300),
            maxHeight: r
        }, o);
    }));
    var Rt = [ "clickAway", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
    function Dt(e) {
        return e && l()(e.props, "value");
    }
    function Lt(e, t) {
        return "".concat(_t(e), "-").concat(e, "-").concat(t);
    }
    var qt =  function(e) {
        Ot(o, e);
        var t = xt(o);
        gt(o, null, [ {
            key: "validateAppearance",
            // @docs-props-type CompactPropsBase
            value: function e(t) {
                if (false) {}
            }
        } ]);
        function o(e) {
            var i;
            mt(this, o);
            i = t.call(this, e);
            Et(Ct(i), "activeItemId", void 0);
            Et(Ct(i), "activeValue", void 0);
            Et(Ct(i), "availableOptionCount", void 0);
            Et(Ct(i), "controlledExternally", void 0);
            Et(Ct(i), "displayedValues", void 0);
            Et(Ct(i), "dropdown", null);
            Et(Ct(i), "firstSelectedEnabledOption", null);
            Et(Ct(i), "firstSelectedOptionIndex", void 0);
            Et(Ct(i), "menuId", void 0);
            Et(Ct(i), "menuListboxId", void 0);
            Et(Ct(i), "previousActiveIndex", null);
            Et(Ct(i), "selectedOptionCount", void 0);
            Et(Ct(i), "optionRefsByKey", void 0);
            Et(Ct(i), "matchCharacter", void 0);
            Et(Ct(i), "matchTimeout", void 0);
            Et(Ct(i), "currentMatchOptions", void 0);
            Et(Ct(i), "availableMatchOptions", void 0);
            Et(Ct(i), "optionSelection", void 0);
            Et(Ct(i), "resetMatches", (function() {
                i.matchCharacter = null;
                i.currentMatchOptions = [];
                if (i.matchTimeout) {
                    clearTimeout(i.matchTimeout);
                }
            }));
            Et(Ct(i), "handleSelectAll", (function(e) {
                var t, n, o;
                var a = i.props, l = a.name, s = a.children, c = a.multiple;
 // this doesn't make sense if we can't select multiple values
                                if (!c) {
                    return;
                }
                var u = (t = i.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var p = A()(u.concat(i.displayedValues));
                p = r().Children.toArray(s).filter((function(e) {
                    return Dt(e) && b()(p, e.props.value) && (!e.props.disabled || b()(u, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!i.isControlled()) {
                    i.setState({
                        values: p
                    });
                }
                (n = (o = i.props).onChange) === null || n === void 0 ? void 0 : n.call(o, e, {
                    values: p,
                    name: l,
                    reason: "selectAll"
                });
            }));
            Et(Ct(i), "handleClearAll", (function(e) {
                var t, n, o;
                var a = i.props, l = a.name, s = a.children, c = a.multiple;
 // this doesn't make sense if we can't select multiple values
                                if (!c) {
                    return;
                }
                var u = (t = i.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var p = E().apply(void 0, [ u ].concat(pt(i.displayedValues)));
 // this will unselect all selected values unless those values are disabled or hidden by the filter
                                var f = r().Children.toArray(s).filter((function(e) {
                    return Dt(e) && (b()(u, e.props.value) && e.props.disabled || b()(p, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!i.isControlled()) {
                    i.setState({
                        values: f
                    });
                }
                (n = (o = i.props).onChange) === null || n === void 0 ? void 0 : n.call(o, e, {
                    values: f,
                    name: l,
                    reason: "clearAll"
                });
            }));
            Et(Ct(i), "handleTextKeyDown", (function(e) {
                var t = i.props, r = t.children, o = t.onScrollBottom, a = t.tabConfirmsNewValue;
                var l = (0, R.keycode)(e.nativeEvent);
                if (l === "tab") {
                    if (a && !y()(i.activeValue) && i.availableOptionCount <= 1) {
                        e.preventDefault();
                        i.toggleValue(e, i.activeValue);
                    }
                }
                if (e.shiftKey || e.metaKey || e.ctrlKey) {
                    if (l === "a" && (e.ctrlKey || e.metaKey)) {
                        // handle control + A
                        if (i.optionSelection === "all") {
                            i.handleClearAll(e);
                        } else {
                            i.handleSelectAll(e);
                        }
                    }
                    return;
                }
                if (l === "down") {
                    e.preventDefault();
                    i.setState((function(e) {
                        return {
                            activeIndex: Math.min(e.activeIndex + 1, i.props.selectAllAppearance === "checkbox" ? i.availableOptionCount : i.availableOptionCount - 1)
                        };
                    }));
                    if (r && o) {
                        var s;
                        var c = n.Children.toArray(r).length - (2 + ((s = i.getCurrentValues()) !== null && s !== void 0 ? s : []).length);
                        if (i.state.activeIndex === c) {
                            i.handleScrollBottom(e);
                        }
                    }
                }
                if (l === "up") {
                    e.preventDefault();
                    i.setState((function(e) {
                        return {
                            activeIndex: Math.max(e.activeIndex - 1, 0)
                        };
                    }));
                }
                if (l === "enter" && !y()(i.activeValue) && i.state.open) {
                    if (i.activeValue === "selectAll") {
                        if (i.optionSelection === "all") {
                            i.handleClearAll(e);
                        } else {
                            i.handleSelectAll(e);
                        }
                    } else {
                        e.preventDefault();
                        i.toggleValue(e, i.activeValue);
                    }
                }
            }));
            Et(Ct(i), "handleMenuOptionClick", (function(e, t) {
                var n = t.value;
                e.preventDefault();
                if (!i.state.open) {
                    return;
                }
                i.toggleValue(e, n);
            }));
            Et(Ct(i), "handleMenuOptionKeyDown", (function(e, t) {
                var n = e.nativeEvent.key;
 // Checking for a single character to avoid complications from double-byte languages and emojis.
                                if (n.length === 1) {
                    var r = [];
                    var o = {
                        index: 0,
                        value: n
                    };
                    if (!i.matchCharacter) {
                        if (n === " ") {
                            i.resetMatches();
                            return;
                        }
                        r = tt(i.availableMatchOptions, o);
                    } else if (i.currentMatchOptions.length > 1) {
                        o.index = i.matchCharacter.index + 1;
                        r = tt(i.currentMatchOptions, o);
                    }
                    if (r.length) {
                        var a = 0;
 // If the active option is a first character match, cycle to the next matching option.
                                                if (o.index === 0 && r.length > 1) {
                            var l = r.indexOf(i.availableMatchOptions[t]);
                            if (l >= 0) {
                                a = l === r.length - 1 ? 0 : l + 1;
                            }
                        }
                        var s = r[a];
                        var c = i.optionRefsByKey[Lt(s.value, s.label)];
                        if (c != null) {
                            var u;
                            (u = c.focus) === null || u === void 0 ? void 0 : u.call(c);
                        }
                    }
                    i.currentMatchOptions = r;
                    i.matchCharacter = o;
                    if (i.matchTimeout) {
                        clearTimeout(i.matchTimeout);
                    }
                    i.matchTimeout = setTimeout(i.resetMatches, 500);
                    e.preventDefault();
                    e.stopPropagation();
                }
            }));
            Et(Ct(i), "handleTextChange", (function(e, t) {
                var n, r;
                var o = t.value;
                i.setState({
                    filterKeyword: o,
                    open: true,
                    activeIndex: 0
                });
                (n = (r = i.props).onFilterChange) === null || n === void 0 ? void 0 : n.call(r, e, {
                    keyword: o
                });
            }));
            Et(Ct(i), "handleTextFocus", (function() {
                i.setState({
                    textHasFocus: true
                });
            }));
            Et(Ct(i), "handleTextBlur", (function() {
                i.setState({
                    textHasFocus: false
                });
            }));
            Et(Ct(i), "handleRequestOpen", (function(e) {
                var t = {
                    open: true,
                    topValues: i.getTopValues()
                };
 // SUI-3234: preserve existing behavior difference between <Select> and <Multiselect.Compact>
                                if (i.props.multiple) {
                    t.filterKeyword = "";
                }
                var n = i.state.filterKeyword;
                i.setState(t, (function() {
                    var t, r;
                    (t = (r = i.props).onOpen) === null || t === void 0 ? void 0 : t.call(r);
                    if (i.firstSelectedEnabledOption && !i.hasFilter()) {
                        i.firstSelectedEnabledOption.focus();
                    } else {
                        var o;
                        i.setState({
                            activeIndex: (o = i.firstSelectedOptionIndex) !== null && o !== void 0 ? o : 0
                        });
                    }
                    if (n !== i.state.filterKeyword) {
                        var a, l;
                        (a = (l = i.props).onFilterChange) === null || a === void 0 ? void 0 : a.call(l, e, {
                            keyword: i.state.filterKeyword
                        });
                    }
                }));
            }));
            Et(Ct(i), "handleRequestClose", (function() {
                i.setState({
                    open: false,
                    activeIndex: 0
                }, (function() {
                    var e, t;
                    i.previousActiveIndex = null;
                    (e = (t = i.props).onClose) === null || e === void 0 ? void 0 : e.call(t);
                }));
            }));
            Et(Ct(i), "handleScrollBottom", (function(e) {
                if (i.state.open && !i.props.isLoadingOptions) {
                    var t, n;
                    (t = (n = i.props).onScrollBottom) === null || t === void 0 ? void 0 : t.call(n, e);
                }
            }));
            Et(Ct(i), "handleActiveOptionMount", (function(e) {
                if (i.previousActiveIndex !== i.state.activeIndex) {
                    e === null || e === void 0 ? void 0 : e.scrollIntoViewIfNeeded();
                }
            }));
            Et(Ct(i), "handleOptionMount", (function(e, t, n) {
                if (n) {
                    i.firstSelectedEnabledOption = e;
                }
                if (e == null) {
                    delete i.optionRefsByKey[t];
                } else {
                    i.optionRefsByKey[t] = e;
                }
            }));
            Et(Ct(i), "createToggle", (function() {
                var e;
                var t = i.props, a = t.toggle, l = t.appearance, c = t.children, u = t.describedBy, p = t.disabled, d = t.elementRef, v = t.error, h = t.inline, b = t.labelledBy, m = t.labelText, y = t.multiple, g = t.placeholder, S = t.prefixLabel, x = t.required, w = t.suffixLabel, k = t.toggleContent;
                var _;
                var A;
                var j = [];
 // Generate buttonLabels
                                var E = (e = i.getCurrentValues()) !== null && e !== void 0 ? e : [];
                var M = n.Children.toArray(c);
                var T = E.reduce((function(e, t, n, r) {
                    var o = f()(M, (function(e) {
                        return Dt(e) && e.props.value === t;
                    }));
                    if (o) {
                        var i = k !== "optionLabel" && o.props.children ? o.props.children : o.props.label;
                        e.push(i);
                        j.push(o.props.label);
 // if not in multiple mode, add the icon
                                                if (!y && E.length === 1) {
                            _ = o.props.icon;
                        }
                    } else if (y) {
                        // only add values that don't match an option in "multiple" mode to preserve old behaviour
                        e.push(t);
                        j.push(t.toString());
                    }
                    if (n < r.length - 1) {
                        e.push((0, s._)(", "));
                        j.push((0, s._)(", "));
                    }
                    return e;
                }), []);
                A = T;
 // only apply prefix / suffix if the label is not empty
                                if (A.length > 0) {
                    A = i.wrapLabel({
                        prefixLabel: S,
                        label: A,
                        suffixLabel: w
                    });
                }
 // single <Select> behaviour is to show the placeholder if all parts of the the label
                // are empty strings so we replicate this behaviour here
                                if (A.length === 0 || !y && A.every((function(e) {
                    return e === "";
                }))) {
                    A = Pt(g);
 // placeholder has a default value so will not be undefined
                                        j = Pt(g);
                }
 // If there's more than one item selected, read out the selected total
                // rather than reading out each selected item
                                if (A.length > 1) {
                    j = i.wrapLabel({
                        prefixLabel: S,
                        label: [ "".concat(E.length, " items selected") ],
                        suffixLabel: w
                    });
                } else {
                    j = i.wrapLabel({
                        prefixLabel: S,
                        label: j,
                        suffixLabel: w
                    });
                }
                var P = jt({
                    "aria-describedby": u,
                    "aria-label": "".concat(m ? "".concat(m, ", ") : "").concat(j.join("")),
                    "aria-labelledby": m ? undefined : b,
                    "aria-required": x,
                    "data-select-appearance": l,
                    "data-test": y ? "multiselect" : "select",
                    disabled: p,
                    elementRef: d,
                    error: v
                }, C()(i.props, O()(o.propTypes)));
                if (y) {
                    P["data-test-values"] = JSON.stringify(E);
                } else {
                    var V = lt(E, 1), R = V[0];
                    P["data-test-value"] = R;
                }
                if (a) {
                    
                    return (0, n.cloneElement)(a, P);
                }
                if (l === "link") {
                    
                    return r().createElement(q(), at({}, P, {
                        "data-select-appearance": "link"
                    }), !!_ &&  r().createElement(Ue, null, _), A || g,  r().createElement(Ge, null,  r().createElement(J, null)));
                }
                
                return r().createElement(We, at({}, P, {
                    $multiple: y,
                    appearance: l,
                    label: A,
                    error: v,
                    icon: _,
                    inline: h,
                    isMenu: true,
                    "aria-haspopup": "listbox",
                    "aria-owns": i.menuId,
                    onClick: i.props.onClick
                }, I()(i.props, o.invalidLinkAppearanceProps)), !!E.length && y &&  r().createElement(Xe, {
                    "data-role": "count"
                }, "(", E.length, ")"));
            }));
            Et(Ct(i), "createChildren", (function() {
                var e = i.state, t = e.filterKeyword, o = e.textHasFocus, a = e.topValues;
                var l = i.props, c = l.allowKeyMatching, u = l.allowNewValues, p = l.filter, d = l.multiple, h = l.selectAllAppearance, b = l.showSelectedValuesFirst, m = l.isLoadingOptions, y = l.onScrollBottom;
                var g = i.getCurrentValues();
                i.availableOptionCount = 0;
                i.firstSelectedOptionIndex = undefined;
                i.selectedOptionCount = 0;
                i.activeValue = undefined;
                i.availableMatchOptions = [];
                var O;
                var S = 0;
                var x = false;
 // used to avoid overwriting the selected item ref in multiple mode
                                var w;
                var C = b === "immediately" ? i.getTopValues() : a;
                var k = n.Children.toArray(i.props.children).reduce((function(e, t, o) {
                    // ignore Headings and Dividers
                    if (!Dt(t)) {
                        e.push(t);
                        return e;
                    }
 // Find out if the search string exactly matches a value
                                        if (t.props.value === i.state.filterKeyword) {
                        O = true;
                    }
                    var a = g && g.indexOf(t.props.value) >= 0;
                    var l = !!a && !t.props.disabled && !w;
                    var s = c && !d && !p && !m && !y;
                    var u = Lt(t.props.value, t.props.label);
                    var f = -1;
                    if (s && !t.props.disabled && !t.props.hidden) {
                        i.availableMatchOptions.push({
                            label: t.props.label,
                            value: t.props.value
                        });
                        f = i.availableMatchOptions.length - 1;
                    }
 // Format the Menu.Item
                                        var v =  (0, n.cloneElement)(t, {
                        key: t.key || o,
                        onClick: i.handleMenuOptionClick,
                        onKeyDown: s ? function(e) {
                            return i.handleMenuOptionKeyDown(e, f);
                        } : undefined,
                        selected: a,
                        multiple: d,
                        role: "option",
                        ref: function e(t) {
                            return i.handleOptionMount(t, u, l);
                        }
                    });
                    if (l) {
                        w = true;
                    }
                    if (C && C.indexOf(t.props.value) >= 0) {
                        if (S === 0) {
                            e.splice(S, 0,  r().createElement(T.Divider, {
                                key: "topDivider"
                            }));
                            x = true;
                        }
                        e.splice(S, 0, v);
                        S += 1;
                    } else {
                        e.push(v);
                    }
                    return e;
                }), []);
 // In multiple mode, add missing items
                                if (d) {
                    v()(g, (function(e) {
                        var t = f()(k, (function(t) {
                            return Dt(t) && t.props && t.props.value === e;
                        }));
                        if (!t) {
                            if (e === i.state.filterKeyword) {
                                O = true;
                            }
                            var n = C && C.indexOf(e) >= 0;
                            var o = C.length;
                            if (S === 0) {
                                k.splice(0, 0,  r().createElement(T.Divider, {
                                    key: "topDivider"
                                }));
                                S += 1;
                                x = true;
                            }
                            k.splice(n ? 0 : o + 1, 0,  r().createElement(Oe, {
                                label: String(e),
                                value: e,
                                key: "missing-value-".concat(e),
                                onClick: i.handleMenuOptionClick,
                                multiple: d,
                                selected: true
                            }));
                            if (n) {
                                S += 1;
                            }
                        }
                    }));
                }
                var I = p === "controlled";
 // Filter the items
                                var _ = (0, D.stringToKeywords)(t);
                k = I ? k : k.filter((function(e) {
                    if (Dt(e)) {
                        return (0, D.testPhrase)(e.props.label, _);
                    }
                    return true;
 // Keep all headers and non-interactive options
                                })).map((function(e) {
                    if (!Dt(e)) {
                        return e;
                    }
 // highlight matched text
                                        var t = _ && (0, D.keywordLocations)(e.props.label, _);
                    
                    return (0, n.cloneElement)(e, {
                        matchRanges: t || undefined
                    });
                }));
 // Add the option to add the new value
                                if (u && !O && t) {
                    var A = x ? S + 1 : S;
                    k.splice(A, 0,  r().createElement(Oe, {
                        label: "".concat(t, " (new value)"),
                        value: t,
                        key: "newValue",
                        multiple: d,
                        onClick: i.handleMenuOptionClick
                    }));
                }
 // When selectAll is a menu item, add an offset so that activeItem accounts for the extra selectAll option.
                                var j = h === "checkbox" && d && k.length > 1 ? 1 : 0;
                var E = true;
 // Highlight the selected Items and remove hidden
                                k = k.reduce((function(e, t) {
                    // ignore Dividers & Headings
                    if (!Dt(t)) {
                        e.push(t);
                        return e;
                    }
 // Ignore any hidden items
                                        if (t.props && t.props.hidden) {
                        return e;
                    }
                    if (t.props.selected && !t.props.disabled && i.firstSelectedOptionIndex == null) {
                        i.firstSelectedOptionIndex = i.availableOptionCount;
                    }
                    var r = j === i.state.activeIndex;
                    j += 1;
                    i.availableOptionCount += 1;
                    i.selectedOptionCount += t.props.selected ? 1 : 0;
                    if (t.key !== "newValue" && !t.props.disabled && !t.props.selected) {
                        E = false;
                    }
                    if (!r || !o) {
                        e.push(t);
                        return e;
                    }
                    if (!t.props.disabled) {
                        i.activeValue = t.props.value;
                    }
                    var a =  (0, n.cloneElement)(t, {
                        active: r,
                        id: i.activeItemId,
                        ref: i.handleActiveOptionMount
                    });
                    e.push(a);
                    return e;
                }), []);
                i.optionSelection = i.selectedOptionCount === 0 && "none" || E && "all" || "some";
 // add select all option
                                if (h === "checkbox" && d && i.availableOptionCount > 0) {
                    var M;
                    var P;
                    if (i.optionSelection === "all") {
                        if (t === "") {
                            P = (0, s._)("Clear all");
                        } else {
                            P = (0, s._)("Clear all matches");
                        }
                    } else if (t === "") {
                        P = (0, s._)("Select all");
                    } else {
                        P = (0, s._)("Select all matches");
                    }
                    if (i.state.activeIndex === 0 && o) {
                        i.activeValue = "selectAll";
                    }
                    k.unshift( r().createElement(He, {
                        key: "selectAllOption",
                        selected: i.optionSelection === "all" || i.optionSelection !== "none" && "some",
                        selectAllLabel: P,
                        totalCount: (M = i.getCurrentValues()) === null || M === void 0 ? void 0 : M.length,
                        changedToggle: !!i.props.toggle,
                        onClick: i.optionSelection === "all" ? i.handleClearAll : i.handleSelectAll,
                        id: i.state.activeIndex === 0 ? i.activeItemId : undefined,
                        active: i.state.activeIndex === 0,
                        ref: i.handleActiveOptionMount,
                        tabIndex: -1
                    }),  r().createElement(T.Divider, {
                        key: "selectAllDivider"
                    }));
                }
                i.displayedValues = k.reduce((function(e, t) {
                    if (Dt(t)) {
                        e.push(t.props.value);
                    }
                    return e;
                }), []);
                return k;
            }));
            Et(Ct(i), "wrapLabel", (function(e) {
                var t = e.prefixLabel, n = e.label, r = e.suffixLabel;
                var o = n;
                if (t) {
                    o = [ "".concat(t, ": ") ].concat(o);
                }
                if (r) {
                    o = u()(o).concat(" ".concat(r));
                }
                return o;
            }));
            Et(Ct(i), "handleDropdownMount", (function(e) {
                i.dropdown = e;
            }));
            i.state = {
                activeIndex: 0,
                filterKeyword: "",
                open: false,
                textHasFocus: false,
                topValues: [],
                values: e.defaultValues || []
            };
            i.controlledExternally = l()(e, "values");
            i.displayedValues = [];
            i.availableOptionCount = 0;
            i.firstSelectedOptionIndex = undefined;
            i.selectedOptionCount = 0;
            i.matchCharacter = null;
            i.matchTimeout = null;
            i.currentMatchOptions = [];
            i.availableMatchOptions = [];
            i.optionRefsByKey = {};
            i.optionSelection = "none";
            if (false) {}
            if (false) {}
            o.validateAppearance(e);
            i.menuId = (0, M.createDOMID)("menu");
            i.menuListboxId = (0, M.createDOMID)("menu-listbox");
            i.activeItemId = (0, M.createDOMID)("active-item");
            return i;
        }
        gt(o, [ {
            key: "componentDidUpdate",
            value: function e(t, n) {
                if (false) {}
                if (false) {}
                o.validateAppearance(this.props);
                this.previousActiveIndex = n.activeIndex;
            }
        }, {
            key: "getCurrentValues",
            value: function e() {
                var t = this.isControlled() ? this.props.values : this.state.values;
                return this.props.multiple || t == null ? t : t.slice(0, 1);
            }
        }, {
            key: "getTopValues",
            value: function e() {
                var t;
                // in non-multiple mode, don't move values to the top of the list
                                return this.props.multiple && this.props.showSelectedValuesFirst !== "never" ? (t = this.getCurrentValues()) !== null && t !== void 0 ? t : [] : [];
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
        }, {
            key: "hasFilter",
            value: function e() {
                return !!this.props.filter;
            }
        }, {
            key: "toggleValue",
            value: function e(t, n) {
                var r, o, i;
                var a = (r = this.getCurrentValues()) !== null && r !== void 0 ? r : [];
                var l = a.indexOf(n);
                var s = this.props, c = s.name, u = s.multiple;
                var p;
                if (u) {
                    if (l >= 0) {
                        p = [].concat(pt(a.slice(0, l)), pt(a.slice(l + 1)));
                    } else {
                        p = a.concat([ n ]);
                    }
                } else {
                    // non-multiple mode must always have a value
                    p = [ n ];
                }
                var f = !this.isControlled();
                if (f) {
                    this.setState({
                        values: p
                    });
                }
                if (u) {
                    // in uncontrolled multiple mode, keep the menu open
                    if (f) {
                        this.setState({
                            open: true
                        });
                    }
                } else {
                    // non-multiple mode only supports a single selection
                    // so close the menu once a selection is made
                    this.handleRequestClose({
                        reason: "contentClick"
                    });
                    this.focus();
                }
                (o = (i = this.props).onChange) === null || o === void 0 ? void 0 : o.call(i, t, {
                    values: p,
                    name: c,
                    reason: "valueToggle"
                });
            }
            /**
     * Place focus on the toggle.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.dropdown) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "renderControls",
            value: function e(t) {
                var n = t.hasChildren, o = t.placement;
                var i = this.state.filterKeyword;
                var a = this.props, l = a.inputId, c = a.inputRef, u = a.multiple, p = a.selectAllAppearance;
                var f = (0, s._)("Select all options".concat(this.optionSelection === "all" ? " disabled" : ""));
                var d = (0, s._)("Clear all options".concat(this.optionSelection === "none" ? " disabled" : ""));
 // only visually disable these as opposed to fully disabling to avoid losing keyboard focus - see SUI-2731
                                var v =  r().createElement(Ze, {
                    $placement: o,
                    key: "selectAll"
                },  r().createElement(Ye, {
                    $disabled: this.optionSelection === "all",
                    "aria-label": f,
                    onClick: this.handleSelectAll,
                    "data-test": "select-all"
                }, i ? (0, s._)("Select all Matches") : (0, s._)("Select all")),  r().createElement(Ye, {
                    $disabled: this.optionSelection === "none",
                    "aria-label": d,
                    onClick: this.handleClearAll,
                    "data-test": "clear-all"
                }, i ? (0, s._)("Clear all Matches") : (0, s._)("Clear all")));
                return this.hasFilter() &&  r().createElement("div", {
                    key: "controls"
                },  r().createElement(Je, {
                    key: "filter",
                    "data-test": "filter"
                },  r().createElement(F(), {
                    value: i,
                    autoCapitalize: "off",
                    autoComplete: "off",
                    autoCorrect: "off",
                    spellCheck: false,
                    onChange: this.handleTextChange,
                    onKeyDown: this.handleTextKeyDown,
                    onFocus: this.handleTextFocus,
                    onBlur: this.handleTextBlur,
                    placeholder: (0, s._)("filter"),
                    role: "combobox",
                    "aria-expanded": "true",
                    "aria-controls": this.menuListboxId,
                    "aria-label": (0, s._)("Filter"),
                    "aria-activedescendant": this.state.textHasFocus && n ? this.activeItemId : undefined,
                    inputRef: c,
                    inputId: l,
                    canClear: true,
                    startAdornment:  r().createElement(Qe, null,  r().createElement(te, null))
                })), u && n && p === "buttongroup" && v);
            }
        }, {
            key: "render",
            value: function e() {
                var t, o = this;
                var i = this.props, a = i.children, l = i.defaultPlacement, s = i.inputId, c = i.multiple, u = i.repositionMode, p = i.virtualization;
                var d = this.hasFilter();
                var v = (t = this.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var h = n.Children.toArray(a);
                var b = v.some((function(e) {
                    var t = f()(h, (function(t) {
                        return Dt(t) && t.props.value === e;
                    }));
                    return t && !t.props.disabled;
                }));
                var m = this.createChildren();
                var y = this.createToggle();
                var g = function e(t) {
                    var n = t.anchorWidth, i = t.maxHeight, a = t.placement;
                    var l = Vt({
                        anchorWidth: n,
                        isMultiple: o.props.multiple,
                        maxHeight: i,
                        menuStyle: o.props.menuStyle
                    });
                    var s = v.length > 0 && !b && !o.hasFilter() ? 0 : undefined;
                    var u = jt(jt({
                        "aria-multiselectable": c || undefined,
                        childrenStart: o.renderControls({
                            placement: a,
                            hasChildren: !!m.length
                        }),
                        controlledExternally: o.hasFilter(),
                        placement: a !== null && a !== void 0 ? a : undefined,
                        onScrollBottom: o.props.onScrollBottom ? o.handleScrollBottom : undefined,
                        "data-test": "results-menu",
                        isLoading: o.props.isLoadingOptions,
                        id: o.menuId,
                        menuId: o.menuListboxId
                    }, I()(o.props, "noOptionsMessage", "footerMessage", "animateLoading", "loadingMessage", "onScroll")), {}, {
                        style: l,
                        tabIndex: s
                    });
                    if (p) {
                        
                        return r().createElement(N.VirtualizedResultsMenu, at({
                            virtualization: p
                        }, u), m);
                    }
                    
                    return r().createElement(B(), u, m);
                };
                
                return r().createElement(V(), {
                    closeReasons: Rt,
                    inputId: s,
                    toggle: y,
                    onRequestOpen: this.handleRequestOpen,
                    onRequestClose: this.handleRequestClose,
                    open: this.state.open,
                    openWithArrowKeys: true,
                    repositionMode: u,
                    defaultPlacement: d ? l : undefined,
                    canCoverAnchor: it().innerHeight < 500,
                    ref: this.handleDropdownMount,
                    retainFocus: false,
                    takeFocus: v.length === 0 || v.length > 0 && !b || !!d
                }, g);
            }
        } ]);
        return o;
    }(n.Component);
    Et(qt, "propTypes", Mt);
    Et(qt, "defaultProps", Tt);
    Et(qt, "Option", Oe);
    Et(qt, "Divider", T.Divider);
    Et(qt, "Heading", T.Heading);
    Et(qt, "invalidLinkAppearanceProps", [ "append", "error", "prepend" ]);
    /* harmony default export */    const Nt = qt;
    // CONCATENATED MODULE: ./src/Select/Option.tsx
    function Bt(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Bt = function e(t) {
                return typeof t;
            };
        } else {
            Bt = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Bt(e);
    }
    function Kt() {
        Kt = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Kt.apply(this, arguments);
    }
    function Ft(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Ht(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function $t(e, t, n) {
        if (t) Ht(e.prototype, t);
        if (n) Ht(e, n);
        return e;
    }
    function zt(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Wt(e, t);
    }
    function Wt(e, t) {
        Wt = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Wt(e, t);
    }
    function Ut(e) {
        var t = Qt();
        return function n() {
            var r = Xt(e), o;
            if (t) {
                var i = Xt(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return Gt(this, o);
        };
    }
    function Gt(e, t) {
        if (t && (Bt(t) === "object" || typeof t === "function")) {
            return t;
        }
        return Jt(e);
    }
    function Jt(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Qt() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Xt(e) {
        Xt = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Xt(e);
    }
    function Yt(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Zt = {
        /** @private */
        active: i().bool,
        children: i().node,
        description: i().string,
        descriptionPosition: i().oneOf([ "right", "bottom" ]),
        disabled: i().bool,
        hidden: i().bool,
        icon: i().node,
        label: i().string.isRequired,
        matchRanges: i().arrayOf(i().shape({
            start: i().number.isRequired,
            end: i().number.isRequired
        })),
        /** @private */
        onClick: i().func,
        /** @private */
        selected: i().bool,
        truncate: i().bool,
        value: i().oneOfType([ i().string, i().number, i().bool ]).isRequired
    };
    var en = {
        active: false,
        descriptionPosition: "bottom",
        disabled: false,
        hidden: false,
        selected: false,
        truncate: false
    };
    /**
 * An option within a `Select`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */    var tn =  function(e) {
        zt(n, e);
        var t = Ut(n);
        function n() {
            var e;
            Ft(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            Yt(Jt(e), "c", null);
            Yt(Jt(e), "handleMount", (function(t) {
                e.c = t;
            }));
            return e;
        }
        $t(n, [ {
            key: "scrollIntoViewIfNeeded",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.scrollIntoViewIfNeeded();
            }
            /**
     * Place focus on the button.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "render",
            value: function e() {
                
                return r().createElement(Oe, Kt({}, this.props, {
                    multiple: false,
                    ref: this.handleMount
                }), this.props.children || this.props.label);
            }
        } ]);
        return n;
    }(n.PureComponent);
    Yt(tn, "propTypes", Zt);
    Yt(tn, "defaultProps", en);
    /* harmony default export */    const nn = tn;
    // CONCATENATED MODULE: ./src/Select/Select.tsx
    function rn(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            rn = function e(t) {
                return typeof t;
            };
        } else {
            rn = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return rn(e);
    }
    function on() {
        on = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return on.apply(this, arguments);
    }
    function an(e, t) {
        if (e == null) return {};
        var n = ln(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function ln(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function sn(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function cn(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function un(e, t, n) {
        if (t) cn(e.prototype, t);
        if (n) cn(e, n);
        return e;
    }
    function pn(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) fn(e, t);
    }
    function fn(e, t) {
        fn = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return fn(e, t);
    }
    function dn(e) {
        var t = bn();
        return function n() {
            var r = mn(e), o;
            if (t) {
                var i = mn(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return vn(this, o);
        };
    }
    function vn(e, t) {
        if (t && (rn(t) === "object" || typeof t === "function")) {
            return t;
        }
        return hn(e);
    }
    function hn(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function bn() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function mn(e) {
        mn = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return mn(e);
    }
    function yn(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    /* eslint-disable max-classes-per-file */
    /** @public */    var gn = {
        allowKeyMatching: i().bool,
        animateLoading: i().bool,
        appearance: i().oneOf([ "default", "link", "primary", "pill", "toggle", "flat" ]),
        append: i().bool,
        children: i().node,
        defaultPlacement: i().oneOf([ "above", "below", "vertical" ]),
        defaultValue: i().oneOfType([ i().string, i().number, i().bool ]),
        describedBy: i().string,
        disabled: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        error: i().bool,
        filter: i().oneOf([ false, true, "controlled" ]),
        footerMessage: i().node,
        inline: i().bool,
        inputId: i().string,
        inputRef: i().oneOfType([ i().func, i().object ]),
        isLoadingOptions: i().bool,
        labelledBy: i().string,
        labelText: i().string,
        loadingMessage: i().node,
        menuStyle: i().object,
        name: i().string,
        noOptionsMessage: i().node,
        onChange: i().func,
        onClose: i().func,
        onFilterChange: i().func,
        onOpen: i().func,
        onScroll: i().func,
        onScrollBottom: i().func,
        placeholder: i().string,
        prefixLabel: i().string,
        prepend: i().bool,
        suffixLabel: i().string,
        toggleContent: i().oneOf([ "optionChildren", "optionLabel" ]),
        /** @private. */
        toggle: i().node,
        value: i().oneOfType([ i().string, i().number, i().bool ]),
        /** @private. */
        virtualization: i().number
    };
    var On = {
        allowKeyMatching: true,
        animateLoading: false,
        appearance: "toggle",
        append: false,
        children: [],
        defaultPlacement: "vertical",
        disabled: false,
        error: false,
        filter: false,
        inline: true,
        isLoadingOptions: false,
        menuStyle: {},
        noOptionsMessage: (0, s._)("No matches"),
        placeholder: (0, s._)("Select..."),
        prepend: false,
        toggleContent: "optionChildren"
    };
    var Sn =  function(e) {
        pn(n, e);
        var t = dn(n);
        // @docs-props-type SelectPropsBase
                function n(e) {
            var r;
            sn(this, n);
            r = t.call(this, e);
            var o = {};
 // wrap defaultValue in an array once to avoid failing <SelectBase>'s defaultValues comparison check
            // using "has" to make sure that pre-4.3 behavior is preserved if a user explicitly passes "null" or "undefined"
                        if (l()(e, "defaultValue")) {
                if (e.defaultValue != null) {
                    o.defaultValues = [ e.defaultValue ];
                } else {
                    o.defaultValues = [];
                }
            }
            r.state = o;
            return r;
        }
        un(n, [ {
            key: "componentDidUpdate",
            value: function e(t) {
                if (false) {}
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, n = t.defaultValue, o = t.onChange, i = t.value, a = an(t, [ "defaultValue", "onChange", "value" ]);
                var s = {
                    onChange: function e(t, n) {
                        var r = n.name, i = n.values;
                        o === null || o === void 0 ? void 0 : o(t, {
                            name: r,
                            value: i[0]
                        });
                    }
                };
 // using "has" as opposed to a null check to match SelectBase
                                if (l()(this.props, "value")) {
                    if (i != null) {
                        s.values = [ i ];
                    } else {
                        s.values = [];
                    }
                } else if (this.state.defaultValues != null) {
                    // using defaultValues from state in order to avoid wrapping defaultValue here
                    s.defaultValues = this.state.defaultValues;
                }
                
                return r().createElement(Nt, on({}, a, s, {
                    multiple: false
                }));
            }
        } ]);
        return n;
    }(n.Component);
    yn(Sn, "propTypes", gn);
    yn(Sn, "defaultProps", On);
    yn(Sn, "Option", nn);
    yn(Sn, "Heading", T.Heading);
    yn(Sn, "Divider", T.Divider);
    /* harmony default export */    const xn = Sn;
    // CONCATENATED MODULE: ./src/Select/index.ts
    module.exports = t;
    /******/})();