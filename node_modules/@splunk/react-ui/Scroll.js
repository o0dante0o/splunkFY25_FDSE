/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var r = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, r) => {
            /******/ for (var n in r) {
                /******/ if (e.o(r, n) && !e.o(t, n)) {
                    /******/ Object.defineProperty(t, n, {
                        enumerable: true,
                        get: r[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        default: () => /* reexport */ ne
    });
    // CONCATENATED MODULE: external "react"
    const r = require("react");
    var n =  e.n(r);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var l =  e.n(o);
    // CONCATENATED MODULE: external "lodash/isFinite"
    const i = require("lodash/isFinite");
    var u =  e.n(i);
    // CONCATENATED MODULE: external "@splunk/react-ui/Animation"
    const f = require("@splunk/react-ui/Animation");
    // CONCATENATED MODULE: external "styled-components"
    const c = require("styled-components");
    var a =  e.n(c);
    // CONCATENATED MODULE: external "@splunk/themes"
    const s = require("@splunk/themes");
    // CONCATENATED MODULE: external "lodash/keys"
    const p = require("lodash/keys");
    var d =  e.n(p);
    // CONCATENATED MODULE: external "lodash/omit"
    const y = require("lodash/omit");
    var v =  e.n(y);
    // CONCATENATED MODULE: external "react-spring"
    const h = require("react-spring");
    // CONCATENATED MODULE: external "@splunk/react-ui/EventListener"
    const b = require("@splunk/react-ui/EventListener");
    var m =  e.n(b);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScrollContainerContext"
    const g = require("@splunk/react-ui/ScrollContainerContext");
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function w(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/Scroll/Inner.tsx
    function O(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            O = function e(t) {
                return typeof t;
            };
        } else {
            O = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return O(e);
    }
    function S() {
        S = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return S.apply(this, arguments);
    }
    function P(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function j(e, t) {
        for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || false;
            n.configurable = true;
            if ("value" in n) n.writable = true;
            Object.defineProperty(e, n.key, n);
        }
    }
    function T(e, t, r) {
        if (t) j(e.prototype, t);
        if (r) j(e, r);
        return e;
    }
    function E(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) _(e, t);
    }
    function _(e, t) {
        _ = Object.setPrototypeOf || function e(t, r) {
            t.__proto__ = r;
            return t;
        };
        return _(e, t);
    }
    function R(e) {
        var t = k();
        return function r() {
            var n = M(e), o;
            if (t) {
                var l = M(this).constructor;
                o = Reflect.construct(n, arguments, l);
            } else {
                o = n.apply(this, arguments);
            }
            return L(this, o);
        };
    }
    function L(e, t) {
        if (t && (O(t) === "object" || typeof t === "function")) {
            return t;
        }
        return W(e);
    }
    function W(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function k() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function M(e) {
        M = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return M(e);
    }
    function C(e, t, r) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: r,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = r;
        }
        return e;
    }
    var q = {
        children: l().node,
        defaultLeft: l().number,
        defaultTop: l().number,
        elementRef: l().oneOfType([ l().func, l().object ]),
        left: l().object,
        onScroll: l().func,
        stopScrollPropagation: l().oneOf([ true, false, "window" ]),
        tagName: l().string,
        top: l().object
    };
    var x = {
        defaultLeft: 0,
        defaultTop: 0,
        tagName: "div"
    };
    var X =  function(e) {
        E(r, e);
        var t = R(r);
        function r(e) {
            var n;
            P(this, r);
            n = t.call(this, e);
            C(W(n), "defaultWindowOverflowX", "visible");
            C(W(n), "defaultWindowOverflowY", "visible");
            C(W(n), "handleWheel", (function(e) {
                var t = n.state.containerEl;
                if (!t) {
                    return;
                }
 // if the element is scrollable in both directions, it's not safe to stop propagation.
                                if (t.clientWidth !== t.scrollWidth && t.clientHeight !== t.scrollHeight) {
                    return;
                }
                if (t.clientWidth !== t.scrollWidth) {
                    if (e.deltaX < 0 && t.scrollLeft < Math.abs(e.deltaX)) {
                        t.scrollLeft = 0;
                        e.stopPropagation();
                        e.preventDefault();
                        return;
                    }
                    var r = t.scrollWidth - t.clientWidth;
                    if (e.deltaX && e.deltaX + t.scrollLeft > r) {
                        t.scrollLeft = r;
                        e.stopPropagation();
                        e.preventDefault();
                    }
                }
                if (t.clientHeight !== t.scrollHeight) {
                    if (e.deltaY < 0 && t.scrollTop < Math.abs(e.deltaY)) {
                        t.scrollTop = 0;
                        e.stopPropagation();
                        e.preventDefault();
                        return;
                    }
                    var o = t.scrollHeight - t.clientHeight;
                    if (e.deltaY && e.deltaY + t.scrollTop > o) {
                        t.scrollTop = o;
                        e.stopPropagation();
                        e.preventDefault();
                    }
                }
            }));
            C(W(n), "handleMount", (function(e) {
                n.setState({
                    containerEl: e
                });
                w(n.props.elementRef, e);
            }));
            C(W(n), "handleMouseEnter", (function() {
                n.defaultWindowOverflowX = document.body.style.overflowX;
                n.defaultWindowOverflowY = document.body.style.overflowY;
                document.body.style.overflowX = "hidden";
                document.body.style.overflowY = "hidden";
            }));
            C(W(n), "handleMouseLeave", (function() {
                document.body.style.overflowX = n.defaultWindowOverflowX;
                document.body.style.overflowY = n.defaultWindowOverflowY;
            }));
            n.state = {
                containerEl: null
            };
            return n;
        }
        T(r, [ {
            key: "componentDidUpdate",
            value: function e(t, r) {
                if (this.state.containerEl) {
                    if (!r.containerEl) {
                        this.state.containerEl.scrollTop = this.props.defaultTop;
                        this.state.containerEl.scrollLeft = this.props.defaultLeft;
                    }
                    if (u()(this.props.top)) {
                        var n;
                        this.state.containerEl.scrollTop = ((n = this.props.top) === null || n === void 0 ? void 0 : n.get()) || 0;
                    }
                    if (u()(this.props.left)) {
                        var o;
                        this.state.containerEl.scrollLeft = ((o = this.props.left) === null || o === void 0 ? void 0 : o.get()) || 0;
                    }
                }
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, o = t.children, l = t.onScroll, i = t.stopScrollPropagation, u = t.top, f = t.left;
                var c = this.state.containerEl;
                var a = h.animated[this.props.tagName];
                
                return n().createElement(n().Fragment, null,  n().createElement(a, S({}, v()(this.props, d()(r.propTypes)), {
                    ref: this.handleMount,
                    onMouseEnter: i === "window" ? this.handleMouseEnter : undefined,
                    onMouseLeave: i === "window" ? this.handleMouseLeave : undefined,
                    onScroll: l,
                    scrollTop: u,
                    scrollLeft: f
                }),  n().createElement(g.ScrollContainerProvider, {
                    value: c
                }, o)), i === true && c &&  n().createElement(m(), {
                    target: c,
                    eventType: "wheel",
                    listener: this.handleWheel,
                    options: {
                        passive: false
                    }
                }));
            }
        } ]);
        return r;
    }(r.Component);
    C(X, "propTypes", q);
    C(X, "defaultProps", x);
    /* harmony default export */    const Y = X;
    // CONCATENATED MODULE: ./src/Scroll/ScrollStyles.ts
    var D = a()(Y).withConfig({
        displayName: "ScrollStyles__StyledInner",
        componentId: "sc-1xspttf-0"
    })([ "", ";overflow:auto;overflow-y:auto;overflow-x:hidden;" ], s.mixins.reset("block"));
    // CONCATENATED MODULE: ./src/Scroll/Scroll.tsx
    function H(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            H = function e(t) {
                return typeof t;
            };
        } else {
            H = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return H(e);
    }
    function N() {
        N = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return N.apply(this, arguments);
    }
    function I(e, t) {
        if (e == null) return {};
        var r = F(e, t);
        var n, o;
        if (Object.getOwnPropertySymbols) {
            var l = Object.getOwnPropertySymbols(e);
            for (o = 0; o < l.length; o++) {
                n = l[o];
                if (t.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function F(e, t) {
        if (e == null) return {};
        var r = {};
        var n = Object.keys(e);
        var o, l;
        for (l = 0; l < n.length; l++) {
            o = n[l];
            if (t.indexOf(o) >= 0) continue;
            r[o] = e[o];
        }
        return r;
    }
    function A(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function U(e, t) {
        for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || false;
            n.configurable = true;
            if ("value" in n) n.writable = true;
            Object.defineProperty(e, n.key, n);
        }
    }
    function z(e, t, r) {
        if (t) U(e.prototype, t);
        if (r) U(e, r);
        return e;
    }
    function B(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) G(e, t);
    }
    function G(e, t) {
        G = Object.setPrototypeOf || function e(t, r) {
            t.__proto__ = r;
            return t;
        };
        return G(e, t);
    }
    function J(e) {
        var t = V();
        return function r() {
            var n = Z(e), o;
            if (t) {
                var l = Z(this).constructor;
                o = Reflect.construct(n, arguments, l);
            } else {
                o = n.apply(this, arguments);
            }
            return K(this, o);
        };
    }
    function K(e, t) {
        if (t && (H(t) === "object" || typeof t === "function")) {
            return t;
        }
        return Q(e);
    }
    function Q(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function V() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Z(e) {
        Z = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Z(e);
    }
    function $(e, t, r) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: r,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = r;
        }
        return e;
    }
    var ee = {
        children: l().node,
        elementRef: l().oneOfType([ l().func, l().object ]),
        left: l().number,
        onScroll: l().func,
        onScrollComplete: l().func,
        stopScrollPropagation: l().oneOf([ true, false, "window" ]),
        tagName: l().string,
        top: l().number
    };
    var te = {
        stopScrollPropagation: false,
        tagName: "div"
    };
    var re =  function(e) {
        B(r, e);
        var t = J(r);
        // @docs-props-type ScrollPropsBase
                function r(e) {
            var o;
            A(this, r);
            o = t.call(this, e);
            $(Q(o), "handleRest", (function() {
                var e, t;
                (e = (t = o.props).onScrollComplete) === null || e === void 0 ? void 0 : e.call(t);
            }));
            $(Q(o), "handleScroll", (function(e) {
                var t, r;
                o.setState({
                    currentLeft: e.currentTarget.scrollLeft,
                    currentTop: e.currentTarget.scrollTop
                });
                (t = (r = o.props).onScroll) === null || t === void 0 ? void 0 : t.call(r, e);
            }));
            $(Q(o), "renderInner", (function(e) {
                var t = o.props, r = t.children, l = t.elementRef, i = t.left, f = t.top, c = t.onScrollComplete, a = I(t, [ "children", "elementRef", "left", "top", "onScrollComplete" ]);
                
                return n().createElement(D, N({
                    "data-test": "scroll"
                }, a, {
                    key: "inner",
                    top: u()(f) ? e.top : undefined,
                    left: u()(i) ? e.left : undefined,
                    elementRef: l,
                    onScroll: o.handleScroll
                }), r);
            }));
            o.state = {
                currentLeft: 0,
                currentTop: 0
            };
            return o;
        }
        z(r, [ {
            key: "render",
            value: function e() {
                var t = this.props, r = t.left, o = t.top;
                var l = this.state, i = l.currentLeft, c = l.currentTop;
                var a = {};
 // When isFinite, the prop is defined and therefore animating.
                                if (u()(r)) {
                    a.left = r;
                } else {
                    a.left = i;
                }
                if (u()(o)) {
                    a.top = o;
                } else {
                    a.top = c;
                }
                
                return n().createElement(f.Spring, {
                    from: {
                        left: 0,
                        top: 0
                    },
                    to: a,
                    onRest: this.handleRest,
                    config: {
                        precision: 10
                    }
                }, this.renderInner);
            }
        } ]);
        return r;
    }(r.Component);
    $(re, "propTypes", ee);
    $(re, "defaultProps", te);
    /* harmony default export */    const ne = re;
    // CONCATENATED MODULE: ./src/Scroll/index.ts
    module.exports = t;
    /******/})();