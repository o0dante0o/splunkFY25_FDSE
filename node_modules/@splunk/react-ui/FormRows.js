/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var r = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, r) => {
            /******/ for (var n in r) {
                /******/ if (e.o(r, n) && !e.o(t, n)) {
                    /******/ Object.defineProperty(t, n, {
                        enumerable: true,
                        get: r[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Row: () => /* reexport */ xe,
        default: () => /* reexport */ Le
    });
    // CONCATENATED MODULE: external "react"
    const r = require("react");
    var n =  e.n(r);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const a = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const l = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: ./src/FormRows/FormRowsContext.tsx
    var u =  (0, r.createContext)({
        disabledDeleteButton: false,
        sortable: true
    });
    u.displayName = "FormRows";
    /* harmony default export */    const c = u;
    // CONCATENATED MODULE: external "@splunk/themes"
    const s = require("@splunk/themes");
    // CONCATENATED MODULE: external "@splunk/react-icons/Plus"
    const f = require("@splunk/react-icons/Plus");
    var p =  e.n(f);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Plus"
    const d = require("@splunk/react-icons/enterprise/Plus");
    var v =  e.n(d);
    // CONCATENATED MODULE: ./src/FormRows/icons/FormRowsPlusIcon.tsx
    var y = function e() {
        var t = (0, s.useSplunkTheme)(), r = t.isEnterprise, o = t.isCompact;
        var i = o ? "20px" : "24px";
        return r ?  n().createElement(v(), {
            screenReaderText: null,
            hideDefaultTooltip: true
        }) :  n().createElement(p(), {
            width: i,
            height: i
        });
    };
    /* harmony default export */    const b = y;
    // CONCATENATED MODULE: external "lodash/omit"
    const m = require("lodash/omit");
    var h =  e.n(m);
    // CONCATENATED MODULE: external "@splunk/react-icons/Cross"
    const g = require("@splunk/react-icons/Cross");
    var x =  e.n(g);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Close"
    const w = require("@splunk/react-icons/enterprise/Close");
    var O =  e.n(w);
    // CONCATENATED MODULE: external "styled-components"
    const R = require("styled-components");
    var S =  e.n(R);
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const j = require("@splunk/react-ui/Box");
    var k =  e.n(j);
    // CONCATENATED MODULE: external "@splunk/react-ui/Button"
    const E = require("@splunk/react-ui/Button");
    var _ =  e.n(E);
    // CONCATENATED MODULE: external "@splunk/react-ui/ButtonSimple"
    const P = require("@splunk/react-ui/ButtonSimple");
    var q =  e.n(P);
    // CONCATENATED MODULE: ./src/FormRows/FormRowsStyles.ts
    var C = S()(k()).withConfig({
        displayName: "FormRowsStyles__StyledBox",
        componentId: "sc-1j4j7h3-0"
    })([ "", ";" ], s.mixins.reset("block"));
    var D = S().div.withConfig({
        displayName: "FormRowsStyles__StyledHeader",
        componentId: "sc-1j4j7h3-1"
    })([ "padding-left:", ";", "" ], (0, s.pick)({
        enterprise: s.variables.spacingHalf,
        prisma: "16px"
    }), (0, s.pick)({
        prisma: {
            comfortable: (0, R.css)([ "padding-bottom:8px;" ]),
            compact: (0, R.css)([ "padding-bottom:6px;" ])
        }
    }));
    var I = S()(_()).withConfig({
        displayName: "FormRowsStyles__StyledAddRowButton",
        componentId: "sc-1j4j7h3-2"
    })([ "", "" ], (function(e) {
        var t = e.$sortable;
        return t && (0, s.pick)({
            prisma: (0, R.css)([ "margin-left:16px;" ])
        });
    }));
    var T = S().div.withConfig({
        displayName: "FormRowsStyles__StyledRows",
        componentId: "sc-1j4j7h3-3"
    })([ "position:relative;", "" ], (0, s.pick)({
        prisma: {
            comfortable: (0, R.css)([ "padding-bottom:12px;" ]),
            compact: (0, R.css)([ "padding-bottom:10px;" ])
        }
    }));
    var H = S().div.withConfig({
        displayName: "FormRowsStyles__Styled",
        componentId: "sc-1j4j7h3-4"
    })([ "padding:", ";position:relative;&.sorting{z-index:calc(", " + 1);}", " &:focus{outline:0;box-shadow:", ";}" ], (0, 
    s.pick)({
        enterprise: (0, R.css)([ "3px calc(", " + 3px) 3px 0" ], s.variables.inputHeight),
        prisma: {
            comfortable: (0, R.css)([ "8px calc(", " + 8px) 8px 0" ], s.variables.inputHeight),
            compact: (0, R.css)([ "6px calc(", " + 8px) 6px 0" ], s.variables.inputHeight)
        }
    }), s.variables.zindexPopover, (function(e) {
        var t = e.$sortable;
        return t && (0, R.css)([ "padding-left:", ";" ], (0, s.pick)({
            enterprise: s.variables.spacingHalf,
            prisma: "16px"
        }));
    }), s.variables.focusShadow);
    var A = S().div.withConfig({
        displayName: "FormRowsStyles__StyledButton",
        componentId: "sc-1j4j7h3-5"
    })([ "position:absolute;right:0;top:", ";float:right;" ], (0, s.pick)({
        enterprise: "3px",
        prisma: {
            comfortable: "8px",
            compact: "6px"
        }
    }));
    var B = S()(q()).withConfig({
        displayName: "FormRowsStyles__StyledButtonSimple",
        componentId: "sc-1j4j7h3-6"
    })([ "float:right;width:", ";height:", ";text-align:center;" ], s.variables.inputHeight, s.variables.inputHeight);
    var N = S().div.withConfig({
        displayName: "FormRowsStyles__StyledDrag",
        componentId: "sc-1j4j7h3-7"
    })([ "position:absolute;left:0;right:0;content:'';cursor:move;background:", ";width:", ";top:", ";", "" ], s.variables.draggableBackground, (0, 
    s.pick)({
        enterprise: "7px",
        prisma: "6px"
    }), (0, s.pick)({
        enterprise: "4px",
        prisma: {
            comfortable: "18px",
            compact: "12px"
        }
    }), (0, s.pick)({
        enterprise: (0, R.css)([ "bottom:3px;opacity:0.5;" ]),
        prisma: (0, R.css)([ "height:20px;" ])
    }));
    // CONCATENATED MODULE: ./src/FormRows/RowInternal.tsx
    function M() {
        M = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return M.apply(this, arguments);
    }
    function F(e, t) {
        if (e == null) return {};
        var r = K(e, t);
        var n, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                n = i[o];
                if (t.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function K(e, t) {
        if (e == null) return {};
        var r = {};
        var n = Object.keys(e);
        var o, i;
        for (i = 0; i < n.length; i++) {
            o = n[i];
            if (t.indexOf(o) >= 0) continue;
            r[o] = e[o];
        }
        return r;
    }
    /** @public */    var L = {
        children: i().node,
        index: i().number,
        onRequestRemove: i().func,
        renderDragHandle: i().func,
        style: i().object,
        value: i().node
    };
    var $ =  n().forwardRef((function(e, t) {
        var o = e.children, i = e.index, l = e.onRequestRemove, u = e.renderDragHandle, f = F(e, [ "children", "index", "onRequestRemove", "renderDragHandle" ]);
        var p = (0, s.useSplunkTheme)(), d = p.isCompact, v = p.isEnterprise;
        var y = d ? "20px" : "24px";
        var b = (0, r.useContext)(c), m = b.disabledDeleteButton, g = b.hasOnRequestAdd, w = b.onKeyDown, R = b.sortable;
        var S = (0, r.useCallback)((function(e) {
            // TODO: this callback doesn't work correctly if index isn't provided SUI-5639
            w === null || w === void 0 ? void 0 : w(e, {
                index: i !== null && i !== void 0 ? i : 0
            });
        }), [ w, i ]);
        var j = (0, r.useCallback)((function(e) {
            // TODO: this callback doesn't work correctly if index isn't provided SUI-5639
            l === null || l === void 0 ? void 0 : l(e, {
                index: i !== null && i !== void 0 ? i : 0
            });
        }), [ l, i ]);
        var k = l !== undefined;
        if (false) {}
        if (false) {}
        if (false) {}
        
        return n().createElement(H, M({
            $sortable: R,
            "data-test": "row",
            ref: t,
            onKeyDown: S
        }, h()(f, [ "onKeyDown", "onRequestRemove" ])), u && u(), o, k &&  n().createElement(A, null,  n().createElement(B, {
            appearance: "pill",
            "aria-label": (0, a._)("Remove Row"),
            "data-test": "remove",
            disabled: m,
            onClick: j
        }, v ?  n().createElement(O(), {
            "data-test": "cross",
            inline: false,
            screenReaderText: null,
            size: "13px"
        }) :  n().createElement(x(), {
            "data-test": "cross",
            height: y,
            width: y
        }))));
    }));
    $.propTypes = L;
    /* harmony default export */    const z = $;
    // CONCATENATED MODULE: external "@dnd-kit/sortable"
    const V = require("@dnd-kit/sortable");
    // CONCATENATED MODULE: external "@dnd-kit/utilities"
    const G = require("@dnd-kit/utilities");
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const J = require("@splunk/react-ui/ScreenReaderContent");
    var Q =  e.n(J);
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function U(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/FormRows/SortableRow.tsx
    function W(e, t) {
        if (e == null) return {};
        var r = X(e, t);
        var n, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                n = i[o];
                if (t.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function X(e, t) {
        if (e == null) return {};
        var r = {};
        var n = Object.keys(e);
        var o, i;
        for (i = 0; i < n.length; i++) {
            o = n[i];
            if (t.indexOf(o) >= 0) continue;
            r[o] = e[o];
        }
        return r;
    }
    function Y() {
        Y = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return Y.apply(this, arguments);
    }
    var Z = {
        children: i().node,
        index: i().number,
        onRequestRemove: i().func,
        value: i().node
    };
    var ee =  n().forwardRef((function(e, t) {
        
        return n().createElement(N, Y({
            "data-test": "drag-handle",
            ref: t
        }, e),  n().createElement(Q(), null, (0, a._)("Press arrow up or arrow down to re-order items")));
    }));
    var te =  n().forwardRef((function(e, t) {
        var r = e.children, o = e.index, i = W(e, [ "children", "index" ]);
        // @docs-props-type RowPropsBase
                var a = (0, V.useSortable)({
            // @dnd-kit requires "id" to be greater than 0 https://github.com/clauderic/dnd-kit/issues/1150
            // TODO: FormRows drag functionality doesn't work without an index, but it's not a required prop SUI-5639
            id: (o || 0) + 1
        }), l = a.attributes, u = a.listeners, c = a.setActivatorNodeRef, s = a.setNodeRef, f = a.transform, p = a.transition;
        var d = {
            transform: G.CSS.Transform.toString(f),
            transition: p
        };
        var v = function e(r) {
            s(r);
            U(t, r);
        };
        
        return n().createElement(z, Y({
            index: o,
            ref: v,
            renderDragHandle: function e() {
                
                return n().createElement(ee, Y({
                    ref: c
                }, u));
            },
            style: d
        }, i, l), r);
    }));
    te.propTypes = Z;
    /* harmony default export */    const re = te;
    // CONCATENATED MODULE: ./src/FormRows/Row.tsx
    function ne(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            ne = function e(t) {
                return typeof t;
            };
        } else {
            ne = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return ne(e);
    }
    function oe() {
        oe = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return oe.apply(this, arguments);
    }
    function ie(e, t) {
        if (e == null) return {};
        var r = ae(e, t);
        var n, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                n = i[o];
                if (t.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function ae(e, t) {
        if (e == null) return {};
        var r = {};
        var n = Object.keys(e);
        var o, i;
        for (i = 0; i < n.length; i++) {
            o = n[i];
            if (t.indexOf(o) >= 0) continue;
            r[o] = e[o];
        }
        return r;
    }
    function le(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function ue(e, t) {
        for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || false;
            n.configurable = true;
            if ("value" in n) n.writable = true;
            Object.defineProperty(e, n.key, n);
        }
    }
    function ce(e, t, r) {
        if (t) ue(e.prototype, t);
        if (r) ue(e, r);
        return e;
    }
    function se(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) fe(e, t);
    }
    function fe(e, t) {
        fe = Object.setPrototypeOf || function e(t, r) {
            t.__proto__ = r;
            return t;
        };
        return fe(e, t);
    }
    function pe(e) {
        var t = ye();
        return function r() {
            var n = be(e), o;
            if (t) {
                var i = be(this).constructor;
                o = Reflect.construct(n, arguments, i);
            } else {
                o = n.apply(this, arguments);
            }
            return de(this, o);
        };
    }
    function de(e, t) {
        if (t && (ne(t) === "object" || typeof t === "function")) {
            return t;
        }
        return ve(e);
    }
    function ve(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function ye() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function be(e) {
        be = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return be(e);
    }
    function me(e, t, r) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: r,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = r;
        }
        return e;
    }
    var he = {
        children: i().node,
        elementRef: i().oneOfType([ i().func, i().object ]),
        index: i().number,
        onRequestRemove: i().func,
        value: i().node
    };
    var ge =  function(e) {
        se(r, e);
        var t = pe(r);
        function r() {
            le(this, r);
            return t.apply(this, arguments);
        }
        ce(r, [ {
            key: "render",
            // @docs-props-type RowPropsBase
            value: function e() {
                var t = this.props, r = t.children, o = t.elementRef, i = ie(t, [ "children", "elementRef" ]);
                var a = this.context.sortable;
                var l = h()(i, [ "onKeyDown" ]);
                var u = a ? re : z;
                
                return n().createElement(u, oe({
                    ref: o
                }, l), r);
            }
        } ]);
        return r;
    }(r.Component);
    me(ge, "propTypes", he);
    me(ge, "contextType", c);
    /* harmony default export */    const xe = ge;
    // CONCATENATED MODULE: external "@dnd-kit/core"
    const we = require("@dnd-kit/core");
    // CONCATENATED MODULE: ./src/FormRows/SortableList.tsx
    var Oe = function e(t) {
        var o = t.children, i = t.onSortEnd;
        var a = (0, we.useSensors)((0, we.useSensor)(we.PointerSensor), (0, we.useSensor)(we.MouseSensor));
        var l = r.Children.toArray(o).filter(r.isValidElement);
        var u = l.map((function(e) {
            return (e.props.index || 0) + 1;
        }));
        function c(e) {
            var t = e.active, r = e.over;
            if (r && t.id !== r.id) {
                var n = u.indexOf(t.id);
                var o = u.indexOf(r.id);
                i({
                    oldIndex: n,
                    newIndex: o
                });
            }
        }
        
        return n().createElement(we.DndContext, {
            sensors: a,
            collisionDetection: we.closestCenter,
            onDragEnd: c
        },  n().createElement(V.SortableContext, {
            items: u,
            strategy: V.verticalListSortingStrategy
        }, l));
    };
    /* harmony default export */    const Re = Oe;
    // CONCATENATED MODULE: ./src/FormRows/FormRows.tsx
    function Se(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Se = function e(t) {
                return typeof t;
            };
        } else {
            Se = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Se(e);
    }
    function je() {
        je = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    if (Object.prototype.hasOwnProperty.call(r, n)) {
                        e[n] = r[n];
                    }
                }
            }
            return e;
        };
        return je.apply(this, arguments);
    }
    function ke(e, t) {
        if (e == null) return {};
        var r = Ee(e, t);
        var n, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                n = i[o];
                if (t.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function Ee(e, t) {
        if (e == null) return {};
        var r = {};
        var n = Object.keys(e);
        var o, i;
        for (i = 0; i < n.length; i++) {
            o = n[i];
            if (t.indexOf(o) >= 0) continue;
            r[o] = e[o];
        }
        return r;
    }
    function _e(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Pe(e, t) {
        for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || false;
            n.configurable = true;
            if ("value" in n) n.writable = true;
            Object.defineProperty(e, n.key, n);
        }
    }
    function qe(e, t, r) {
        if (t) Pe(e.prototype, t);
        if (r) Pe(e, r);
        return e;
    }
    function Ce(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) De(e, t);
    }
    function De(e, t) {
        De = Object.setPrototypeOf || function e(t, r) {
            t.__proto__ = r;
            return t;
        };
        return De(e, t);
    }
    function Ie(e) {
        var t = Ae();
        return function r() {
            var n = Be(e), o;
            if (t) {
                var i = Be(this).constructor;
                o = Reflect.construct(n, arguments, i);
            } else {
                o = n.apply(this, arguments);
            }
            return Te(this, o);
        };
    }
    function Te(e, t) {
        if (t && (Se(t) === "object" || typeof t === "function")) {
            return t;
        }
        return He(e);
    }
    function He(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Ae() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Be(e) {
        Be = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Be(e);
    }
    function Ne(e, t, r) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: r,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = r;
        }
        return e;
    }
    var Me = {
        addLabel: i().string,
        children: i().node,
        disabled: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        header: i().node,
        menu: i().node,
        onRequestAdd: i().func,
        onRequestMove: i().func
    };
    var Fe = {
        addLabel: (0, a._)("Add Row"),
        disabled: false,
        header: null
    };
    var Ke =  function(e) {
        Ce(o, e);
        var t = Ie(o);
        function o() {
            var e;
            _e(this, o);
            for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++) {
                i[a] = arguments[a];
            }
            e = t.call.apply(t, [ this ].concat(i));
            Ne(He(e), "handleKeyDown", (function(t, r) {
                var o = r.index;
                if (t.currentTarget !== t.target) {
                    return;
                }
                if ((0, l.keycode)(t.nativeEvent) === "up") {
                    t.preventDefault();
                    if (o > 0) {
                        var i, a;
                        (i = (a = e.props).onRequestMove) === null || i === void 0 ? void 0 : i.call(a, {
                            fromIndex: o,
                            toIndex: o - 1
                        });
                    }
                } else if ((0, l.keycode)(t.nativeEvent) === "down") {
                    t.preventDefault();
                    if (o < n().Children.toArray(e.props.children).length - 1) {
                        var u, c;
                        (u = (c = e.props).onRequestMove) === null || u === void 0 ? void 0 : u.call(c, {
                            fromIndex: o,
                            toIndex: o + 1
                        });
                    }
                }
            }));
            Ne(He(e), "handleSortEnd", (function(t) {
                var r, n;
                var o = t.oldIndex, i = t.newIndex;
                (r = (n = e.props).onRequestMove) === null || r === void 0 ? void 0 : r.call(n, {
                    fromIndex: o,
                    toIndex: i
                });
            }));
            return e;
        }
        qe(o, [ {
            key: "render",
            value: function e() {
                var t = this.props, r = t.addLabel, o = t.children, i = t.disabled, a = t.header, l = t.menu, u = t.onRequestAdd, s = t.onRequestMove, f = ke(t, [ "addLabel", "children", "disabled", "header", "menu", "onRequestAdd", "onRequestMove" ]);
                var p = s !== undefined && !i;
                var d = p ? D : "div";
                var v = u !== undefined;
                
                return n().createElement(C, je({
                    "data-test": "form-rows"
                }, f),  n().createElement(c.Provider, {
                    value: {
                        disabledDeleteButton: i,
                        onKeyDown: this.handleKeyDown,
                        hasOnRequestAdd: v,
                        sortable: p
                    }
                }, a &&  n().createElement(d, null, a),  n().createElement(T, null,  n().createElement(Re, {
                    onSortEnd: this.handleSortEnd
                }, o)), l || v &&  n().createElement(I, {
                    disabled: i,
                    appearance: "pill",
                    "data-test": "add-row",
                    icon:  n().createElement(b, null),
                    label: r,
                    onClick: u,
                    $sortable: p
                })));
            }
        } ], [ {
            key: "addRow",
            /**
     * Static function for adding a row.
     *
     * Example Use:
     *
     *      onRequestAdd() => {
     *          this.setState(state => ({
     *              items: FormRows.addRow(
     *                  <FormRows.Row
     *                      index={state.items.length}
     *                      key={createDOMID()}
     *                      onRequestRemove={this.handleRequestRemove}
     *                  >
     *                      <Text />
     *                  </FormRows.Row>,
     *                  state.items
     *              ),
     *          }));
     *      };
     *
     * @param element Row element to add.
     * @param items Array of current FormRows to add to.
     * @return New array of FormRows with new Row added.
     */
            value: function e(t, r) {
                return r.concat(t);
            }
            /**
     * Static function for moving a row.
     *
     * Example Use:
     *
     *      onRequestMove({ fromIndex, toIndex }) => {
     *          this.setState(state => ({
     *              items: FormRows.moveRow(fromIndex, toIndex, state.items),
     *          }));
     *      };
     *
     * @param fromIndex Current index of row to move.
     * @param toIndex New index to move row to.
     * @param items Array of current FormRows.
     * @return New array of FormRows arranged in new order.
     */        }, {
            key: "moveRow",
            value: function e(t, n, o) {
                var i = o.filter((function(e, r) {
                    return r !== t;
                }));
                i.splice(n, 0, o[t]);
                return i.map((function(e, t) {
                    
                    return (0, r.cloneElement)(e, {
                        index: t
                    });
                }));
            }
            /**
     * Static function for removing a row.
     *
     * Example Use:
     *
     *      onRequestRemove(e, { index }) => {
     *          this.setState(state => ({
     *              items: FormRows.removeRow(index, state.items),
     *          }));
     *      };
     *
     * @param index Index of Row to delete.
     * @param items Array of current FormRows.
     * @return New array of FormRows with Row of given index deleted.
     */        }, {
            key: "removeRow",
            value: function e(t, n) {
                return n.filter((function(e, r) {
                    return r !== t;
                })).map((function(e, t) {
                    
                    return (0, r.cloneElement)(e, {
                        index: t
                    });
                }));
            }
        } ]);
        return o;
    }(r.Component);
    Ne(Ke, "propTypes", Me);
    Ne(Ke, "defaultProps", Fe);
    Ne(Ke, "Row", xe);
    /* harmony default export */    const Le = Ke;
    // CONCATENATED MODULE: ./src/FormRows/index.ts
    module.exports = t;
    /******/})();