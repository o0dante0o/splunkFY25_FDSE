/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var n in t) {
                /******/ if (e.o(t, n) && !e.o(r, n)) {
                    /******/ Object.defineProperty(r, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* reexport */ R,
        getInitials: () => /* reexport */ P
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var n =  e.n(t);
    // CONCATENATED MODULE: external "prop-types"
    const i = require("prop-types");
    var a =  e.n(i);
    // CONCATENATED MODULE: external "lodash/omit"
    const o = require("lodash/omit");
    var s =  e.n(o);
    // CONCATENATED MODULE: external "styled-components"
    const c = require("styled-components");
    var l =  e.n(c);
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const u = require("@splunk/react-ui/Clickable");
    var f =  e.n(u);
    // CONCATENATED MODULE: external "@splunk/themes"
    const p = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Monogram/MonogramStyles.ts
    // Thanks: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0
    var d = function e(r) {
        var t = 0;
        for (var n = 0; n < r.length; ) {
            t = (t << 5) - t + r.charCodeAt(n++) | 0;
 // eslint-disable-line no-bitwise, no-plusplus
                }
        return t;
    };
    var m = [ "#006d9c", "#ec9960", "#af575a", "#62b3b2", "#4fa484", "#f8be34", "#5a4575", "#708794", "#294e70", "#b6c75a", "#5cc05c", "#007abd", "#dc4e41", "#f1813f", "#f8be34", "#53a051", "#006d9c", "#77d6d8", "#f589ad", "#6a2c5d" ];
    var b = l().div.withConfig({
        displayName: "MonogramStyles__Styled",
        componentId: "r5ud6k-0"
    })([ "", ";align-items:center;justify-content:center;border-radius:50%;font-weight:normal;", " background-color:", ";", ";& + &{margin-left:4px;}" ], p.mixins.reset("inline-flex"), (0, 
    p.pick)({
        prisma: (0, c.css)([ "color:", ";" ], p.variables.contentColorActive)
    }), (function(e) {
        var r = e.$backgroundColor, t = e.$initials;
        if (r === "theme") {
            return (0, p.pick)({
                enterprise: {
                    dark: p.variables.gray45,
                    light: p.variables.gray92
                },
                prisma: p.variables.neutral100
            });
        }
        if (r === "auto") {
            return m[d(t) % m.length];
        }
        return r;
    }), (function(e) {
        var r = e.$size;
        if (typeof r === "number") {
            return (0, c.css)([ "height:", "px;width:", "px;" ], r, r);
        }
        if (typeof r === "string") {
            return (0, p.pickVariant)("$size", {
                small: (0, c.css)([ "font-size:", ";", "" ], p.variables.fontSize, (0, p.pick)({
                    enterprise: (0, c.css)([ "height:32px;width:32px;" ]),
                    prisma: (0, c.css)([ "height:24px;width:24px;" ])
                })),
                medium: (0, c.css)([ "height:48px;width:48px;font-size:", ";" ], p.variables.fontSize),
                large: (0, c.css)([ "height:80px;width:80px;font-size:", ";" ], p.variables.fontSizeXXLarge),
                xlarge: (0, c.css)([ "width:144px;height:144px;font-size:36px;font-weight:700;" ])
            });
        }
        return (0, c.css)([ "height:48px;width:48px;font-size:", ";" ], p.variables.fontSize);
    }));
    var v = b.withComponent(f());
    var h = l()(v).withConfig({
        displayName: "MonogramStyles__StyledClickable",
        componentId: "r5ud6k-1"
    })([ "cursor:pointer;position:relative;:focus,:hover{", "}:focus{box-shadow:", ";z-index:1;}:active{", "}" ], (0, 
    p.pick)({
        enterprise: (0, c.css)([ "box-shadow:", ";" ], p.variables.focusShadowInset),
        prisma: (0, c.css)([ "border:1px solid transparent;background-color:", ";" ], p.variables.neutral200)
    }), (0, p.pick)({
        enterprise: p.variables.focusShadowInset,
        prisma: p.variables.focusShadow
    }), (0, p.pick)({
        enterprise: (0, c.css)([ "opacity:0.85;" ]),
        prisma: (0, c.css)([ "border:1px solid transparent;background-color:", ";opacity:1;" ], p.variables.neutral200)
    }));
    var g = l().span.withConfig({
        displayName: "MonogramStyles__Initials",
        componentId: "r5ud6k-2"
    })([ "opacity:0.8;text-transform:capitalize;" ]);
    // CONCATENATED MODULE: ./src/Monogram/Monogram.tsx
    function y() {
        y = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return y.apply(this, arguments);
    }
    function k(e, r) {
        return C(e) || O(e, r) || w(e, r) || x();
    }
    function x() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function w(e, r) {
        if (!e) return;
        if (typeof e === "string") return S(e, r);
        var t = Object.prototype.toString.call(e).slice(8, -1);
        if (t === "Object" && e.constructor) t = e.constructor.name;
        if (t === "Map" || t === "Set") return Array.from(e);
        if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return S(e, r);
    }
    function S(e, r) {
        if (r == null || r > e.length) r = e.length;
        for (var t = 0, n = new Array(r); t < r; t++) {
            n[t] = e[t];
        }
        return n;
    }
    function O(e, r) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var t = [];
        var n = true;
        var i = false;
        var a = undefined;
        try {
            for (var o = e[Symbol.iterator](), s; !(n = (s = o.next()).done); n = true) {
                t.push(s.value);
                if (r && t.length === r) break;
            }
        } catch (e) {
            i = true;
            a = e;
        } finally {
            try {
                if (!n && o["return"] != null) o["return"]();
            } finally {
                if (i) throw a;
            }
        }
        return t;
    }
    function C(e) {
        if (Array.isArray(e)) return e;
    }
    function j(e, r) {
        if (e == null) return {};
        var t = z(e, r);
        var n, i;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (i = 0; i < a.length; i++) {
                n = a[i];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function z(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var i, a;
        for (a = 0; a < n.length; a++) {
            i = n[a];
            if (r.indexOf(i) >= 0) continue;
            t[i] = e[i];
        }
        return t;
    }
    var I = {
        backgroundColor: a().string,
        elementRef: a().oneOfType([ a().func, a().object ]),
        initials: a().string.isRequired,
        name: a().string,
        onClick: a().func,
        size: a().oneOfType([ a().oneOf([ "small", "medium", "large", "xlarge" ]), a().number ])
    };
    var _ = {
        backgroundColor: "theme",
        size: "medium"
    };
    function A(e) {
        return !!e.onClick;
    }
    /**
 * Returns a suitable set of initials for a name. Uses the first character of each
 * name segment and omits middle segments if the segment count is greater than three.
 * @param {string} name - The full name.
 * @returns {string} Limited to three characters. Empty if `name` is empty.
 * @public
 */    function P(e) {
        var r = (e.match(/[^\s-]+/g) || []).map((function(e) {
            return e[0];
        })).join("");
        return r.length > 3 ? "".concat(r[0]).concat(r[r.length - 1]) : r;
    }
    function $(e) {
        var r = e.backgroundColor, t = e.initials, n = e.size, i = j(e, [ "backgroundColor", "initials", "size" ]);
        var a = {
            "data-test": "monogram",
            $backgroundColor: r,
            $initials: t,
            $size: n
        };
        return [ a, i ];
    }
    function q(e) {
        var r = $(e), i = k(r, 2), a = i[0], o = i[1];
        var c = o.children, l = o.elementRef, u = o.name, f = o.onClick, p = j(o, [ "children", "elementRef", "name", "onClick" ]);
        var d = (0, t.useCallback)((function(e) {
            f(e, {
                name: u
            });
        }), [ f, u ]);
        
        return n().createElement(h, y({
            elementRef: l,
            onClick: d
        }, a, s()(p, Object.keys(I))), c);
    }
    function E(e) {
        var r = $(e), t = k(r, 2), i = t[0], a = t[1];
        var o = a.children, c = a.elementRef, l = j(a, [ "children", "elementRef" ]);
        
        return n().createElement(b, y({
            ref: c
        }, i, s()(l, Object.keys(I))), o);
    }
    function M(e) {
        // @docs-props-type MonogramPropsBase
        if (false) {}
        var r =  n().createElement(g, {
            "data-test": "initials"
        }, e.initials);
        return A(e) ?  n().createElement(q, e, r) :  n().createElement(E, e, r);
    }
    M.propTypes = I;
    M.defaultProps = _;
    /* harmony default export */    const R = M;
    // CONCATENATED MODULE: ./src/Monogram/index.ts
    module.exports = r;
    /******/})();