/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Body: () => /* reexport */ fe,
        Caption: () => /* reexport */ Se,
        Cell: () => /* reexport */ Fe,
        Head: () => /* reexport */ mo,
        HeadCell: () => /* reexport */ In,
        HeadDropdownCell: () => /* reexport */ Go,
        Row: () => /* reexport */ Ur,
        TableBase: () => /* reexport */ Pa,
        default: () => /* reexport */ Aa
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "@dnd-kit/core"
    const a = require("@dnd-kit/core");
    // CONCATENATED MODULE: external "@dnd-kit/sortable"
    const l = require("@dnd-kit/sortable");
    // CONCATENATED MODULE: external "@dnd-kit/modifiers"
    const c = require("@dnd-kit/modifiers");
    // CONCATENATED MODULE: external "lodash/forEach"
    const s = require("lodash/forEach");
    var u =  e.n(s);
    // CONCATENATED MODULE: external "lodash/has"
    const d = require("lodash/has");
    var f =  e.n(d);
    // CONCATENATED MODULE: external "lodash/indexOf"
    const p = require("lodash/indexOf");
    var v =  e.n(p);
    // CONCATENATED MODULE: external "lodash/isEqual"
    const h = require("lodash/isEqual");
    var y =  e.n(h);
    // CONCATENATED MODULE: external "lodash/isNumber"
    const b = require("lodash/isNumber");
    // CONCATENATED MODULE: external "lodash/omit"
    const m = require("lodash/omit");
    var g =  e.n(m);
    // CONCATENATED MODULE: external "lodash/throttle"
    const w = require("lodash/throttle");
    var x =  e.n(w);
    // CONCATENATED MODULE: external "react-resize-detector"
    const C = require("react-resize-detector");
    var k =  e.n(C);
    // CONCATENATED MODULE: external "@splunk/react-ui/EventListener"
    const S = require("@splunk/react-ui/EventListener");
    var O =  e.n(S);
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const R = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/react-ui/ScrollContainerContext"
    const E = require("@splunk/react-ui/ScrollContainerContext");
    // CONCATENATED MODULE: external "@splunk/react-ui/usePrevious"
    const I = require("@splunk/react-ui/usePrevious");
    var j =  e.n(I);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const D = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/ui-utils/format"
    const T = require("@splunk/ui-utils/format");
    // CONCATENATED MODULE: external "lodash/includes"
    const _ = require("lodash/includes");
    var P =  e.n(_);
    // CONCATENATED MODULE: external "lodash/without"
    const q = require("lodash/without");
    var A =  e.n(q);
    // CONCATENATED MODULE: external "styled-components"
    const z = require("styled-components");
    var H =  e.n(z);
    // CONCATENATED MODULE: external "@splunk/themes"
    const M = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Table/BodyStyles.ts
    var L = H().tbody.withConfig({
        displayName: "BodyStyles__Styled",
        componentId: "sc-1k5p6pq-0"
    })([ "", " z-index:0;" ], M.mixins.reset("table-row-group"));
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function N(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/Table/Body.tsx
    function $(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            $ = function e(t) {
                return typeof t;
            };
        } else {
            $ = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return $(e);
    }
    function W(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function K(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function B(e, t, n) {
        if (t) K(e.prototype, t);
        if (n) K(e, n);
        return e;
    }
    function F(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) V(e, t);
    }
    function V(e, t) {
        V = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return V(e, t);
    }
    function U(e) {
        var t = Y();
        return function n() {
            var r = Q(e), o;
            if (t) {
                var i = Q(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return G(this, o);
        };
    }
    function G(e, t) {
        if (t && ($(t) === "object" || typeof t === "function")) {
            return t;
        }
        return X(e);
    }
    function X(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Y() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Q(e) {
        Q = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Q(e);
    }
    function J(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    function Z() {
        Z = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Z.apply(this, arguments);
    }
    function ee(e, t) {
        return ie(e) || oe(e, t) || ne(e, t) || te();
    }
    function te() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ne(e, t) {
        if (!e) return;
        if (typeof e === "string") return re(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return re(e, t);
    }
    function re(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function oe(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var i = undefined;
        try {
            for (var a = e[Symbol.iterator](), l; !(r = (l = a.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            i = e;
        } finally {
            try {
                if (!r && a["return"] != null) a["return"]();
            } finally {
                if (o) throw i;
            }
        }
        return n;
    }
    function ie(e) {
        if (Array.isArray(e)) return e;
    }
    function ae(e, t) {
        if (e == null) return {};
        var n = le(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function le(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    var ce = {
        /** @private. Generally passed by Table rather than added directly. */
        actions: i().bool,
        children: i().node,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. Generally passed by Table rather than added directly. */
        movableColumns: i().bool,
        /** @private. Generally passed by Table rather than added directly. */
        rowExpansion: i().oneOf([ "single", "multi", "none", "controlled" ]),
        /** @private. Generally passed by Table rather than added directly. */
        onRequestMoveRow: i().func,
        /** @private. Generally passed by Table rather than added directly. */
        primaryColumnIndex: i().number,
        /** @private. Generally passed by Table rather than added directly. */
        stripeRows: i().bool
    };
    var se = {
        actions: false,
        rowExpansion: "none",
        stripeRows: false
    };
    function ue(e) {
        var t = e.actions, o = e.children, i = e.elementRef, a = e.movableColumns, l = e.onRequestMoveRow, c = e.rowExpansion, s = e.primaryColumnIndex, u = e.stripeRows, d = ae(e, [ "actions", "children", "elementRef", "movableColumns", "onRequestMoveRow", "rowExpansion", "primaryColumnIndex", "stripeRows" ]);
        var f = [];
        var p = (0, n.useState)([]), v = ee(p, 2), h = v[0], y = v[1];
        var b = (0, n.useRef)(null);
        var m = (0, n.useCallback)((function(e) {
            b.current = e;
            N(i, e);
        }), [ i, b ]);
        var g = function e(t, n, r) {
            var o = h;
            if (c === "single") {
                if (P()(o, n)) {
                    y([]);
                } else {
                    y([ n ]);
                }
            } else if (c === "multi") {
                if (P()(o, n)) {
                    y(A()(o, n));
                } else {
                    y(o === null || o === void 0 ? void 0 : o.concat(n));
                }
            }
            r === null || r === void 0 ? void 0 : r(t);
        };
        var w = n.Children.toArray(o).filter(n.isValidElement);
        w.forEach((function(e, r) {
            if (e) {
                if (false) {}
                var o = e.key;
                var i = r % 2 ? "even" : "odd";
                var d = u ? i : "none";
                var p = c === "controlled" ? e.props.expanded : P()(h, o);
                var v = function t(n) {
                    g(n, o, e.props.onExpansion);
                };
                f.push( (0, n.cloneElement)(e, {
                    stripe: d,
                    actions: t,
                    expanded: p,
                    expandable: c !== "none",
                    draggable: !!l,
                    movableColumns: a,
                    primaryColumnIndex: s,
                    onExpansion: v,
                    key: e.key || e.props.dataId || r
                }));
                if (p && e.props.expansionRow) {
                    n.Children.forEach(e.props.expansionRow, (function(e, t) {
                        return f.push( (0, n.cloneElement)(e, {
                            key: "".concat(o, "-expansion-").concat(t),
                            stripe: d,
                            movableColumns: a,
                            "data-expansion-row": "true"
                        }));
                    }));
                }
            }
        }));
        if (f.length === 0) {
            return null;
        }
        
        return r().createElement(L, Z({
            "data-test": "body"
        }, d, {
            ref: m
        }), f);
    }
    ue.propTypes = ce;
    var de =  function(e) {
        F(n, e);
        var t = U(n);
        function n() {
            var e;
            W(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            J(X(e), "el", null);
            J(X(e), "rect", void 0);
            J(X(e), "rowHeight", void 0);
            J(X(e), "rows", void 0);
            return e;
        }
        B(n, [ {
            key: "render",
            value: function e() {
                
                return r().createElement(ue, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    J(de, "splunkUiType", "Table.Body");
    J(de, "propTypes", ce);
    J(de, "defaultProps", se);
    /* harmony default export */    const fe = de;
 // exporting the base component for testing purpose
        // CONCATENATED MODULE: ./src/Table/TableStyles.ts
    var pe = H().div.withConfig({
        displayName: "TableStyles__Styled",
        componentId: "sc-1cmfss7-0"
    })([ "", ";max-width:100%;position:relative;z-index:1;@media print{max-height:none !important;}" ], M.mixins.reset("block"));
    var ve = H().div.withConfig({
        displayName: "TableStyles__StyledTableContainer",
        componentId: "sc-1cmfss7-1"
    })([ "overflow:auto;&::before{content:'';width:100%;height:0;top:0;position:absolute;}" ]);
    var he = H().table.withConfig({
        displayName: "TableStyles__StyledTable",
        componentId: "sc-1cmfss7-2"
    })([ "", ";position:relative;border-collapse:collapse;border-spacing:0;min-width:100%;z-index:0;&[data-fixed-column='true']{table-layout:fixed;min-width:0;width:0;}", " @media print{width:100%;max-width:100%;table-layout:auto;}" ], M.mixins.reset("table"), (function(e) {
        var t = e.$resizableFillLayout;
        return t && (0, z.css)([ "width:100%;min-width:100%;table-layout:fixed;" ]);
    }));
    var ye = H().div.withConfig({
        displayName: "TableStyles__StyledDockedScrollbar",
        componentId: "sc-1cmfss7-3"
    })([ "position:fixed;bottom:0;overflow:auto;z-index:calc(", " + 1);" ], M.variables.zindexFixedNavbar);
    var be = H().div.withConfig({
        displayName: "TableStyles__StyledDockedScrollbarContent",
        componentId: "sc-1cmfss7-4"
    })([ "height:1px;" ]);
    var me = H().caption.withConfig({
        displayName: "TableStyles__StyledTableCaption",
        componentId: "sc-1cmfss7-5"
    })([ "padding:", ";font-size:", ";caption-side:", ";" ], (0, M.pick)({
        enterprise: "".concat(M.variables.spacingQuarter, " 0"),
        prisma: "5px 0"
    }), M.variables.fontSizeLarge, (function(e) {
        var t = e.side;
        return t;
    }));
    // CONCATENATED MODULE: ./src/Table/Caption.tsx
    function ge() {
        ge = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return ge.apply(this, arguments);
    }
    function we(e, t) {
        if (e == null) return {};
        var n = xe(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function xe(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    var Ce = {
        children: i().node.isRequired,
        side: i().oneOf([ "top", "bottom" ])
    };
    /**
 * Tables that use a docked header must place the caption on the bottom side.
 * Tables that use a fixed header cannot use captions.
 */    function ke(e) {
        var t = e.children, n = e.side, o = n === void 0 ? "top" : n, i = we(e, [ "children", "side" ]);
        // @docs-props-type CaptionPropsBase
                
        return r().createElement(me, ge({
            "data-test": "caption",
            side: o
        }, i), t);
    }
    ke.propTypes = Ce;
    ke.splunkUiType = "Table.Caption";
    /* harmony default export */    const Se = ke;
    // CONCATENATED MODULE: ./src/Table/CellStyles.ts
    var Oe = (0, z.css)([ "box-shadow:", ";", ";" ], M.variables.focusShadowInset, (0, 
    M.pick)({
        prisma: (0, z.css)([ "color:", ";" ], M.variables.contentColorDefault)
    }));
    var Re = H().td.withConfig({
        displayName: "CellStyles__Styled",
        componentId: "sc-1955xk2-0"
    })([ "", " padding:", ";border-left:0 solid transparent;border-right:0 solid transparent;word-wrap:break-word;line-height:", ";vertical-align:top;", " ", " ", " ", " ", " ", " [data-expansion-row='true'] > &:first-child{padding-top:8px;}[data-expansion-row='true'] > &:last-child{padding-bottom:14px;}[data-has-movable-columns='true'] > &:not([data-movable-column='false']){", "}" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: "6px 12px",
        prisma: {
            comfortable: "14px 8px",
            compact: "6px 8px"
        }
    }), M.variables.lineHeight, (0, M.pickVariant)("$align", {
        center: (0, z.css)([ "text-align:center;" ]),
        left: (0, z.css)([ "text-align:left;" ]),
        right: (0, z.css)([ "text-align:right;" ])
    }), (0, M.pickVariant)("$variant", {
        expand: {
            enterprise: (0, z.css)([ "padding:6px 0 0 0;" ]),
            prisma: {
                comfortable: (0, z.css)([ "padding:12px 0 0 0;" ]),
                compact: (0, z.css)([ "padding:4px 0 0 0;" ])
            }
        },
        actions: {
            prisma: {
                comfortable: (0, z.css)([ "padding:4px 8px;" ]),
                compact: (0, z.css)([ "padding:0 8px 0 0;" ])
            }
        },
        toggle: {
            prisma: {
                comfortable: (0, z.css)([ "padding:10px 0 0 0;" ]),
                compact: (0, z.css)([ "padding:6px 0 0 0;" ])
            }
        }
    }), (0, M.pickVariant)("$appearance", {
        rowLink: {
            enterprise: (0, z.css)([ "color:", ";*:hover > &&{cursor:pointer;}" ], M.variables.linkColor),
            prisma: (0, z.css)([ "color:", ";*:hover > &&{cursor:pointer;}" ], M.variables.contentColorDefault)
        },
        link: {
            enterprise: (0, z.css)([ "color:", ";&:hover{cursor:pointer;color:{dark:variables.accentColorL20,light:variables.linkColor,};box-shadow:", ";}&:focus{color:{dark:variables.accentColorL20,light:variables.focusColor,};box-shadow:", ";}" ], M.variables.linkColor, M.variables.focusShadowInset, M.variables.focusShadowInset)
        }
    }), (function(e) {
        var t = e.$clickable, n = e.$focusWithin;
        return t && (0, z.css)([ "cursor:pointer;&:hover{background-color:", ";color:", ";}&:focus{", "}", " &:active{background:", ";}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.accentColorL50,
                dark: M.variables.accentColorD50
            },
            prisma: M.variables.interactiveColorOverlayHover
        }), (0, M.pick)({
            prisma: M.variables.contentColorDefault
        }), Oe, n && (0, z.css)([ "&:focus-within{", "}" ], Oe), (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayActive
        }));
    }), (function(e) {
        var t = e.$expanded;
        return t && (0, z.css)([ "background-color:", ";" ], (0, M.pick)({
            prisma: M.variables.interactiveColorOverlaySelected
        }));
    }), (function(e) {
        var t = e.$disabled;
        return t && (0, z.css)([ "color:", ";" ], (0, M.pick)({
            prisma: M.variables.contentColorDisabled
        }));
    }), (0, M.pick)({
        enterprise: (0, z.css)([ "padding-left:29px;&:first-child{padding-left:28px;}" ])
    }));
    // CONCATENATED MODULE: ./src/Table/Cell.tsx
    function Ee(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Ee = function e(t) {
                return typeof t;
            };
        } else {
            Ee = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Ee(e);
    }
    function Ie() {
        Ie = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Ie.apply(this, arguments);
    }
    function je(e, t) {
        if (e == null) return {};
        var n = De(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function De(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function Te(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function _e(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Pe(e, t, n) {
        if (t) _e(e.prototype, t);
        if (n) _e(e, n);
        return e;
    }
    function qe(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Ae(e, t);
    }
    function Ae(e, t) {
        Ae = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Ae(e, t);
    }
    function ze(e) {
        var t = Le();
        return function n() {
            var r = Ne(e), o;
            if (t) {
                var i = Ne(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return He(this, o);
        };
    }
    function He(e, t) {
        if (t && (Ee(t) === "object" || typeof t === "function")) {
            return t;
        }
        return Me(e);
    }
    function Me(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Le() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Ne(e) {
        Ne = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Ne(e);
    }
    function $e(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var We = {
        align: i().oneOf([ "left", "center", "right" ]),
        /** @private */
        appearance: i().oneOf([ "data", "link", "rowLink" ]),
        /** @private Used to set the $clickable appearance without an onClick */
        appearClickable: i().bool,
        children: i().node,
        data: i().any,
        elementRef: i().oneOfType([ i().func, i().object ]),
        onClick: i().func,
        /** @private */
        onKeyDown: i().func,
        /** @private */
        disabled: i().bool,
        /** @private. */
        expand: i().bool,
        /** @private. */
        variant: i().oneOf([ "toggle", "expand", "drag", "actions" ])
    };
    var Ke = {
        align: "left"
    };
    var Be =  function(e) {
        qe(n, e);
        var t = ze(n);
        function n() {
            var e;
            Te(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            $e(Me(e), "el", null);
            $e(Me(e), "handleMount", (function(t) {
                e.el = t;
                N(e.props.elementRef, t);
            }));
            $e(Me(e), "handleClick", (function(t) {
                var n = e.props, r = n.data, o = n.onClick;
                o === null || o === void 0 ? void 0 : o(t, r);
            }));
            $e(Me(e), "handleKeyDown", (function(t) {
                var n = e.props, r = n.data, o = n.onClick, i = n.onKeyDown;
                if ((0, R.keycode)(t.nativeEvent) === "enter") {
                    o === null || o === void 0 ? void 0 : o(t, r);
                }
                i === null || i === void 0 ? void 0 : i(t);
            }));
            return e;
        }
        Pe(n, [ {
            key: "render",
            value: function e() {
                var t = this.props, n = t.align, o = t.appearance, i = t.appearClickable, a = t.children, l = t.disabled, c = t.elementRef, s = t.onClick, u = t.onKeyDown, d = t.variant, f = je(t, [ "align", "appearance", "appearClickable", "children", "disabled", "elementRef", "onClick", "onKeyDown", "variant" ]);
                var p = s !== undefined;
                var v = i || p;
                var h = v ? "link" : "data";
                
                return r().createElement(Re, Ie({
                    "data-test": "cell",
                    $align: n,
                    $appearance: o || h,
                    $clickable: v ? true : undefined,
                    $disabled: !!l,
                    $focusWithin: i,
                    $variant: d,
                    onClick: this.handleClick,
                    onKeyDown: this.handleKeyDown,
                    ref: this.handleMount,
                    tabIndex: p ? 0 : undefined
                }, f), a);
            }
        } ]);
        return n;
    }(n.Component);
    $e(Be, "splunkUiType", "Table.Cell");
    $e(Be, "propTypes", We);
    $e(Be, "defaultProps", Ke);
    /* harmony default export */    const Fe = Be;
    // CONCATENATED MODULE: external "lodash/findIndex"
    const Ve = require("lodash/findIndex");
    var Ue =  e.n(Ve);
    // CONCATENATED MODULE: external "lodash/keys"
    const Ge = require("lodash/keys");
    var Xe =  e.n(Ge);
    // CONCATENATED MODULE: external "lodash/isString"
    const Ye = require("lodash/isString");
    var Qe =  e.n(Ye);
    // CONCATENATED MODULE: external "lodash/merge"
    const Je = require("lodash/merge");
    var Ze =  e.n(Je);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowDown"
    const et = require("@splunk/react-icons/ArrowDown");
    var tt =  e.n(et);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowUp"
    const nt = require("@splunk/react-icons/ArrowUp");
    var rt =  e.n(nt);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowUpDown"
    const ot = require("@splunk/react-icons/ArrowUpDown");
    var it =  e.n(ot);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
    const at = require("@splunk/react-icons/CaretSmallDown");
    var lt =  e.n(at);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretsSmallUpDown"
    const ct = require("@splunk/react-icons/CaretsSmallUpDown");
    var st =  e.n(ct);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
    const ut = require("@splunk/react-icons/enterprise/Caret");
    var dt =  e.n(ut);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const ft = require("@splunk/react-ui/ScreenReaderContent");
    var pt =  e.n(ft);
    // CONCATENATED MODULE: external "@splunk/react-ui/Divider"
    const vt = require("@splunk/react-ui/Divider");
    var ht =  e.n(vt);
    // CONCATENATED MODULE: ./src/Table/HeadInnerStyles.ts
    var yt = "12px";
    var bt = H().div.withConfig({
        displayName: "HeadInnerStyles__StyledDragContainer",
        componentId: "sc-1sa0wng-0"
    })([ "position:absolute;cursor:move;top:0;", " padding:", ";" ], (0, M.pick)({
        enterprise: (0, z.css)([ "left:0;" ]),
        prisma: (0, z.css)([ "right:0;" ])
    }), (0, M.pick)({
        enterprise: "9px 12px",
        prisma: {
            comfortable: "17px 4px 14px",
            compact: "9px 4px 6px"
        }
    }));
    var mt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledMenuIcon",
        componentId: "sc-1sa0wng-1"
    })([ "", " color:", ";position:relative;" ], (0, M.pick)({
        prisma: (0, z.css)([ "display:inline-flex;" ]),
        enterprise: (0, z.css)([ "padding-left:4px;" ])
    }), (0, M.pick)({
        enterprise: M.variables.textGray,
        prisma: M.variables.contentColorDefault
    }));
    var gt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledLabel",
        componentId: "sc-1sa0wng-2"
    })([ "flex:0 1 auto;position:relative;word-wrap:break-word;word-break:break-word;", " ", " ", " ", " ", " + &{margin-left:", ";}" ], (0, 
    M.pick)({
        enterprise: function e(t) {
            var n = t.$align;
            return n !== "right" && (0, z.css)([ "display:flex;justify-content:space-between;" ]);
        },
        prisma: (0, z.css)([ "display:flex;" ])
    }), (0, M.pickVariant)("$truncate", {
        true: (0, z.css)([ "overflow:hidden;text-overflow:ellipsis;white-space:nowrap;" ])
    }), (0, M.pickVariant)("$fill", {
        true: (0, z.css)([ "flex:1 0 0px;" ])
    }), (0, M.pickVariant)("$align", {
        right: (0, z.css)([ "& > &{text-align:right;}" ]),
        left: (0, z.css)([ "& > &{text-align:left;}" ]),
        center: (0, z.css)([ "& > &{text-align:center;}" ])
    }), 
    /* sc-sel */
    bt, (0, M.pick)({
        enterprise: yt
    }));
    var wt = H().div.withConfig({
        displayName: "HeadInnerStyles__Styled",
        componentId: "sc-1sa0wng-3"
    })([ "", " ", ";position:relative;font-size:", ";", ";line-height:", ";justify-content:", ";padding:", ";", " ", " ", " &[data-helper]{background-color:", ";position:absolute;left:-10000px;top:-10000px;box-shadow:", ";box-sizing:border-box;background-repeat:repeat-x;", ";}@media print{background-image:none;}" ], M.mixins.reset("flex"), M.mixins.clearfix(), (0, 
    M.pick)({
        enterprise: "inherit",
        prisma: "12px"
    }), (0, M.pick)({
        prisma: (0, z.css)([ "font-weight:bold;" ])
    }), (0, M.pick)({
        enterprise: M.variables.lineHeight,
        prisma: "16px"
    }), (0, M.pickVariant)("$align", {
        center: "center",
        left: "flex-start",
        right: "flex-end"
    }), (0, M.pick)({
        enterprise: "6px 12px",
        prisma: {
            comfortable: "16px 10px",
            compact: "8px"
        }
    }), (function(e) {
        var t = e.$hasActionsHead;
        return t && (0, z.css)([ "padding:0;" ]);
    }), (function(e) {
        var t = e.$dragging;
        return t && (0, z.css)([ "opacity:0;" ]);
    }), (function(e) {
        var t = e.$draggable;
        return t && (0, z.css)([ "padding-left:", ";-webkit-user-drag:element;user-select:none;" ], (0, 
        M.pick)({
            enterprise: "16px"
        }));
    }), (0, M.pick)({
        enterprise: {
            light: M.variables.accentColorL50,
            dark: M.variables.accentColorD50
        },
        prisma: M.mixins.overlayColors(M.variables.interactiveColorBackground, M.variables.interactiveColorOverlaySelected)
    }), (0, M.pick)({
        enterprise: M.variables.overlayShadow,
        prisma: M.variables.dragShadow
    }), (0, M.pick)({
        enterprise: (0, z.css)([ "border:1px solid ", ";" ], M.variables.borderColor)
    }));
    var xt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledSortIcon",
        componentId: "sc-1sa0wng-4"
    })([ "flex:0 0 auto;", ";", " color:", ";", "" ], (0, M.pick)({
        enterprise: (0, z.css)([ "right:0;" ]),
        prisma: (0, z.css)([ "left:0;" ])
    }), (0, M.pick)({
        prisma: (0, z.css)([ "margin-right:4px;" ])
    }), (0, M.pick)({
        enterprise: {
            light: M.variables.textGray,
            dark: M.variables.gray80
        }
    }), (function(e) {
        var t = e.$sorted;
        return t && (0, z.css)([ "color:", ";" ], (0, M.pick)({
            enterprise: M.variables.accentColor,
            prisma: M.variables.contentColorDefault
        }));
    }));
    var Ct = H()(ht()).withConfig({
        displayName: "HeadInnerStyles__StyledResize",
        componentId: "sc-1sa0wng-5"
    })([ "", ";position:absolute;right:-5px;width:9px;top:0;bottom:0;z-index:1;cursor:col-resize;th:last-child > ", " > &{right:0;width:5px;}&::-moz-focus-inner{border:0;padding:0;}&:focus{outline:none;&::before{content:'';position:absolute;background:", ";box-shadow:", ";left:4px;width:1px;top:0;bottom:0;}}" ], M.mixins.reset("block"), 
    /* sc-sel */
    wt, M.variables.focusColor, M.variables.focusShadow);
 // TODO: SUI-5361 remove StyledCaretUp and StyledCaretDown once have made a general way to address the multicolor icon problem
        var kt = H()(st()).withConfig({
        displayName: "HeadInnerStyles__StyledCaretDown",
        componentId: "sc-1sa0wng-6"
    })([ "path:last-child{fill:transparent;}" ]);
    var St = H()(st()).withConfig({
        displayName: "HeadInnerStyles__StyledCaretUp",
        componentId: "sc-1sa0wng-7"
    })([ "path:first-child{fill:transparent;}" ]);
    // CONCATENATED MODULE: ./src/Table/HeadCellStyles.ts
    var Ot = (0, z.css)([ "box-shadow:", ";outline:none;& > ", "{", ";}" ], M.variables.focusShadowInset, 
    /* sc-sel */
    wt, (0, M.pick)({
        enterprise: {
            light: (0, z.css)([ "color:", ";" ], M.variables.accentColorD10),
            dark: (0, z.css)([ "color:", ";" ], M.variables.linkColorHover)
        },
        prisma: (0, z.css)([ "background-color:", ";" ], M.variables.interactiveColorOverlaySelected)
    }));
    var Rt = H().th.withConfig({
        displayName: "HeadCellStyles__Styled",
        componentId: "sc-1hj81sa-0"
    })([ "", ";background-color:", ";box-sizing:content-box;text-align:left;vertical-align:", ";& + &{border-left:1px solid ", ";}", " ", " ", " ", "" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: {
            light: M.variables.gray92,
            dark: M.variables.black
        },
        prisma: M.variables.interactiveColorBackground
    }), (function(e) {
        var t = e.$variant;
        return t ? "middle" : "top";
    }), (0, M.pick)({
        enterprise: M.variables.backgroundColor,
        prisma: M.variables.backgroundColorPage
    }), (function(e) {
        var t = e.$isFixed, n = e.$zIndex;
        return t && (0, z.css)([ "position:sticky;top:0;z-index:", ";&:not(:first-child)::before{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:-1px 0 0 0 ", ";width:2px;border:0;left:0;margin-right:-2px;color:transparent;}&:not(:last-child)::after{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:1px 0 0 0 ", ";width:2px;border:0;right:0;margin-left:-2px;color:transparent;}" ], n, (0, 
        M.pick)({
            enterprise: M.variables.backgroundColor,
            prisma: M.variables.backgroundColorPage
        }), (0, M.pick)({
            enterprise: M.variables.backgroundColor,
            prisma: M.variables.backgroundColorPage
        }));
    }), (function(e) {
        var t = e.$clickable, n = e.$focusWithin;
        return t && (0, z.css)([ "cursor:pointer;&:focus{", "}", " &:hover{outline:none;& > ", "{color:", ";background-color:", ";}}&:active{& > ", "{background-color:", ";}}" ], Ot, n && (0, 
        z.css)([ "&:focus-within{", "}" ], Ot), 
        /* sc-sel */
        wt, (0, M.pick)({
            enterprise: {
                light: M.variables.accentColorD10,
                dark: M.variables.linkColorHover
            }
        }), (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayHover
        }), 
        /* sc-sel */
        wt, (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayActive
        }));
    }), (function(e) {
        var t = e.$dragging;
        return t && (0, z.css)([ "background-color:", ";&:focus{box-shadow:none;}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.gray80,
                dark: M.variables.gray20
            },
            prisma: M.mixins.overlayColors(M.variables.backgroundColorPage, M.variables.interactiveColorOverlayDrag)
        }));
    }), (0, M.pickVariant)("$variant", {
        actions: (0, z.css)([ "& > ", "{padding-right:8px;}" ], 
        /* sc-sel */
        wt),
        info: (0, z.css)([ "& > ", "{", ";}" ], 
        /* sc-sel */
        wt, (0, M.pick)({
            enterprise: (0, z.css)([ "padding-top:7px;" ]),
            prisma: {
                comfortable: (0, z.css)([ "padding:16px 12px;" ]),
                compact: (0, z.css)([ "padding:6px 12px;" ])
            }
        })),
        toggleAll: (0, z.css)([ "& > ", "{padding-top:", ";}" ], 
        /* sc-sel */
        wt, (0, M.pick)({
            prisma: {
                comfortable: "14px",
                compact: "7px"
            }
        }))
    }));
    var Et = H().div.withConfig({
        displayName: "HeadCellStyles__StyledGuideLine",
        componentId: "sc-1hj81sa-1"
    })([ "", " width:1px;position:absolute;background-color:", ";height:100%;top:0;z-index:1;", "" ], M.mixins.reset("block"), (0, 
    M.pick)({
        enterprise: M.variables.linkColor,
        prisma: M.variables.interactiveColorPrimary
    }), (0, M.pickVariant)("$position", {
        before: (0, z.css)([ "float:left;", ":not(:first-child) > &{margin-left:-1px;}" ], 
        /* sc-sel */
        Rt),
        after: (0, z.css)([ "right:0;" ])
    }));
    // CONCATENATED MODULE: ./src/Table/DragHandleStyles.ts
    var It = H().div.withConfig({
        displayName: "DragHandleStyles__StyledDrag",
        componentId: "sc-9eqfn5-0"
    })([ "display:block;cursor:move;background:", ";", "" ], M.variables.draggableBackground, (0, 
    M.pick)({
        enterprise: (0, z.css)([ "width:7px;height:14px;" ]),
        prisma: (0, z.css)([ "width:6px;height:20px;margin-top:-3px;opacity:0;", ":focus &,", ":hover &,[data-helper] &{opacity:1;}" ], 
        /* sc-sel */
        Rt, 
        /* sc-sel */
        Rt)
    }));
    // CONCATENATED MODULE: ./src/Table/DragHandle.tsx
    var jt = {
        screenReaderContent: i().string
    };
    var Dt = {};
    function Tt(e) {
        var t = e.screenReaderContent;
        
        return r().createElement(It, null, !!t &&  r().createElement(pt(), null, t));
    }
    Tt.propTypes = jt;
    /* harmony default export */    const _t = Tt;
    // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var Pt = {
        body: {
            appendChild: function e() {
                return [];
            }
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        activeElement: {
            blur: function e() {},
            nodeName: ""
        },
        querySelector: function e() {
            return null;
        },
        querySelectorAll: function e() {
            return [];
        },
        getElementById: function e() {
            return null;
        },
        createEvent: function e() {
            return {
                initEvent: function e() {}
            };
        },
        createElement: function e() {
            return {
                children: [],
                childNodes: [],
                style: {},
                setAttribute: function e() {},
                getElementsByTagName: function e() {
                    return [];
                }
            };
        },
        createElementNS: function e() {
            return {};
        },
        importNode: function e() {
            return null;
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        }
    };
    function qt() {
        var e = typeof document !== "undefined" ? document : Pt;
        return e;
    }
    // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var At = {
        document: Pt,
        navigator: {
            userAgent: ""
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        },
        history: {
            replaceState: function e() {},
            pushState: function e() {},
            go: function e() {},
            back: function e() {}
        },
        CustomEvent: function e() {
            return this;
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        getComputedStyle: function e() {
            return {
                getPropertyValue: function e() {
                    return "";
                }
            };
        },
        Image: function e() {},
        Date: function e() {},
        screen: {},
        setTimeout: function e() {},
        clearTimeout: function e() {},
        matchMedia: function e() {
            return {};
        },
        requestAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                t();
                return null;
            }
            return setTimeout(t, 0);
        },
        cancelAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                return;
            }
            clearTimeout(t);
        }
    };
    function zt() {
        var e = typeof window !== "undefined" ? window : At;
        return e;
    }
    // CONCATENATED MODULE: ./src/Table/HeadInner.tsx
    function Ht() {
        Ht = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Ht.apply(this, arguments);
    }
    function Mt(e) {
        return $t(e) || Nt(e) || Bt(e) || Lt();
    }
    function Lt() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Nt(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function $t(e) {
        if (Array.isArray(e)) return Ft(e);
    }
    function Wt(e, t) {
        return Ut(e) || Vt(e, t) || Bt(e, t) || Kt();
    }
    function Kt() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Bt(e, t) {
        if (!e) return;
        if (typeof e === "string") return Ft(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Ft(e, t);
    }
    function Ft(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Vt(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var i = undefined;
        try {
            for (var a = e[Symbol.iterator](), l; !(r = (l = a.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            i = e;
        } finally {
            try {
                if (!r && a["return"] != null) a["return"]();
            } finally {
                if (o) throw i;
            }
        }
        return n;
    }
    function Ut(e) {
        if (Array.isArray(e)) return e;
    }
    function Gt(e, t) {
        if (e == null) return {};
        var n = Xt(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function Xt(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    var Yt = {
        align: i().oneOf([ "left", "center", "right" ]),
        columnId: i().any,
        hasActionsHead: i().bool,
        id: i().string,
        index: i().number,
        isMenu: i().bool,
        label: i().node,
        onAutosizeColumn: i().func,
        onDragEnd: i().func,
        onDragStart: i().func,
        onRequestResize: i().func,
        resizable: i().bool,
        sortDir: i().oneOf([ "none", "asc", "desc" ]),
        truncate: i().bool,
        width: i().oneOfType([ i().number, i().oneOf([ "auto" ]) ])
    };
    var Qt = new Set([ "none", "asc", "desc" ]);
    var Jt = Object.freeze({
        none: (0, D._)("Click to sort"),
        asc: (0, D._)("Press to sort descending"),
        desc: (0, D._)("Press to sort ascending")
    });
    var Zt = Object.freeze({
        none: st(),
        asc: St,
        desc: kt
    });
    var en = Object.freeze({
        none: it(),
        asc: rt(),
        desc: tt()
    });
    function tn(e) {
        var t = e.index, o = e.columnId, i = e.id, a = e.width, l = e.onDragEnd, c = e.onAutosizeColumn, s = e.align, u = s === void 0 ? "left" : s, d = e.label, f = e.hasActionsHead, p = f === void 0 ? false : f, v = e.isMenu, h = v === void 0 ? false : v, y = e.onDragStart, b = e.onRequestResize, m = e.resizable, w = m === void 0 ? true : m, x = e.sortDir, C = x === void 0 ? undefined : x, k = e.truncate, S = k === void 0 ? true : k, E = Gt(e, [ "index", "columnId", "id", "width", "onDragEnd", "onAutosizeColumn", "align", "label", "hasActionsHead", "isMenu", "onDragStart", "onRequestResize", "resizable", "sortDir", "truncate" ]);
        if (false) {}
        var I = (0, M.useSplunkTheme)(), j = I.isEnterprise;
        var _ = (0, D._)("Click to open menu");
        var P = (0, n.useState)(), q = Wt(P, 2), A = q[0], z = q[1];
        var H = (0, n.useState)(false), L = Wt(H, 2), N = L[0], $ = L[1];
        var W = (0, n.useState)(false), K = Wt(W, 2), B = K[0], F = K[1];
        var V = (0, n.useState)(0), U = Wt(V, 2), G = U[0], X = U[1];
        var Y = (0, n.useState)(0), Q = Wt(Y, 2), J = Q[0], Z = Q[1];
        var ee = (0, n.useRef)(null);
 // Cleanup dragend, and unmount during drag
                (0, n.useEffect)((function() {
            return function() {
                return A === null || A === void 0 ? void 0 : A.remove();
            };
        }), [ A ]);
        var te;
        var ne;
        var re;
        if (C !== undefined && Qt.has(C)) {
            var oe = j ? Zt : en;
            ne = oe[C];
            re = Jt[C];
        }
        if (a === "auto") {
            var ie;
            var ae = ee.current;
            var le = ae === null || ae === void 0 ? void 0 : (ie = ae.parentElement) === null || ie === void 0 ? void 0 : ie.getBoundingClientRect();
            te = le === null || le === void 0 ? void 0 : le.width;
        } else {
            te = a;
        }
        var ce = function e(n) {
            var r = (0, R.keycode)(n.nativeEvent);
            if (b === undefined || t === undefined) {
                return;
            }
            if (a === "auto") {
                var l;
                var c = ee.current;
                var s = c === null || c === void 0 ? void 0 : (l = c.parentElement) === null || l === void 0 ? void 0 : l.getBoundingClientRect();
                te = s === null || s === void 0 ? void 0 : s.width;
            } else {
                te = a;
            }
            if (te === undefined) {
                return;
            }
            if (r === "left") {
                n.preventDefault();
 // prevent text selection
                                var u = Math.max(te - 10, 20);
                b(n, {
                    index: t,
                    columnId: o,
                    id: i,
                    width: u
                });
            }
            if (r === "right") {
                n.preventDefault();
 // prevent text selection
                                var d = te + 10;
                b(n, {
                    index: t,
                    columnId: o,
                    id: i,
                    width: d
                });
            }
        };
        var se = function e(t) {
            if (a === "auto") {
                var n;
                var r = ee.current;
                var o = r === null || r === void 0 ? void 0 : (n = r.parentElement) === null || n === void 0 ? void 0 : n.getBoundingClientRect();
                te = o === null || o === void 0 ? void 0 : o.width;
            } else {
                te = a;
            }
            if (te === undefined) {
                return;
            }
            t.preventDefault();
 // prevent text selection
                        X(t.clientX);
            Z(te || 0);
            $(true);
        };
        var ue = function e(n) {
            var r = G - n.clientX;
            var a = Math.max(J - r, 16);
            if (t !== undefined) {
                b === null || b === void 0 ? void 0 : b(n, {
                    index: t,
                    columnId: o,
                    id: i,
                    width: a
                });
            }
        };
        var de = function e() {
            $(false);
        };
        var fe = function e(n) {
            var r;
            var i = qt();
            var a = ee.current;
            if (n.dataTransfer.setDragImage && (a === null || a === void 0 ? void 0 : a.parentElement)) {
                var l = a.parentElement.getBoundingClientRect();
                var c = a.cloneNode(true);
                c.style.width = "".concat(l.width, "px");
                c.style.height = "".concat(l.height, "px");
                c.setAttribute("data-helper", "true");
                i.body.appendChild(c);
                n.dataTransfer.setDragImage(c, n.clientX - l.left, n.clientY - l.top);
                F(true);
                z(c);
            }
            n.dataTransfer.effectAllowed = "move";
            n.dataTransfer.setData("text", (r = a === null || a === void 0 ? void 0 : a.textContent) !== null && r !== void 0 ? r : "");
 // Required for Firefox
                        y === null || y === void 0 ? void 0 : y(t, o);
        };
        var pe = function e() {
            z(undefined);
            F(false);
            l === null || l === void 0 ? void 0 : l();
        };
        var ve = function e(n) {
            if (t !== undefined) {
                c === null || c === void 0 ? void 0 : c(n, {
                    index: t,
                    columnId: o
                });
            }
        };
        var he = !!y;
        var ye = zt();
        var be = te ? (0, T.sprintf)((0, D._)("%(width)d pixels"), {
            width: te
        }) : undefined;
        var me = o ? {
            ariaControls: o
        } : {};
        
        return r().createElement(wt, Ht({
            draggable: he || undefined,
            onDragStart: he ? fe : undefined,
            onDragEnd: he ? pe : undefined,
            ref: ee,
            $hasActionsHead: !!p,
            $align: u,
            $draggable: he,
            $dragging: !!B
        }, g()(E, [].concat(Mt(Object.keys(tn.propTypes)), [ "id" ]))), N &&  r().createElement(r().Fragment, null,  r().createElement(O(), {
            target: ye,
            eventType: "mouseup",
            listener: de
        }),  r().createElement(O(), {
            target: ye,
            eventType: "mousemove",
            listener: ue
        })), b && w &&  r().createElement(Ct, Ht({
            "aria-label": (0, T.sprintf)((0, D._)("Resize %(label)s"), {
                label: d
            })
        }, me, {
            "aria-valuetext": be,
            "data-test": "resize",
            onMouseDown: se,
            onDoubleClick: ve,
            onKeyDown: ce,
            orientation: "vertical",
            tabIndex: 0
        })), he &&  r().createElement(bt, null,  r().createElement(_t, {
            screenReaderContent: (0, D._)("Press left or right arrow key to reorder the columns.")
        })),  r().createElement(gt, {
            $align: u,
            $truncate: S,
            $fill: h
        }, d, h && 
        
        // this icon indicates "has a menu" in all themes
        r().createElement(mt, null, j ?  r().createElement(dt(), {
            "data-test": "caret-down",
            screenReaderText: _,
            hideDefaultTooltip: true,
            size: .5
        }) :  r().createElement(lt(), {
            "data-test": "caret-down",
            "aria-label": _
        }))), C &&  r().createElement(xt, {
            $sorted: C !== "none"
        }, ne !== undefined && (j ?  r().createElement(ne, {
            inline: true,
            "aria-hidden": false,
            "aria-label": re,
            viewBox: "-8 0 24 24"
        }) :  r().createElement(ne, {
            inline: true,
            "aria-hidden": false,
            "aria-label": re
        }))));
    }
    tn.propTypes = Yt;
    /* harmony default export */    const nn = tn;
    // CONCATENATED MODULE: ./src/Table/TableContext.ts
    var rn =  (0, n.createContext)({});
    rn.displayName = "Table";
    /* harmony default export */    const on = rn;
    // CONCATENATED MODULE: ./src/Table/HeadCell.tsx
    function an(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            an = function e(t) {
                return typeof t;
            };
        } else {
            an = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return an(e);
    }
    function ln() {
        ln = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return ln.apply(this, arguments);
    }
    function cn(e) {
        return fn(e) || dn(e) || un(e) || sn();
    }
    function sn() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function un(e, t) {
        if (!e) return;
        if (typeof e === "string") return pn(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return pn(e, t);
    }
    function dn(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function fn(e) {
        if (Array.isArray(e)) return pn(e);
    }
    function pn(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function vn(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function hn(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function yn(e, t, n) {
        if (t) hn(e.prototype, t);
        if (n) hn(e, n);
        return e;
    }
    function bn(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) mn(e, t);
    }
    function mn(e, t) {
        mn = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return mn(e, t);
    }
    function gn(e) {
        var t = Cn();
        return function n() {
            var r = kn(e), o;
            if (t) {
                var i = kn(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return wn(this, o);
        };
    }
    function wn(e, t) {
        if (t && (an(t) === "object" || typeof t === "function")) {
            return t;
        }
        return xn(e);
    }
    function xn(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Cn() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function kn(e) {
        kn = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return kn(e);
    }
    function Sn(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var On = {
        align: i().oneOf([ "left", "center", "right" ]),
        /** @private Used to set the $clickable appearance without an onClick */
        appearClickable: i().bool,
        children: i().node,
        columnId: i().any,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private Indicates the presence of actions. */
        hasActionsHead: i().bool,
        /** @private The index of the cell, skipping the info column. */
        index: i().number,
        /** @private. */
        onAutosizeColumn: i().func,
        onSort: i().func,
        /** @private. */
        onDragStart: i().func,
        /**
   * @private. Passed through and works as expected.
   */
        onKeyDown: i().func,
        /** @private. */
        onClick: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        /** @private. */
        onRequestResize: i().func,
        resizable: i().bool,
        /** @private. */
        showGuideline: i().oneOf([ "none", "before", "after" ]),
        sortDir: i().oneOf([ "asc", "desc", "none" ]),
        sortKey: i().string,
        truncate: i().bool,
        /**
   * Used internally to suppress focus and id when this `HeadCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   * @private
   */
        visible: i().bool,
        width: i().oneOfType([ i().number, i().oneOf([ "auto" ]) ]),
        /** @private. */
        variant: i().oneOf([ "toggleAll", "info", "actions" ]),
        /** @private. */
        zIndex: i().number
    };
    var Rn = {
        align: "left",
        resizable: true,
        showGuideline: "none",
        sortDir: "none",
        truncate: true,
        visible: true,
        zIndex: 1
    };
    var En =  function(e) {
        bn(n, e);
        var t = gn(n);
        // @docs-props-type HeadCellPropsBase
                function n(e) {
            var r;
            vn(this, n);
            r = t.call(this, e);
            Sn(xn(r), "handleClick", (function(e) {
                var t, n;
                // ignore clicks on the resize handle
                                if (e.target.getAttribute("data-test") !== "resize" && r.props.onSort && r.props.index !== undefined) {
                    var o = r.props, i = o.sortKey, a = o.sortDir, l = o.id, c = o.index, s = o.columnId;
                    r.props.onSort(e, {
                        sortKey: i,
                        sortDir: a,
                        id: l,
                        columnId: s,
                        index: c
                    });
                }
                (t = (n = r.props).onClick) === null || t === void 0 ? void 0 : t.call(n);
            }));
            Sn(xn(r), "handleKeyDown", (function(e) {
                var t = r.props, n = t.columnId, o = t.index, i = t.onKeyDown, a = t.onRequestMoveColumn;
                if (e.target.getAttribute("data-test") !== "resize") {
                    if ((0, R.keycode)(e.nativeEvent) === "enter") {
                        r.handleClick(e);
                    } else if ((0, R.keycode)(e.nativeEvent) === "left" && o !== undefined && o > 0) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o - 1,
                            columnId: n
                        });
                    } else if ((0, R.keycode)(e.nativeEvent) === "right" && o !== undefined) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o + 1,
                            columnId: n
                        });
                    }
                }
                if (o !== undefined) {
                    i === null || i === void 0 ? void 0 : i(e, {
                        index: o,
                        columnId: n
                    });
                }
            }));
            Sn(xn(r), "handleDragStart", (function(e, t) {
                var n, o;
                r.setState({
                    isDragging: true
                });
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, e, t);
            }));
            Sn(xn(r), "handleDragEnd", (function() {
                r.setState({
                    isDragging: false
                });
            }));
            Sn(xn(r), "sortDirAriaMapping", {
                asc: "ascending",
                desc: "descending",
                none: "none"
            });
            r.state = {
                isDragging: false
            };
            return r;
        }
        yn(n, [ {
            key: "render",
            value: function e() {
                var t = this.props, o = t.align, i = t.appearClickable, a = t.children, l = t.columnId, c = t.elementRef, s = t.hasActionsHead, u = t.id, d = t.index, f = t.onAutosizeColumn, p = t.onClick, v = t.onDragStart, h = t.onRequestResize, y = t.onSort, b = t.resizable, m = t.showGuideline, w = t.sortDir, x = t.style, C = t.variant, k = t.truncate, S = t.visible, O = t.width, R = t.zIndex;
                var E = !!v;
                var I = !!y && !!w;
                var j = p !== undefined;
                var D = Ze()(x, {
                    width: O
                });
                var T = s ? false : k;
                var _ = this.context.headType;
                /* eslint-disable jsx-a11y/no-static-element-interactions */                
                return r().createElement(Rt, ln({
                    style: D,
                    ref: c,
                    "aria-sort": y && (this.sortDirAriaMapping[w] || "none"),
                    "data-test": "head-cell",
                    "data-test-label": Qe()(a) ? a : undefined,
                    "data-test-sort-dir": y && w,
                    id: S ? u : undefined,
                    onClick: y || j ? this.handleClick : undefined,
                    tabIndex: S && (E || y || j) ? 0 : undefined,
                    $dragging: this.state.isDragging || undefined,
                    $clickable: i || E || I || j,
                    $focusWithin: i,
                    $variant: C,
                    $zIndex: R,
                    $isFixed: _ === "fixed"
                }, g()(this.props, [].concat(cn(Object.keys(n.propTypes)), [ "id", "style" ])), {
                    onKeyDown: E || y || j ? this.handleKeyDown : undefined
                }),  r().createElement(nn, {
                    label: a,
                    align: o,
                    columnId: l,
                    hasActionsHead: s,
                    id: u,
                    index: d,
                    resizable: S && b,
                    onDragStart: v ? this.handleDragStart : undefined,
                    onDragEnd: v ? this.handleDragEnd : undefined,
                    onAutosizeColumn: f,
                    onRequestResize: h,
                    sortDir: y && w,
                    truncate: T,
                    width: O
                }), m !== "none" &&  r().createElement(Et, {
                    $position: m
                }));
                /* eslint-enable jsx-a11y/no-static-element-interactions */            }
        } ]);
        return n;
    }(n.Component);
    Sn(En, "splunkUiType", "Table.HeadCell");
    Sn(En, "propTypes", On);
    Sn(En, "defaultProps", Rn);
    Sn(En, "contextType", on);
    /* harmony default export */    const In = En;
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Info"
    const jn = require("@splunk/react-icons/enterprise/Info");
    var Dn =  e.n(jn);
    // CONCATENATED MODULE: external "@splunk/react-icons/ChevronRight"
    const Tn = require("@splunk/react-icons/ChevronRight");
    var _n =  e.n(Tn);
    // CONCATENATED MODULE: ./src/Table/icons/HeadExpandRows.tsx
    /* This file works around the use of withSplunkTheme in Head. */
    function Pn() {
        var e = (0, M.useSplunkTheme)(), t = e.isEnterprise;
        var n = (0, D._)("More Information");
        return t ?  r().createElement(Dn(), {
            hideDefaultTooltip: true,
            screenReaderText: n
        }) :  r().createElement(_n(), {
            "aria-label": n,
            height: "16px",
            width: "16px"
        });
    }
    // CONCATENATED MODULE: external "@dnd-kit/utilities"
    const qn = require("@dnd-kit/utilities");
    // CONCATENATED MODULE: external "@splunk/react-icons/DotsThreeVertical"
    const An = require("@splunk/react-icons/DotsThreeVertical");
    var zn =  e.n(An);
    // CONCATENATED MODULE: external "@splunk/react-ui/Button"
    const Hn = require("@splunk/react-ui/Button");
    var Mn =  e.n(Hn);
    // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
    const Ln = require("@splunk/react-ui/Dropdown");
    var Nn =  e.n(Ln);
    // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
    const $n = require("@splunk/react-ui/Tooltip");
    var Wn =  e.n($n);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const Kn = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/ChevronRight"
    const Bn = require("@splunk/react-icons/enterprise/ChevronRight");
    var Fn =  e.n(Bn);
    // CONCATENATED MODULE: ./src/Table/icons/ExpansionRow.tsx
    function Vn(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function Un(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                Vn(Object(n), true).forEach((function(t) {
                    Gn(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                Vn(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function Gn(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Xn = {
        className: i().string,
        expanded: i().bool
    };
    var Yn = function e(t) {
        var n = t.className, o = t.expanded;
        var i = (0, M.useSplunkTheme)(), a = i.isEnterprise;
        var l = {
            className: n
        };
        var c = Un(Un({}, l), {}, {
            hideDefaultTooltip: true,
            screenReaderText: null
        });
        var s = Un({}, l);
        var u = a ?  r().createElement(Fn(), c) :  r().createElement(_n(), s);
        
        return r().createElement("div", {
            "aria-hidden": true,
            title: o ? (0, D._)("Collapse row") : (0, D._)("Expand row")
        }, u);
    };
    var Qn = H()(Yn).withConfig({
        displayName: "ExpansionRow__StyledExpansionRowIcon",
        componentId: "sc-1b6vao4-0"
    })([ "transition:transform ", ";", "" ], (0, M.pick)({
        enterprise: "300ms",
        prisma: "200ms"
    }), (function(e) {
        return e.expanded && (0, z.css)([ "transform:rotate(90deg);" ]);
    }));
    Qn.propTypes = Xn;
    /* harmony default export */    const Jn = Qn;
    // CONCATENATED MODULE: ./src/Table/RowDragCellStyles.ts
    var Zn = H().td.withConfig({
        displayName: "RowDragCellStyles__StyledCell",
        componentId: "sc-9kbaj2-0"
    })([ "", " cursor:move;touch-action:none;width:", ";position:relative;vertical-align:middle;& + &{border-left:", ";}" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: "32px",
        prisma: "36px"
    }), (0, M.pick)({
        enterprise: "1px solid ".concat(M.variables.backgroundColor),
        prisma: "1px solid ".concat(M.variables.interactiveColorBorder)
    }));
    var er = H().div.withConfig({
        displayName: "RowDragCellStyles__StyledDrag",
        componentId: "sc-9kbaj2-1"
    })([ "", " ", ";justify-content:center;cursor:move;-webkit-user-drag:element;user-select:none;align-items:center;position:absolute;width:100%;top:0;bottom:0;&:focus{outline:0;box-shadow:", ";}&:hover{background-color:", ";outline:none;}&:active{background-color:", ";box-shadow:", ";}& > div{margin:0;}@media print{background-image:none;}" ], M.mixins.reset("flex"), M.mixins.clearfix(), M.variables.focusShadowInset, (0, 
    M.pick)({
        enterprise: {
            light: M.variables.accentColorL50,
            dark: M.variables.accentColorD50
        },
        prisma: M.variables.interactiveColorOverlayHover
    }), (0, M.pick)({
        prisma: M.variables.interactiveColorOverlayActive
    }), M.variables.focusShadowInset);
    // CONCATENATED MODULE: ./src/Table/RowDragCell.tsx
    function tr() {
        tr = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return tr.apply(this, arguments);
    }
    function nr(e, t) {
        if (e == null) return {};
        var n = rr(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function rr(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    var or = {
        setActivatorNodeRef: i().func.isRequired,
        listeners: i().objectOf(i().func)
    };
    function ir(e) {
        var t = e.listeners, n = e.setActivatorNodeRef, o = nr(e, [ "listeners", "setActivatorNodeRef" ]);
        
        return r().createElement(Zn, {
            "data-helper": true
        },  r().createElement(er, tr({
            "data-test": "drag",
            ref: n,
            tabIndex: 0
        }, t, o),  r().createElement(_t, null)));
    }
    ir.propTypes = or;
    /* harmony default export */    const ar = ir;
    // CONCATENATED MODULE: ./src/Table/RowStyles.ts
    var lr = H().tr.withConfig({
        displayName: "RowStyles__StyledStripeNone",
        componentId: "f0igqq-0"
    })([ "", " background-color:", ";", ";@media print{background-color:none;}", " ", "" ], M.mixins.reset("table-row"), (0, 
    M.pick)({
        prisma: M.variables.transparent
    }), (function(e) {
        var t = e.$clickable;
        return t && (0, z.css)([ "cursor:pointer;&:hover{background-color:", ";}&:focus{box-shadow:", ";}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.accentColorL50,
                dark: M.variables.accentColorD50
            },
            prisma: M.variables.interactiveColorOverlayHover
        }), M.variables.focusShadowInset);
    }), (function(e) {
        var t = e.disabled, n = e.$expandable;
        return !t && !n && (0, z.css)([ "&:not([data-expansion-row='true']){&:hover{background-color:", ";}}" ], (0, 
        M.pick)({
            prisma: M.variables.interactiveColorOverlayHover
        }));
    }), (function(e) {
        var t = e.disabled;
        return t && (0, z.css)([ "color:", ";" ], (0, M.pick)({
            prisma: M.variables.contentColorDisabled
        }));
    }));
    var cr = H()(lr).withConfig({
        displayName: "RowStyles__StyledStripeOdd",
        componentId: "f0igqq-1"
    })([ "background-color:", ";" ], (0, M.pick)({
        enterprise: {
            dark: M.variables.gray22
        },
        prisma: M.variables.transparent
    }));
    var sr = H()(lr).withConfig({
        displayName: "RowStyles__StyledStripeEven",
        componentId: "f0igqq-2"
    })([ "background-color:", ";" ], (0, M.pick)({
        enterprise: {
            light: M.variables.gray96,
            dark: M.variables.gray20
        },
        prisma: M.variables.transparent
    }));
    var ur = H()(Fe).withConfig({
        displayName: "RowStyles__StyledToggleCell",
        componentId: "f0igqq-3"
    })([ "height:1px;" ]);
    var dr = H()(Fe).withConfig({
        displayName: "RowStyles__StyledCellExpansionDisabled",
        componentId: "f0igqq-4"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "35px",
        prisma: "40px"
    }));
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const fr = require("@splunk/react-ui/Clickable");
    var pr =  e.n(fr);
    // CONCATENATED MODULE: external "@splunk/react-ui/Switch"
    const vr = require("@splunk/react-ui/Switch");
    var hr =  e.n(vr);
    // CONCATENATED MODULE: ./src/Table/ToggleStyles.ts
    var yr = H()(pr()).withConfig({
        displayName: "ToggleStyles__StyledClickable",
        componentId: "sc-1x3ikch-0"
    })([ "height:100%;width:100%;display:flex;justify-content:center;" ]);
    var br = H()(hr()).withConfig({
        displayName: "ToggleStyles__StyledSwitch",
        componentId: "sc-1x3ikch-1"
    })([ "margin:", ";justify-content:center;" ], (0, M.pickVariant)("$allRows", {
        true: {
            enterprise: "-6px 0",
            prisma: "-10px 0"
        },
        false: "-6px 0"
    }));
    // CONCATENATED MODULE: ./src/Table/Toggle.tsx
    function mr() {
        mr = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return mr.apply(this, arguments);
    }
    function gr(e, t) {
        if (e == null) return {};
        var n = wr(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function wr(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    var xr = {
        allRows: i().bool,
        disabled: i().bool,
        onClick: i().func,
        selected: i().oneOf([ true, false, "some" ])
    };
    function Cr(e) {
        var t = e.allRows, n = e.disabled, o = e.onClick, i = e.selected, a = gr(e, [ "allRows", "disabled", "onClick", "selected" ]);
        
        return r().createElement(yr, mr({
            "aria-checked": i === "some" ? "mixed" : i,
            disabled: n,
            onClick: o,
            role: "checkbox"
        }, a),  r().createElement(br, {
            $allRows: t || false,
            interactive: false,
            disabled: n,
            value: "",
            selected: i
        }));
    }
    Cr.propTypes = xr;
    /* harmony default export */    const kr = Cr;
    // CONCATENATED MODULE: ./src/Table/Row.tsx
    function Sr(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Sr = function e(t) {
                return typeof t;
            };
        } else {
            Sr = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Sr(e);
    }
    function Or(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Rr(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Er(e, t, n) {
        if (t) Rr(e.prototype, t);
        if (n) Rr(e, n);
        return e;
    }
    function Ir(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) jr(e, t);
    }
    function jr(e, t) {
        jr = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return jr(e, t);
    }
    function Dr(e) {
        var t = Pr();
        return function n() {
            var r = qr(e), o;
            if (t) {
                var i = qr(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return Tr(this, o);
        };
    }
    function Tr(e, t) {
        if (t && (Sr(t) === "object" || typeof t === "function")) {
            return t;
        }
        return _r(e);
    }
    function _r(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Pr() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function qr(e) {
        qr = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return qr(e);
    }
    function Ar(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function zr(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                Ar(Object(n), true).forEach((function(t) {
                    Hr(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                Ar(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function Hr(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    function Mr(e, t) {
        if (e == null) return {};
        var n = Lr(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function Lr(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function Nr() {
        Nr = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Nr.apply(this, arguments);
    }
    var $r = {
        odd: cr,
        even: sr,
        none: lr
    };
    /** @public */    var Wr = {
        /** @private. Generally passed by Table rather than added directly. */
        activeElementId: i().string,
        actionPrimary: i().element,
        actionsSecondary: i().element,
        children: i().node,
        data: i().any,
        /** @private. Generally passed by Table rather than added directly. */
        dataId: i().oneOfType([ i().string, i().number ]),
        disabled: i().bool,
        /** @private. Generally passed by Table rather than added directly. */
        draggable: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. */
        expandable: i().bool,
        expanded: i().bool,
        expansionRow: i().oneOfType([ i().element, i().arrayOf(i().element) ]),
        /** @private. Indicates whether the table has an actions column. */
        actions: i().bool,
        /** @private. Generally passed by `Table` rather than added directly. */
        index: i().number,
        /** @private. Generally passed by `Table` rather than added directly. */
        movableColumns: i().bool,
        onClick: i().func,
        onExpansion: i().func,
        /** @private. This is passed through and works as expected. */
        onKeyDown: i().func,
        /** @private. Generally passed by `Table` rather than added directly. */
        onRequestMoveRow: i().func,
        onRequestToggle: i().func,
        /** @private. Generally passed by `Table` rather than added directly. */
        primaryColumnIndex: i().number,
        rowScreenReaderText: i().string,
        selected: i().bool,
        /** @private. */
        stripe: i().oneOf([ "odd", "even", "none" ])
    };
    var Kr = {
        stripe: "none",
        primaryColumnIndex: 0
    };
    var Br =  r().forwardRef((function(e, t) {
        var n = (0, M.useSplunkTheme)(), o = n.isCompact;
        var i = o ? "20px" : "24px";
        
        return r().createElement(Wn(), Nr({
            content: (0, D._)("Actions"),
            contentRelationship: "label"
        }, e),  r().createElement(Mn(), {
            appearance: "secondary",
            "data-test": "actions-secondary-toggle",
            icon:  r().createElement(zn(), {
                height: i,
                width: i
            }),
            elementRef: t
        }));
    }));
    function Fr(e) {
        var t;
        var o = e.actions, i = e.actionPrimary, a = e.actionsSecondary, c = e.children, s = e.data, u = e.dataId, d = e.disabled, f = e.draggable, p = e.elementRef, v = e.expandable, h = e.expanded, y = e.expansionRow, b = e.index, m = e.movableColumns, w = e.onClick, x = e.onExpansion, C = e.onKeyDown, k = e.onRequestToggle, S = e.primaryColumnIndex, O = e.rowScreenReaderText, E = e.selected, I = e.stripe, j = e.style, _ = Mr(e, [ "actions", "actionPrimary", "actionsSecondary", "children", "data", "dataId", "disabled", "draggable", "elementRef", "expandable", "expanded", "expansionRow", "index", "movableColumns", "onClick", "onExpansion", "onKeyDown", "onRequestToggle", "primaryColumnIndex", "rowScreenReaderText", "selected", "stripe", "style" ]);
        var P = (0, n.useMemo)((function() {
            return {
                id: f ? u : (0, Kn.createGUID)(),
                disabled: !f
            };
        }), [ f, u ]);
        var q = (0, l.useSortable)(P), A = q.attributes, z = q.listeners, H = q.transform, M = q.transition, L = q.setNodeRef, $ = q.setActivatorNodeRef;
        var W = (0, n.useMemo)((function() {
            return f ? zr(zr({}, j), {}, {
                transform: qn.CSS.Translate.toString(H),
                transition: M
            }) : j;
        }), [ f, H, M, j ]);
        var K = (0, n.useRef)(null);
        var B = function e(t) {
            var n = t.target;
            while (n) {
                if (K.current === n) {
                    break;
                }
 // Ignore clicks on row-actions
                                if (n.tagName === "BUTTON" || n.tagName === "A") {
                    return;
                }
                n = n.parentNode;
            }
            if (!t.defaultPrevented) {
                w === null || w === void 0 ? void 0 : w(t, s);
            }
        };
        var F = function e(t) {
            if ((0, R.keycode)(t.nativeEvent) === "enter" && w) {
                w(t, s);
            }
            C === null || C === void 0 ? void 0 : C(t);
        };
        var V = function e(t) {
            if (!d) {
                t.preventDefault();
                k === null || k === void 0 ? void 0 : k(t, s);
            }
        };
        var U = function e(t) {
            t.preventDefault();
            x === null || x === void 0 ? void 0 : x(t, s);
        };
        var G = function t() {
            if (i && i.props.onClick) {
                
                return (0, n.cloneElement)(i, {
                    onClick: function t(n) {
                        var r, o;
                        n.preventDefault();
                        return (r = (o = i.props).onClick) === null || r === void 0 ? void 0 : r.call(o, n, e.data);
                    }
                });
            }
            return i;
        };
        var X = function t() {
            if (a && a.props.children) {
                var r = n.Children.toArray(a.props.children).filter(n.isValidElement);
                var o = r.map((function(t) {
                    if (t.props.onClick) {
                        
                        return (0, n.cloneElement)(t, {
                            onClick: function n(r) {
                                var o, i;
                                r.preventDefault();
                                return (o = (i = t.props).onClick) === null || o === void 0 ? void 0 : o.call(i, r, e.data);
                            }
                        });
                    }
                    return t;
                }));
                
                return (0, n.cloneElement)(a, {
                    children: o
                });
            }
            return a;
        };
        function Y(e) {
            K.current = e;
            N(p, e);
            if (f) {
                L(e);
            }
        }
        var Q = !w ? n.Children.toArray(c).map((function(e) {
            
            return (0, n.cloneElement)(e, {
                disabled: d
            });
        })) : n.Children.toArray(c).filter(n.isValidElement).map((function(e) {
            
            return (0, n.cloneElement)(e, {
                appearance: "rowLink",
                disabled: d
            });
        }));
        var J;
        if (O) {
            J = O;
        } else if ((t = Q[S]) === null || t === void 0 ? void 0 : t.props.children) {
            var Z;
            J = "".concat((Z = Q[S]) === null || Z === void 0 ? void 0 : Z.props.children);
        } else {
            var ee;
            J = "".concat((ee = Q[0]) === null || ee === void 0 ? void 0 : ee.props.children);
            if (false) {}
        }
        var te = (0, T.sprintf)((0, D._)("%(selected)s"), {
            selected: E ? "selected" : "unselected"
        });
        var ne = $r[I];
        var re = h ? n.Children.count(y) + 1 : undefined;
        var oe = m ? "false" : undefined;
        var ie = function e() {
            
            return r().createElement(Br, null);
        };
        
        return r().createElement(ne, Nr({
            "data-test": "row",
            "data-test-selected": k ? E : undefined,
            $clickable: !!w,
            "data-has-movable-columns": m ? "true" : undefined,
            disabled: !!d,
            $expandable: !!v,
            ref: Y,
            tabIndex: w ? 0 : undefined
        }, g()(_, "data"), {
            onClick: w ? B : undefined,
            onKeyDown: F,
            $rowSelected: !!(k && E),
            style: W
        }), f && b != null &&  r().createElement(ar, Nr({
            "aria-label": (0, T.sprintf)((0, D._)("Reorder %(rowLabelValue)s"), {
                rowLabelValue: J
            }),
            setActivatorNodeRef: $,
            listeners: z
        }, A)), k &&  r().createElement(ur, {
            align: "center",
            appearClickable: !d,
            appearance: w ? "rowLink" : "data",
            disabled: d,
            variant: "toggle",
            "data-movable-column": oe,
            rowSpan: re,
            "data-test": "toggle"
        },  r().createElement(kr, {
            "aria-label": (0, T.sprintf)((0, D._)("%(rowLabelValue)s %(selectedString)s"), {
                rowLabelValue: J,
                selectedString: te
            }),
            disabled: d,
            onClick: V,
            selected: E
        })), v && y &&  r().createElement(Fe, {
            align: "center",
            appearance: "data",
            "aria-expanded": h,
            "aria-label": (0, D._)("Expandable row"),
            "data-movable-column": oe,
            "data-test": "expand",
            expand: h,
            onClick: U,
            rowSpan: re,
            variant: "expand"
        },  r().createElement(Jn, {
            expanded: h
        })), v && !y &&  r().createElement(dr, {
            variant: "expand",
            "data-movable-column": oe
        }), Q, o && !i && !a &&  r().createElement(Fe, {
            align: "right",
            appearance: d ? "data" : "rowLink",
            "data-test": "row-actions",
            variant: "actions",
            "data-movable-column": oe
        }), (i || a) &&  r().createElement(Fe, {
            align: "right",
            appearance: "rowLink",
            "data-test": "row-actions",
            variant: "actions",
            "data-movable-column": oe
        }, i && G(), a &&  r().createElement(Nn(), {
            toggle: ie()
        }, X())));
    }
    Fr.propTypes = Wr;
    var Vr =  function(e) {
        Ir(n, e);
        var t = Dr(n);
        function n() {
            Or(this, n);
            return t.apply(this, arguments);
        }
        Er(n, [ {
            key: "render",
            // @docs-props-type RowPropsBase
            value: function e() {
                
                return r().createElement(Fr, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    Hr(Vr, "splunkUiType", "Table.Row");
    Hr(Vr, "propTypes", Wr);
    Hr(Vr, "defaultProps", Kr);
    Vr.propTypes = Wr;
    /* harmony default export */    const Ur = Vr;
    // CONCATENATED MODULE: ./src/Table/HeadStyles.ts
    var Gr = H().thead.withConfig({
        displayName: "HeadStyles__Styled",
        componentId: "iap21t-0"
    })([ "", ";" ], M.mixins.reset("table-header-group"));
    var Xr = H()(In).withConfig({
        displayName: "HeadStyles__StyledToggleAll",
        componentId: "iap21t-1"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "42px",
        prisma: "40px"
    }));
    var Yr = H()(In).withConfig({
        displayName: "HeadStyles__StyledInfo",
        componentId: "iap21t-2"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "32px",
        prisma: "40px"
    }));
    var Qr = H()(In).withConfig({
        displayName: "HeadStyles__StyledDragRow",
        componentId: "iap21t-3"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "32px",
        prisma: "40px"
    }));
    // CONCATENATED MODULE: ./src/Table/Head.tsx
    function Jr(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Jr = function e(t) {
                return typeof t;
            };
        } else {
            Jr = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Jr(e);
    }
    function Zr() {
        Zr = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Zr.apply(this, arguments);
    }
    function eo(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function to(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function no(e, t, n) {
        if (t) to(e.prototype, t);
        if (n) to(e, n);
        return e;
    }
    function ro(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) oo(e, t);
    }
    function oo(e, t) {
        oo = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return oo(e, t);
    }
    function io(e) {
        var t = co();
        return function n() {
            var r = so(e), o;
            if (t) {
                var i = so(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return ao(this, o);
        };
    }
    function ao(e, t) {
        if (t && (Jr(t) === "object" || typeof t === "function")) {
            return t;
        }
        return lo(e);
    }
    function lo(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function co() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function so(e) {
        so = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return so(e);
    }
    function uo(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var fo = {
        /** @private. */
        actions: i().arrayOf(i().node),
        /** @private. */
        actionsColumnWidth: i().number,
        /** @private */
        cellMinWidth: i().number,
        children: i().node,
        /** @private. */
        dragPosition: i().number,
        /** @private. */
        dragIndex: i().number,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. */
        hasDragColumn: i().bool,
        /** @private. */
        hasInfoColumn: i().bool,
        /** @private. */
        onAutosizeColumn: i().func,
        /** @private. */
        onDragStart: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        /** @private. */
        onRequestResizeColumn: i().func,
        /** @private. */
        onRequestToggleAllRows: i().func,
        /** @private */
        resizableFillLayout: i().bool,
        /** @private. */
        rowSelection: i().oneOf([ "all", "some", "none" ])
    };
    var po = {
        cellMinWidth: 60,
        actions: []
    };
    var vo = 3;
    var ho = 2;
    var yo = 1;
    var bo =  function(e) {
        ro(o, e);
        var t = io(o);
        // @docs-props-type HeadPropsBase
                function o(e) {
            var r;
            eo(this, o);
            r = t.call(this, e);
            uo(lo(r), "cells", void 0);
            uo(lo(r), "el", null);
            uo(lo(r), "providedWidths", []);
            uo(lo(r), "onRequestMoveColumn", (function(e) {
                var t = e.columnId, o = e.fromIndex, i = e.toIndex;
                if (i < n.Children.toArray(r.props.children).length) {
                    var a, l;
                    // HeadCell never requests less than zero
                                        (a = (l = r.props).onRequestMoveColumn) === null || a === void 0 ? void 0 : a.call(l, {
                        fromIndex: o,
                        toIndex: i,
                        columnId: t
                    });
                }
            }));
            uo(lo(r), "manageResize", (function(e, t) {
                var n = t.columnId, o = t.id, i = t.index, a = t.width;
                var l = r.props, c = l.cellMinWidth, s = l.onRequestResizeColumn;
                var u = r.context.tableContainerWidthWithoutBorders;
                var d = r.getCellWidths();
                if (i >= d.length) {
                    s === null || s === void 0 ? void 0 : s(e, t);
                    return;
                }
                var f = d[i];
                var p = a - f;
                if (p <= 0) {
                    // handle shrinking
                    if (a >= c) {
                        s === null || s === void 0 ? void 0 : s(e, t);
                    } else {
                        // shrink the cell as small as we can
                        s === null || s === void 0 ? void 0 : s(e, {
                            columnId: n,
                            id: o,
                            index: i,
                            width: c
                        });
                    }
                } else {
                    // handle expansion
                    var v = [];
                    var h = 0;
                    var y = true;
                    if (r.providedWidths.length !== d.length) {
                        s === null || s === void 0 ? void 0 : s(e, t);
                        return;
                    }
                    r.providedWidths.forEach((function(e, t) {
                        if (e === "auto") {
                            h += 1;
                            v.push(t);
                        }
                    }));
                    if (h > 0) {
                        // if there are auto width cells, check if shrinking them by changePerEachAutoCell make them smaller than cellMinWidth
                        var b = p / h;
                        v.every((function(e) {
                            if (e < d.length && d[e] - b < c) {
                                y = false;
                                return false;
                            }
                            return true;
                        }));
                        if (y) {
                            s === null || s === void 0 ? void 0 : s(e, t);
                        } else {
                            // make the cell as big as we can without letting any cells go below cellMinWidth
                            // that means all auto cells are at cellMinWidth and all the set width cells stay the same size
                            var m = 0;
                            v.forEach((function(e) {
                                if (e < d.length) {
                                    m += Math.max(d[e] - c, 0);
                                }
                            }));
                            var g = d[i] + m;
                            s === null || s === void 0 ? void 0 : s(e, {
                                columnId: n,
                                id: o,
                                index: i,
                                width: g
                            });
                        }
                    } else if (u != null) {
                        // if there are no auto width cells, check if shrinking the last cell by requested change makes it smaller than cellMinWidth
                        /**
           * We need to calculate the percieved width of the last cell, because if the user modifies the size of the last head cell,
           * the width of the last cell will technically be whatever they made it, but the last cell will get cut off if it extends past
           * the table container's width.
           */
                        var w = d.slice(0, d.length - 1);
                        var x = w.reduce((function(e, t) {
                            return e + t;
                        }));
                        var C = u - x;
                        if (C - p >= c) {
                            s === null || s === void 0 ? void 0 : s(e, t);
                        } else {
                            // make the cell as big as we can without letting perceivedWidthOfLastCell go below cellMinWidth
                            var k = C - c;
                            var S = f + k;
                            s === null || s === void 0 ? void 0 : s(e, {
                                columnId: n,
                                id: o,
                                index: i,
                                width: S
                            });
                        }
                    } else {
                        /**
           * If tableContainerWidthWithoutBorders == null, there isn't a way to correctly calculate
           * the perceived width so this case will result in columns possibly going offscreen. In testing,
           * tableContainerWidthWithoutBorders attains a value quickly enough that it isn't a problem.
           */
                        s === null || s === void 0 ? void 0 : s(e, t);
                    }
                }
            }));
            uo(lo(r), "handleMount", (function(e) {
                r.el = e;
                N(r.props.elementRef, e);
            }));
            uo(lo(r), "handleDragStart", (function(e, t) {
                var n, o;
                var i = zt();
                r.setState({
                    dragColumnId: t
                });
                i.addEventListener("dragend", r.handleDragEnd);
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, {
                    dragIndex: e
                });
            }));
            uo(lo(r), "handleDragEnd", (function() {
                var e = r.state.dragColumnId;
                var t = r.props.dragIndex;
                var n = r.calculateGuideIndex();
 // The new index is not necessarily the same as the guidelineIndex
                                var o = t !== undefined && t < n ? n - 1 : n;
                if (t !== undefined && t !== o) {
                    var i, a;
                    (i = (a = r.props).onRequestMoveColumn) === null || i === void 0 ? void 0 : i.call(a, {
                        fromIndex: t,
                        toIndex: o,
                        columnId: e
                    });
                }
                r.cleanupDrag();
            }));
            r.state = {
                dragColumnId: undefined
            };
            if (false) {}
            return r;
        }
        no(o, [ {
            key: "componentDidUpdate",
            value: function e() {
                if (false) {}
            }
        }, {
            key: "componentWillUnmount",
            value: function e() {
                this.cleanupDrag();
            }
        }, {
            key: "getCellWidths",
            value: function e() {
                var t, n, r;
                var o = zt();
                var i = Array.from((t = (n = this.el) === null || n === void 0 ? void 0 : (r = n.firstElementChild) === null || r === void 0 ? void 0 : r.children) !== null && t !== void 0 ? t : []);
                var a = i.map((function(e) {
                    var t = o.getComputedStyle(e);
                    return e.clientWidth - parseFloat(t.getPropertyValue("padding-right")) - parseFloat(t.getPropertyValue("padding-left"));
                }));
                return a;
            }
        }, {
            key: "getClientHeight",
            value: function e() {
                var t;
                return (t = this.el) === null || t === void 0 ? void 0 : t.clientHeight;
            }
        }, {
            key: "getEl",
            value: function e() {
                return this.el;
            }
        }, {
            key: "calculateGuideIndex",
            value: function e() {
                var t, n, r;
                var o = this.props, i = o.dragIndex, a = o.dragPosition, l = o.hasInfoColumn, c = o.hasDragColumn, s = o.onRequestToggleAllRows;
                if (this.props.dragPosition === undefined || !this.el) {
                    return -1;
                }
                this.cells = Array.from((t = (n = this.el) === null || n === void 0 ? void 0 : (r = n.firstElementChild) === null || r === void 0 ? void 0 : r.children) !== null && t !== void 0 ? t : []).slice(l ? 1 : 0).slice(c ? 1 : 0).slice(s ? 1 : 0);
                var u = Ue()(this.cells, (function(e) {
                    var t = e.getBoundingClientRect();
                    return a !== undefined && a > t.left && a < t.right;
                }));
                if (u === -1) {
                    // must be too far left or right;
                    var d = this.el.getBoundingClientRect();
                    return a !== undefined && a < d.left ? 0 : this.cells.length;
                }
                if (i !== undefined && u > i) {
                    return u + 1;
                }
                return u;
            }
        }, {
            key: "cleanupDrag",
            value: function e() {
                var t = zt();
                t.removeEventListener("dragend", this.handleDragEnd);
                this.cells = undefined;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this;
                var i = this.props, a = i.actions, l = i.actionsColumnWidth, c = i.children, s = i.hasDragColumn, u = i.hasInfoColumn, d = i.onAutosizeColumn, f = i.onRequestMoveColumn, p = i.onRequestResizeColumn, v = i.onRequestToggleAllRows, h = i.rowSelection;
                var y = this.context, b = y.headType, m = y.resizableFillLayout;
                var w = this.calculateGuideIndex();
                var x = n.Children.toArray(c).filter(n.isValidElement);
                var C = x.length + (a.length || l ? 1 : 0);
                var k = [];
                var S = x.map((function(e, r, o) {
                    var i = "none";
                    if (w === o.length && r + 1 === o.length) {
                        i = "after";
                    } else if (w === r) {
                        i = "before";
                    }
                    k.push(e.props.width);
                    
                    return (0, n.cloneElement)(e, {
                        index: r,
                        showGuideline: i,
                        onRequestResize: m ? t.manageResize : p,
                        onDragStart: f ? t.handleDragStart : undefined,
                        onRequestMoveColumn: f ? t.onRequestMoveColumn : undefined,
                        onAutosizeColumn: d,
                        key: e.key || e.props.columnId || r,
                        zIndex: C - r
                    });
                }));
                this.providedWidths = k;
                var O = {
                    all: true,
                    none: false,
                    some: "some"
                };
                var R = h === undefined ? undefined : O[h];
                var E = l || 48;
                var I = b === "fixed" ? "fixed-head" : "head";
                var j = (0, D._)("No rows selected");
                if (R === "some") {
                    j = (0, D._)("Some rows selected");
                } else if (R) {
                    j = (0, D._)("All rows selected");
                }
                
                return r().createElement(Gr, Zr({
                    ref: this.handleMount,
                    "data-test": I
                }, g()(this.props, Xe()(o.propTypes))),  r().createElement(Ur, null, s &&  r().createElement(Qr, {
                    key: "drag_rows_head_cell",
                    "data-test": "drag-rows-head-cell",
                    align: "center",
                    resizable: false,
                    zIndex: C + vo
                }), v &&  r().createElement(Xr, {
                    key: "toggle_all",
                    appearClickable: true,
                    resizable: false,
                    align: "center",
                    variant: "toggleAll",
                    truncate: false,
                    zIndex: C + ho,
                    "data-test": "toggle-all"
                },  r().createElement(kr, {
                    allRows: true,
                    "aria-label": j,
                    onClick: v,
                    selected: R
                })), u &&  r().createElement(Yr, {
                    key: "more_info_head_cell",
                    "data-test": "more-info-head-cell",
                    align: "center",
                    resizable: false,
                    variant: "info",
                    zIndex: C + yo
                },  r().createElement(Pn, null)), S, a.length > 0 &&  r().createElement(In, {
                    hasActionsHead: true,
                    key: "actions_head_cell",
                    "data-test": "actions-head-cell",
                    align: "right",
                    resizable: false,
                    width: E,
                    style: {
                        minWidth: E
                    },
                    variant: "actions",
                    zIndex: 1
                }, a), a.length === 0 && l &&  r().createElement(In, {
                    key: "actions_head_cell",
                    "data-test": "actions-head-cell",
                    align: "right",
                    resizable: false,
                    width: l,
                    style: {
                        minWidth: l
                    },
                    variant: "actions",
                    zIndex: 1
                }, " ")));
            }
        } ], [ {
            key: "validateChildrenWidth",
            value: function e(t) {
                if (false) {
                    var n;
                }
            }
        } ]);
        return o;
    }(n.Component);
    uo(bo, "contextType", on);
    uo(bo, "splunkUiType", "Table.Head");
    uo(bo, "propTypes", fo);
    uo(bo, "defaultProps", po);
    /* harmony default export */    const mo = bo;
    // CONCATENATED MODULE: external "lodash/isFinite"
    const go = require("lodash/isFinite");
    var wo =  e.n(go);
    // CONCATENATED MODULE: external "lodash/isFunction"
    const xo = require("lodash/isFunction");
    var Co =  e.n(xo);
    // CONCATENATED MODULE: external "@splunk/react-ui/Popover"
    const ko = require("@splunk/react-ui/Popover");
    var So =  e.n(ko);
    // CONCATENATED MODULE: ./src/Table/HeadDropdownCell.tsx
    function Oo(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Oo = function e(t) {
                return typeof t;
            };
        } else {
            Oo = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Oo(e);
    }
    function Ro() {
        Ro = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Ro.apply(this, arguments);
    }
    function Eo(e) {
        return To(e) || Do(e) || jo(e) || Io();
    }
    function Io() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function jo(e, t) {
        if (!e) return;
        if (typeof e === "string") return _o(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _o(e, t);
    }
    function Do(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function To(e) {
        if (Array.isArray(e)) return _o(e);
    }
    function _o(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Po(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function qo(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Ao(e, t, n) {
        if (t) qo(e.prototype, t);
        if (n) qo(e, n);
        return e;
    }
    function zo(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Ho(e, t);
    }
    function Ho(e, t) {
        Ho = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Ho(e, t);
    }
    function Mo(e) {
        var t = $o();
        return function n() {
            var r = Wo(e), o;
            if (t) {
                var i = Wo(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return Lo(this, o);
        };
    }
    function Lo(e, t) {
        if (t && (Oo(t) === "object" || typeof t === "function")) {
            return t;
        }
        return No(e);
    }
    function No(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function $o() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Wo(e) {
        Wo = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Wo(e);
    }
    function Ko(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    /** @public */    var Bo = [ "clickAway", "contentClick", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
    var Fo = {
        align: i().oneOf([ "left", "center", "right" ]),
        canCoverHead: i().bool,
        children: i().node.isRequired,
        closeReasons: i().arrayOf(i().oneOf(Bo)),
        columnId: i().any,
        defaultPlacement: i().oneOf([ "above", "below", "left", "right", "vertical", "horizontal" ]),
        elementRef: i().oneOfType([ i().func, i().object ]),
        focusToggleReasons: i().arrayOf(i().oneOf(Bo)),
        /** @private The index of the cell, skipping the info column. */
        index: i().number,
        label: i().node,
        /** @private. */
        onAutosizeColumn: i().func,
        /** @private. */
        onDragStart: i().func,
        /**
   * @private. This will be passed through, and will work as expected.
   */
        onKeyDown: i().func,
        onRequestClose: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        onRequestOpen: i().func,
        /** @private. */
        onRequestResize: i().func,
        open: i().bool,
        repositionMode: i().oneOf([ "none", "flip", "any" ]),
        resizable: i().bool,
        retainFocus: i().bool,
        /** @private. */
        showGuideline: i().oneOf([ "none", "before", "after" ]),
        takeFocus: i().bool,
        truncate: i().bool,
        /**
   * @private
   * Used internally to suppress focus when this `HeadDropdownCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   */
        visible: i().bool,
        width: i().number,
        /** @private. */
        variant: i().oneOf([ "toggleAll", "info", "actions" ]),
        /** @private. */
        zIndex: i().number
    };
    var Vo = {
        align: "left",
        canCoverHead: true,
        closeReasons: Bo,
        defaultPlacement: "below",
        focusToggleReasons: [ "contentClick", "escapeKey", "toggleClick" ],
        repositionMode: "flip",
        resizable: true,
        retainFocus: false,
        takeFocus: true,
        truncate: true,
        visible: true,
        zIndex: 1
    };
    var Uo =  function(e) {
        zo(n, e);
        var t = Mo(n);
        // @docs-props-type HeadDropdownCellPropsBase
        /**
   * Enumeration of the possible reasons for closing the Select.
   * 'clickAway', 'escapeKey', and 'offScreen' are inherited from Popover, but repeated here for
   * docs extraction.
   */        function n(e) {
            var r;
            Po(this, n);
            r = t.call(this, e);
            Ko(No(r), "cellId", void 0);
            Ko(No(r), "controlledExternally", void 0);
            Ko(No(r), "popoverId", void 0);
            Ko(No(r), "handleMount", (function(e) {
                r.setState({
                    el: e
                });
                N(r.props.elementRef, e);
            }));
            Ko(No(r), "handleRequestClose", (function(e) {
                var t = e.reason, n = e.event;
                var o = r.props, i = o.closeReasons, a = o.columnId, l = o.focusToggleReasons, c = o.index, s = o.onRequestClose;
                if (t === "clickAway" && n !== undefined) {
                    var u = n.target;
                    while (u) {
                        // Ignore clicks on toggle.
                        if (u === r.state.el) {
                            return;
                        }
                        u = u.parentNode;
                    }
                }
                if (r.isOpen() && P()(i, t) && c !== undefined) {
                    if (P()(l, t)) {
                        r.focus();
                    }
                    if (!r.isControlled()) {
                        r.setState({
                            open: false
                        });
                    }
                    s === null || s === void 0 ? void 0 : s(n, {
                        index: c,
                        reason: t,
                        columnId: a
                    });
                }
            }));
            Ko(No(r), "handleClick", (function(e) {
                var t = r.props, n = t.columnId, o = t.index;
 // ignore clicks on the resize handle
                                if (e.target.getAttribute("data-test") === "resize") {
                    return;
                }
                if (!r.isOpen()) {
                    r.setState({
                        clientX: e.clientX || undefined
                    });
                }
                if (r.isOpen()) {
                    var i, a;
                    (i = (a = r).handleRequestClose) === null || i === void 0 ? void 0 : i.call(a, {
                        reason: "toggleClick",
                        event: e
                    });
                } else if (o !== undefined) {
                    var l, c;
                    (l = (c = r.props).onRequestOpen) === null || l === void 0 ? void 0 : l.call(c, e, {
                        reason: "toggleClick",
                        columnId: n,
                        index: o
                    });
                    if (!r.isControlled()) {
                        r.setState({
                            open: true
                        });
                    }
                }
            }));
            Ko(No(r), "handleKeyDown", (function(e) {
                var t = r.props, n = t.columnId, o = t.index, i = t.onKeyDown, a = t.onRequestMoveColumn;
                if (e.target.getAttribute("data-test") !== "resize") {
                    if ((0, R.keycode)(e.nativeEvent) === "enter") {
                        r.handleClick(e);
                    } else if ((0, R.keycode)(e.nativeEvent) === "left" && o !== undefined && o > 0) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o - 1,
                            columnId: n
                        });
                    } else if ((0, R.keycode)(e.nativeEvent) === "right" && o !== undefined) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o + 1,
                            columnId: n
                        });
                    }
                }
                if (o !== undefined) {
                    i === null || i === void 0 ? void 0 : i(e, {
                        index: o,
                        columnId: n
                    });
                }
            }));
            Ko(No(r), "handleContentClick", (function(e) {
                r.handleRequestClose({
                    reason: "contentClick",
                    event: e
                });
            }));
            Ko(No(r), "handleDragStart", (function(e, t) {
                var n, o;
                r.setState({
                    isDragging: true
                });
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, e, t);
            }));
            Ko(No(r), "handleDragEnd", (function() {
                r.setState({
                    isDragging: false
                });
            }));
            r.state = {
                el: null,
                isDragging: false,
                open: false
            };
            r.controlledExternally = f()(e, "open");
            r.popoverId = (0, Kn.createDOMID)("popover");
            r.cellId = (0, Kn.createDOMID)("cellId");
            if (false) {}
            return r;
        }
        Ao(n, [ {
            key: "componentDidUpdate",
            value: function e(t) {
                if (t.visible && !this.props.visible) {
                    this.handleRequestClose({
                        reason: "offScreen"
                    });
                }
                if (false) {}
            }
        }, {
            key: "focus",
            /**
     * Place focus on the toggle.
     */
            value: function e() {
                var t;
                (t = this.state.el) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "isOpen",
            value: function e() {
                return this.isControlled() ? this.props.open : this.state.open;
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
        }, {
            key: "render",
            value: function e() {
                var t, o = this;
                var i = this.props, a = i.align, l = i.canCoverHead, c = i.children, s = i.closeReasons, u = i.columnId, d = i.defaultPlacement, f = i.id, p = i.index, v = i.label, h = i.onAutosizeColumn, y = i.onDragStart, b = i.onRequestResize, m = i.repositionMode, w = i.resizable, x = i.retainFocus, C = i.showGuideline, k = i.style, S = i.takeFocus, O = i.truncate, R = i.variant, E = i.visible, I = i.width, j = i.zIndex;
                var D = this.state, T = D.el, _ = D.clientX;
                var q = f || this.cellId;
                var A = this.context.headType;
                
                return r().createElement(Rt, Ro({
                    style: Ze()(k, {
                        width: I
                    }),
                    "data-test": "head-cell",
                    $dragging: this.state.isDragging || undefined,
                    $clickable: true,
                    $variant: R,
                    id: E ? q : undefined,
                    tabIndex: E ? 0 : undefined,
                    ref: this.handleMount
                }, g()(this.props, [].concat(Eo(Object.keys(n.propTypes)), [ "id", "style" ])), {
                    onClick: this.handleClick,
                    onKeyDown: this.handleKeyDown,
                    "aria-haspopup": true,
                    "aria-owns": this.popoverId,
                    "aria-expanded": this.isOpen(),
                    $isFixed: A === "fixed",
                    $zIndex: j
                }),  r().createElement(nn, {
                    label: v,
                    align: a,
                    columnId: u,
                    id: f,
                    index: p,
                    isMenu: true,
                    resizable: E && w,
                    onDragStart: y ? this.handleDragStart : undefined,
                    onDragEnd: y ? this.handleDragEnd : undefined,
                    onAutosizeColumn: h,
                    onRequestResize: b,
                    truncate: O,
                    width: I
                }), C !== "none" &&  r().createElement(Et, {
                    $position: C
                }),  r().createElement(So(), {
                    align: "center",
                    open: !!T && this.isOpen(),
                    autoCloseWhenOffScreen: P()(s, "offScreen"),
                    anchor: T,
                    canCoverAnchor: l,
                    retainFocus: x,
                    defaultPlacement: d,
                    onRequestClose: this.handleRequestClose,
                    repositionMode: m,
                    id: this.popoverId,
                    "aria-labelledby": f || this.cellId,
                    takeFocus: S,
                    pointTo: _ !== undefined && wo()(_) ? {
                        x: _ - ((t = T === null || T === void 0 ? void 0 : T.getBoundingClientRect().left) !== null && t !== void 0 ? t : 0)
                    } : undefined
                }, Co()(c) ? function() {
                    
                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
                    return r().createElement("div", {
                        onClick: o.handleContentClick
                    }, c.apply(void 0, arguments));
                } : 
                
                // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
                r().createElement("div", {
                    onClick: this.handleContentClick
                }, c)));
            }
        } ]);
        return n;
    }(n.Component);
    Ko(Uo, "splunkUiType", "Table.HeadDropdownCell");
    Ko(Uo, "possibleCloseReasons", Bo);
    Ko(Uo, "propTypes", Fo);
    Ko(Uo, "defaultProps", Vo);
    Ko(Uo, "contextType", on);
    /* harmony default export */    const Go = Uo;
    // CONCATENATED MODULE: ./src/Table/KeyboardSensor.ts
    function Xo(e, t) {
        return Jo(e) || Qo(e, t) || ti(e, t) || Yo();
    }
    function Yo() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Qo(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var i = undefined;
        try {
            for (var a = e[Symbol.iterator](), l; !(r = (l = a.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            i = e;
        } finally {
            try {
                if (!r && a["return"] != null) a["return"]();
            } finally {
                if (o) throw i;
            }
        }
        return n;
    }
    function Jo(e) {
        if (Array.isArray(e)) return e;
    }
    function Zo(e) {
        return ri(e) || ni(e) || ti(e) || ei();
    }
    function ei() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ti(e, t) {
        if (!e) return;
        if (typeof e === "string") return oi(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return oi(e, t);
    }
    function ni(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function ri(e) {
        if (Array.isArray(e)) return oi(e);
    }
    function oi(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function ii(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function ai(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function li(e, t, n) {
        if (t) ai(e.prototype, t);
        if (n) ai(e, n);
        return e;
    }
    function ci(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    // based on https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/sensors/keyboard/KeyboardSensor.ts
    // eslint-disable-next-line max-classes-per-file
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/sensors/utilities/Listeners.ts
        var si =  function() {
        function e(t) {
            var n = this;
            ii(this, e);
            ci(this, "listeners", []);
            ci(this, "removeAll", (function() {
                n.listeners.forEach((function(e) {
                    var t;
                    return (t = n.target) === null || t === void 0 ? void 0 : t.removeEventListener.apply(t, Zo(e));
                }));
            }));
            this.target = t;
            this.target = t;
        }
        li(e, [ {
            key: "add",
            value: function e(t, n, r) {
                var o;
                (o = this.target) === null || o === void 0 ? void 0 : o.addEventListener(t, n, r);
                this.listeners.push([ t, n, r ]);
            }
        } ]);
        return e;
    }();
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/transform/parseTransform.ts
        function ui(e) {
        if (e.startsWith("matrix3d(")) {
            var t = e.slice(9, -1).split(/, /);
            return {
                x: +t[12],
                y: +t[13],
                scaleX: +t[0],
                scaleY: +t[5]
            };
        }
        if (e.startsWith("matrix(")) {
            var n = e.slice(7, -1).split(/, /);
            return {
                x: +n[4],
                y: +n[5],
                scaleX: +n[0],
                scaleY: +n[3]
            };
        }
        return null;
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/transform/inverseTransform.ts
        function di(e, t, n) {
        var r = ui(t);
        if (!r) {
            return e;
        }
        var o = r.scaleX, i = r.scaleY, a = r.x, l = r.y;
        var c = e.left - a - (1 - o) * parseFloat(n);
        var s = e.top - l - (1 - i) * parseFloat(n.slice(n.indexOf(" ") + 1));
        var u = o ? e.width / o : e.width;
        var d = i ? e.height / i : e.height;
        return {
            width: u,
            height: d,
            top: s,
            right: c + u,
            bottom: s + d,
            left: c
        };
    }
    var fi = {
        ignoreTransform: false
    };
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/rect/getRect.ts
        function pi(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : fi;
        var n = e.getBoundingClientRect();
        if (t.ignoreTransform) {
            var r = (0, qn.getWindow)(e).getComputedStyle(e), o = r.transform, i = r.transformOrigin;
            if (o) {
                n = di(n, o, i);
            }
        }
        var a = n, l = a.top, c = a.left, s = a.width, u = a.height, d = a.bottom, f = a.right;
        return {
            top: l,
            left: c,
            width: s,
            height: u,
            bottom: d,
            right: f
        };
    }
    function vi(e) {
        if (e === document.scrollingElement) {
            var t = window, n = t.innerWidth, r = t.innerHeight;
            return {
                top: 0,
                left: 0,
                right: n,
                bottom: r,
                width: n,
                height: r
            };
        }
        var o = e.getBoundingClientRect(), i = o.top, a = o.left, l = o.right, c = o.bottom;
        return {
            top: i,
            left: a,
            right: l,
            bottom: c,
            width: e.clientWidth,
            height: e.clientHeight
        };
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/documentScrollingElement.ts
        function hi(e) {
        if (!qn.canUseDOM || !e) {
            return false;
        }
        return e === document.scrollingElement;
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollPosition.ts
        function yi(e) {
        var t = {
            x: 0,
            y: 0
        };
        var n = hi(e) ? {
            height: window.innerHeight,
            width: window.innerWidth
        } : {
            height: e.clientHeight,
            width: e.clientWidth
        };
        var r = {
            x: e.scrollWidth - n.width,
            y: e.scrollHeight - n.height
        };
        var o = e.scrollTop <= t.y;
        var i = e.scrollLeft <= t.x;
        var a = e.scrollTop >= r.y;
        var l = e.scrollLeft >= r.x;
        return {
            isTop: o,
            isLeft: i,
            isBottom: a,
            isRight: l,
            maxScroll: r,
            minScroll: t
        };
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/coordinates/constants.ts
        var bi = {
        x: 0,
        y: 0
    };
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/isFixed.ts
        function mi(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, 
        qn.getWindow)(e).getComputedStyle(e);
        return t.position === "fixed";
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/isScrollable.ts
        function gi(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, 
        qn.getWindow)(e).getComputedStyle(e);
        var n = /(auto|scroll|overlay)/;
        var r = [ "overflow", "overflowX", "overflowY" ];
        return r.some((function(e) {
            var r = t[e];
            return typeof r === "string" ? n.test(r) : false;
        }));
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollableAncestors.ts
        function wi(e, t) {
        var n = [];
        function r(o) {
            if (t != null && n.length >= t) {
                return n;
            }
            if (!o) {
                return n;
            }
            if ((0, qn.isDocument)(o) && o.scrollingElement != null && !n.includes(o.scrollingElement)) {
                n.push(o.scrollingElement);
                return n;
            }
            if (!(0, qn.isHTMLElement)(o) || (0, qn.isSVGElement)(o)) {
                return n;
            }
            if (n.includes(o)) {
                return n;
            }
            var i = (0, qn.getWindow)(e).getComputedStyle(o);
            if (o !== e) {
                if (gi(o, i)) {
                    n.push(o);
                }
            }
            if (mi(o, i)) {
                return n;
            }
            return r(o.parentNode);
        }
        if (!e) {
            return n;
        }
        return r(e);
    }
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollableAncestors.ts
        function xi(e) {
        var t = wi(e, 1), n = Xo(t, 1), r = n[0];
        return r !== null && r !== void 0 ? r : null;
    }
    var Ci = {
        start: [ a.KeyboardCode.Space, a.KeyboardCode.Enter ],
        cancel: [ a.KeyboardCode.Esc ],
        end: [ a.KeyboardCode.Space, a.KeyboardCode.Enter ]
    };
 // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/scrollIntoViewIfNeeded.ts
        function ki(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pi;
        if (!e) {
            return;
        }
        var n = t(e), r = n.top, o = n.left, i = n.bottom, a = n.right;
        var l = xi(e);
        if (!l) {
            return;
        }
        if (i <= 0 || a <= 0 || r >= window.innerHeight || o >= window.innerWidth) {
            e.scrollIntoView({
                block: "center",
                inline: "center"
            });
        }
    }
    var Si =  function() {
        function e(t) {
            ii(this, e);
            ci(this, "autoScrollEnabled", false);
            ci(this, "referenceCoordinates", void 0);
            ci(this, "listeners", void 0);
            ci(this, "windowListeners", void 0);
            this.props = t;
            var n = t.event.target;
            this.props = t;
            this.listeners = new si((0, qn.getOwnerDocument)(n));
            this.windowListeners = new si((0, qn.getWindow)(n));
            this.handleKeyDown = this.handleKeyDown.bind(this);
            this.handleCancel = this.handleCancel.bind(this);
            this.attach();
        }
        li(e, [ {
            key: "attach",
            value: function e() {
                var t = this;
                this.handleStart();
                this.windowListeners.add("resize", this.handleCancel);
                this.windowListeners.add("visibilitychange", this.handleCancel);
                setTimeout((function() {
                    return t.listeners.add("keydown", t.handleKeyDown);
                }));
            }
        }, {
            key: "handleStart",
            value: function e() {
                var t = this.props, n = t.activeNode, r = t.onStart;
                var o = n.node.current;
                if (o) {
                    ki(o);
                }
                r(bi);
            }
        }, {
            key: "handleKeyDown",
            value: function e(t) {
                if ((0, qn.isKeyboardEvent)(t)) {
                    var n = this.props, r = n.active, o = n.context, i = n.options;
                    var l = i.keyboardCodes, c = l === void 0 ? Ci : l, s = i.coordinateGetter, u = i.scrollBehavior, d = u === void 0 ? "smooth" : u;
                    var f = t.code;
                    if (c.end.includes(f)) {
                        this.handleEnd(t);
                        return;
                    }
                    if (c.cancel.includes(f)) {
                        this.handleCancel(t);
                        return;
                    }
                    var p = o.current.collisionRect;
                    var v = p ? {
                        x: p.left,
                        y: p.top
                    } : bi;
                    if (!this.referenceCoordinates) {
                        this.referenceCoordinates = v;
                    }
                    var h = s(t, {
                        active: r,
                        context: o.current,
                        currentCoordinates: v
                    });
                    if (h) {
                        var y = (0, qn.subtract)(h, v);
                        var b = {
                            x: 0,
                            y: 0
                        };
                        var m = o.current.scrollableAncestors;
                        for (var g = 0; g < m.length; g += 1) {
                            var w = m[g];
                            var x = t.code;
                            var C = yi(w), k = C.isTop, S = C.isRight, O = C.isLeft, R = C.isBottom, E = C.maxScroll, I = C.minScroll;
                            var j = vi(w);
 // isDraggableNodeVerticallyInView and isDraggableNodeHorizontallyInView are custom
                            // we want to scroll only when a dragging node will be out of view,
                            // originally it tries to always place a dragging node in the middle of the container
                                                        var D = j.top <= h.y && j.bottom >= h.y + ((p === null || p === void 0 ? void 0 : p.height) || 0);
                            var T = j.left <= h.x && j.right >= h.x + ((p === null || p === void 0 ? void 0 : p.width) || 0);
                            var _ = (x === a.KeyboardCode.Right && !S || x === a.KeyboardCode.Left && !O) && !T;
                            var P = (x === a.KeyboardCode.Down && !R || x === a.KeyboardCode.Up && !k) && !D;
                            if (_) {
                                var q = w.scrollLeft + y.x;
                                var A = x === a.KeyboardCode.Right && q <= E.x || x === a.KeyboardCode.Left && q >= I.x;
                                if (A && !y.y) {
                                    // We don't need to update coordinates, the scroll adjustment alone will trigger
                                    // logic to auto-detect the new container we are over
                                    w.scrollTo({
                                        left: q,
                                        behavior: d
                                    });
                                    return;
                                }
                                if (A) {
                                    b.x = w.scrollLeft - q;
                                } else {
                                    b.x = x === a.KeyboardCode.Right ? w.scrollLeft - E.x : w.scrollLeft - I.x;
                                }
                                if (b.x) {
                                    w.scrollBy({
                                        left: -b.x,
                                        behavior: d
                                    });
                                }
                                break;
                            } else if (P) {
                                var z = w.scrollTop + y.y;
                                var H = x === a.KeyboardCode.Down && z <= E.y || x === a.KeyboardCode.Up && z >= I.y;
                                if (H && !y.x) {
                                    // We don't need to update coordinates, the scroll adjustment alone will trigger
                                    // logic to auto-detect the new container we are over
                                    w.scrollTo({
                                        top: z,
                                        behavior: d
                                    });
                                    return;
                                }
                                if (H) {
                                    b.y = w.scrollTop - z;
                                } else {
                                    b.y = x === a.KeyboardCode.Down ? w.scrollTop - E.y : w.scrollTop - I.y;
                                }
                                if (b.y) {
                                    w.scrollBy({
                                        top: -b.y,
                                        behavior: d
                                    });
                                }
                                break;
                            }
                        }
                        this.handleMove(t, (0, qn.add)((0, qn.subtract)(h, this.referenceCoordinates), b));
                    }
                }
            }
        }, {
            key: "handleMove",
            value: function e(t, n) {
                var r = this.props.onMove;
                t.preventDefault();
                r(n);
            }
        }, {
            key: "handleEnd",
            value: function e(t) {
                var n = this.props.onEnd;
                t.preventDefault();
                this.detach();
                n();
            }
        }, {
            key: "handleCancel",
            value: function e(t) {
                var n = this.props.onCancel;
                t.preventDefault();
                this.detach();
                n();
            }
        }, {
            key: "detach",
            value: function e() {
                this.listeners.removeAll();
                this.windowListeners.removeAll();
            }
        } ]);
        return e;
    }();
    ci(Si, "activators", [ {
        eventName: "onKeyDown",
        handler: function e(t, n, r) {
            var o = n.keyboardCodes, i = o === void 0 ? Ci : o, a = n.onActivation;
            var l = r.active;
            var c = t.nativeEvent.code;
            if (i.start.includes(c)) {
                var s = l.activatorNode.current;
                if (s && t.target !== s) {
                    return false;
                }
                t.preventDefault();
                a === null || a === void 0 ? void 0 : a({
                    event: t.nativeEvent
                });
                return true;
            }
            return false;
        }
    } ]);
    // CONCATENATED MODULE: external "lodash/extend"
    const Oi = require("lodash/extend");
    var Ri =  e.n(Oi);
    // CONCATENATED MODULE: ./src/Table/HeadTableStyles.ts
    var Ei = H()(he).withConfig({
        displayName: "HeadTableStyles__Styled",
        componentId: "g85wgf-0"
    })([ "min-width:0;table-layout:fixed;" ]);
    var Ii = H().div.withConfig({
        displayName: "HeadTableStyles__StyledDockedContainer",
        componentId: "g85wgf-1"
    })([ "overflow:hidden;position:fixed;box-shadow:", ";z-index:", ";@media print{display:none;}" ], (0, 
    M.pick)({
        enterprise: M.variables.overlayShadow,
        prisma: "none"
    }), M.variables.zindexFixedNavbar);
    var ji = H()(Ii).withConfig({
        displayName: "HeadTableStyles__StyledFixedContainer",
        componentId: "g85wgf-2"
    })([ "position:absolute;box-shadow:none;z-index:1;" ]);
    // CONCATENATED MODULE: ./src/Table/HeadTable.tsx
    function Di(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Di = function e(t) {
                return typeof t;
            };
        } else {
            Di = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Di(e);
    }
    function Ti() {
        Ti = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return Ti.apply(this, arguments);
    }
    function _i(e, t) {
        if (e == null) return {};
        var n = Pi(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function Pi(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function qi(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Ai(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function zi(e, t, n) {
        if (t) Ai(e.prototype, t);
        if (n) Ai(e, n);
        return e;
    }
    function Hi(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Mi(e, t);
    }
    function Mi(e, t) {
        Mi = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Mi(e, t);
    }
    function Li(e) {
        var t = Wi();
        return function n() {
            var r = Ki(e), o;
            if (t) {
                var i = Ki(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return Ni(this, o);
        };
    }
    function Ni(e, t) {
        if (t && (Di(t) === "object" || typeof t === "function")) {
            return t;
        }
        return $i(e);
    }
    function $i(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Wi() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function Ki(e) {
        Ki = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return Ki(e);
    }
    function Bi(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Fi = {
        cellWidths: i().arrayOf(i().number).isRequired,
        dragIndex: i().number,
        elementRef: i().oneOfType([ i().func, i().object ]),
        hasDragColumn: i().bool,
        hasRowExpansion: i().bool,
        hasRowSelection: i().bool,
        headType: i().oneOf([ "docked", "fixed" ]).isRequired,
        horizontalOffset: i().number,
        isFixedColumn: i().bool,
        rowSelection: i().oneOf([ "all", "some", "none" ]),
        tableStyle: i().object,
        tableWidth: i().number.isRequired,
        tHead: i().element.isRequired,
        top: i().number.isRequired,
        width: i().number.isRequired
    };
    var Vi = {
        horizontalOffset: 0
    };
    /**
 * @private
 * HeadTable is an internal component that provides a detached table head that can
 * then be positioned in different ways outside of the main table.
 */    var Ui =  function(e) {
        Hi(o, e);
        var t = Li(o);
        function o() {
            var e;
            qi(this, o);
            for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                r[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(r));
            Bi($i(e), "head", null);
            Bi($i(e), "handleHeadMount", (function(t) {
                e.head = t;
            }));
            return e;
        }
        zi(o, [ {
            key: "getHead",
            value: function e() {
                return this.head;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, o = t.cellWidths, i = t.elementRef, a = t.hasDragColumn, l = t.hasRowExpansion, c = t.hasRowSelection, s = t.headType, u = t.horizontalOffset, d = t.isFixedColumn, f = t.tableStyle, p = t.tableWidth, v = t.tHead, h = t.top, y = t.width, b = _i(t, [ "cellWidths", "elementRef", "hasDragColumn", "hasRowExpansion", "hasRowSelection", "headType", "horizontalOffset", "isFixedColumn", "tableStyle", "tableWidth", "tHead", "top", "width" ]);
                var m = s === "docked";
                var w = m ? Ii : ji;
                var x = 0;
                if (l) {
                    x += 1;
                }
                if (c) {
                    x += 1;
                }
                if (a) {
                    x += 1;
                }
 // Set the widths of the head cells if not fixed column
                                var C = d ? n.Children.toArray(v.props.children) : // ensure consistent keys
                n.Children.toArray(v.props.children).filter(n.isValidElement).map((function(e, t) {
                    
                    return (0, n.cloneElement)(e, {
                        style: Ri()({}, e.props.style, {
                            width: o[t + x]
                        })
                    });
                }));
                var k =  (0, n.cloneElement)(v, {
                    ref: this.handleHeadMount,
                    "data-test": "".concat(s, "-head")
                }, C);
                
                return r().createElement(w, {
                    style: {
                        top: h,
                        width: y
                    },
                    ref: i
                },  r().createElement(Ei, Ti({
                    "data-test": "".concat(s, "-head-table"),
                    "data-fixed-column": d ? "true" : undefined,
                    style: Ri()({}, f, {
                        marginLeft: u,
                        width: d ? undefined : p
                    })
                }, g()(b, "dragIndex")), k));
            }
        } ]);
        return o;
    }(n.Component);
    Bi(Ui, "propTypes", Fi);
    Bi(Ui, "defaultProps", Vi);
    /* harmony default export */    const Gi = Ui;
    // CONCATENATED MODULE: ./src/utils/types.ts
    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31245 for details
    // regarding the css prop. certain (versions of) libraries included in the compilation
    // - such as storybook->emotion - introduce the css prop using a global augmentation,
    // which causes the prop to end up in our declaration files (via JSX.IntrinsicElements).
    // it's difficult to control all nested dependencies and their types, which is why the
    // css prop is omitted in the two prop helpers above - this ensures the css prop isn't
    // erroneously included in react-ui's public api.
    // see https://github.com/microsoft/TypeScript/pull/12253
    // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html
    function Xi(e, t) {
        if (e === undefined || e === null) {
            throw new Error(t !== null && t !== void 0 ? t : "Unexpected undefined or null");
        }
    }
    // CONCATENATED MODULE: ./src/Table/Table.tsx
    function Yi(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Yi = function e(t) {
                return typeof t;
            };
        } else {
            Yi = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Yi(e);
    }
    function Qi(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Ji(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Zi(e, t, n) {
        if (t) Ji(e.prototype, t);
        if (n) Ji(e, n);
        return e;
    }
    function ea(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) ta(e, t);
    }
    function ta(e, t) {
        ta = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return ta(e, t);
    }
    function na(e) {
        var t = ia();
        return function n() {
            var r = aa(e), o;
            if (t) {
                var i = aa(this).constructor;
                o = Reflect.construct(r, arguments, i);
            } else {
                o = r.apply(this, arguments);
            }
            return ra(this, o);
        };
    }
    function ra(e, t) {
        if (t && (Yi(t) === "object" || typeof t === "function")) {
            return t;
        }
        return oa(e);
    }
    function oa(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function ia() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function aa(e) {
        aa = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return aa(e);
    }
    function la(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    function ca() {
        ca = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return ca.apply(this, arguments);
    }
    function sa(e) {
        return fa(e) || da(e) || ha(e) || ua();
    }
    function ua() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function da(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function fa(e) {
        if (Array.isArray(e)) return ya(e);
    }
    function pa(e, t) {
        return ma(e) || ba(e, t) || ha(e, t) || va();
    }
    function va() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ha(e, t) {
        if (!e) return;
        if (typeof e === "string") return ya(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ya(e, t);
    }
    function ya(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function ba(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var i = undefined;
        try {
            for (var a = e[Symbol.iterator](), l; !(r = (l = a.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            i = e;
        } finally {
            try {
                if (!r && a["return"] != null) a["return"]();
            } finally {
                if (o) throw i;
            }
        }
        return n;
    }
    function ma(e) {
        if (Array.isArray(e)) return e;
    }
    function ga(e, t) {
        if (e == null) return {};
        var n = wa(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                r = i[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function wa(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, i;
        for (i = 0; i < r.length; i++) {
            o = r[i];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    // Exposed as static members of the Table class
    // Internal Helper Modules
    /** @public */    var xa = {
        actions: i().arrayOf(i().element),
        actionsColumnWidth: i().number,
        children: i().node,
        dockOffset: i().number,
        dockScrollBar: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        headType: i().oneOf([ "docked", "fixed", "inline" ]),
        innerStyle: i().object,
        onRequestToggleAllRows: i().func,
        onScroll: i().func,
        outerStyle: i().object,
        primaryColumnIndex: i().number,
        rowExpansion: i().oneOf([ "single", "multi", "controlled", "none" ]),
        rowSelection: i().oneOf([ "all", "some", "none" ]),
        stripeRows: i().bool,
        tableStyle: i().object,
        onRequestMoveColumn: i().func,
        onRequestMoveRow: i().func,
        onRequestResizeColumn: i().func,
        resizableFillLayout: i().bool
    };
    var Ca = {
        actions: [],
        dockOffset: 0,
        headType: "inline",
        rowExpansion: "none",
        rowSelection: "none",
        resizableFillLayout: false,
        primaryColumnIndex: 0
    };
    var ka = function e(t) {
        return t === "inline";
    };
    var Sa = function e(t) {
        return t === "docked";
    };
    var Oa = function e(t) {
        return t === "fixed";
    };
    var Ra = function e(t) {
        var n = zt();
        var r = t.getBoundingClientRect();
        return {
            top: r.top + n.pageYOffset,
            left: r.left + n.pageXOffset
        };
    };
    var Ea = function e(t) {
        var n, r;
        var o = qt();
        if (t === undefined || t === null) {
            return undefined;
        }
        var i = (n = t.getEl()) === null || n === void 0 ? void 0 : n.children[0].children;
        var a = v()(i, o.activeElement);
        if (a > -1) {
            return {
                target: "headCell",
                index: a
            };
        }
        var l = (r = t.getEl()) === null || r === void 0 ? void 0 : r.querySelectorAll("[data-test=resize]");
        var c = v()(l, o.activeElement);
        if (c > -1) {
            return {
                target: "resizeButton",
                index: c
            };
        }
        return undefined;
    };
    var Ia = function e(t, n) {
        return t.indexOf(n) + 1;
    };
    var ja = {
        coordinateGetter: l.sortableKeyboardCoordinates
    };
    var Da = [ c.restrictToParentElement ];
    var Ta = {
        draggable: (0, D._)("To pick up a sortable row, press space or enter.\n        Use the up and down arrow keys to update the position of the row.\n        Press space or enter again to drop the row in its new position, or press escape to cancel.")
    };
    /**
 * @private
 * @private
 * Applies the provided `headFocusState` to the provided `head`.
 * @param head - A reference to a mounted `Head` component.
 * @param {Object} headFocusState
 * @param {String} headFocusState.target - Focus can be applied to a 'headCell' or a
 * 'resizeButton'.
 * @param {Number} headFocusState.index - The index of the element to set focus on.
 */    function _a(e, t) {
        var n, r;
        var o = t.target, i = t.index;
        if (false) {}
        var a;
        if (o === "headCell") {
            var l;
            a = e === null || e === void 0 ? void 0 : (l = e.getEl()) === null || l === void 0 ? void 0 : l.children[0].children[i];
        } else if (o === "resizeButton") {
            var c;
            a = e === null || e === void 0 ? void 0 : (c = e.getEl()) === null || c === void 0 ? void 0 : c.querySelectorAll("[data-test=resize]")[i];
        }
        if (false) {}
        (n = a) === null || n === void 0 ? void 0 : (r = n.focus) === null || r === void 0 ? void 0 : r.call(n);
    }
    function Pa(e) {
        var t = e.actions, o = e.actionsColumnWidth, i = e.children, c = e.dockOffset, s = e.dockScrollBar, d = e.elementRef, p = e.headType, v = e.innerStyle, h = e.onRequestMoveColumn, b = e.onRequestMoveRow, m = e.onRequestResizeColumn, w = e.onRequestToggleAllRows, C = e.onScroll, S = e.outerStyle, I = e.primaryColumnIndex, D = e.resizableFillLayout, _ = e.rowExpansion, P = e.rowSelection, q = e.stripeRows, A = e.tableStyle, z = ga(e, [ "actions", "actionsColumnWidth", "children", "dockOffset", "dockScrollBar", "elementRef", "headType", "innerStyle", "onRequestMoveColumn", "onRequestMoveRow", "onRequestResizeColumn", "onRequestToggleAllRows", "onScroll", "outerStyle", "primaryColumnIndex", "resizableFillLayout", "rowExpansion", "rowSelection", "stripeRows", "tableStyle" ]);
        var H = (0, n.useState)([]), M = pa(H, 2), L = M[0], N = M[1];
        var $ = (0, n.useState)(), W = pa($, 2), K = W[0], B = W[1];
        var F = (0, n.useState)(), V = pa(F, 2), U = V[0], G = V[1];
        var X = (0, n.useState)(), Y = pa(X, 2), Q = Y[0], J = Y[1];
        var Z = (0, n.useState)(), ee = pa(Z, 2), te = ee[0], ne = ee[1];
 // states are used with dragging effect
                var re = (0, n.useState)(), oe = pa(re, 2), ie = oe[0], ae = oe[1];
        var le = (0, n.useState)(), ce = pa(le, 2), se = ce[0], ue = ce[1];
        var de = (0, n.useRef)(true);
        var fe = (0, n.useContext)(E.ScrollContainerContext);
        var me = (0, a.useSensors)((0, a.useSensor)(a.MouseSensor, {}), (0, a.useSensor)(a.TouchSensor, {}), (0, 
        a.useSensor)(Si, ja));
        var ge = (0, n.useRef)(null);
        var we = (0, n.useRef)(null);
        var xe = (0, n.useRef)();
        var Ce = (0, n.useRef)(null);
        var ke = (0, n.useRef)(null);
        var Se = (0, n.useRef)();
        var Oe = (0, n.useRef)(null);
        var Re = (0, n.useRef)(null);
        var Ee = j()(p);
        var Ie = [];
        var je = [];
        var De = (0, n.useCallback)((function() {
            var e = zt();
            if (ka(p)) {
                return;
            }
            var t = Re.current;
            var n = we.current;
            var r = Oe.current;
            if (!r || !n) {
                return;
            }
            var o = n.getCellWidths();
            var i = n.getClientHeight();
            var a = Ra(r).top - e.pageYOffset - (i || 0) + r.offsetHeight;
            var l = Math.min(a, Number(c));
            ne(t === null || t === void 0 ? void 0 : t.clientWidth);
            G(r === null || r === void 0 ? void 0 : r.clientWidth);
            N(o);
            J(l);
        }), [ c, p ]);
        (0, n.useEffect)((function() {
            var e = we.current;
            var t = Ce.current;
            if (e && t) {
                var n = e.getCellWidths();
                if (!y()(L, n)) {
                    De();
                }
            }
            if (Ee === "inline" && p === "inline") {
                De();
            }
            if (false) {}
        }), [ L, p, Ee, e, De ]);
        function Te(e) {
            var t = Re.current;
            C === null || C === void 0 ? void 0 : C(e);
            if ((Oa(p) || Sa(p)) && t) {
                B(-t.scrollLeft);
            }
            if (ge.current && Se.current !== "dockedScrollBar" && t) {
                Se.current = "container";
                ge.current.scrollLeft = t.scrollLeft;
            } else {
                Se.current = undefined;
            }
        }
        var _e = function e() {
            var t = Re.current;
            if (Se.current !== "container" && t && ge.current) {
                Se.current = "dockedScrollBar";
                t.scrollLeft = ge.current.scrollLeft;
            } else {
                Se.current = undefined;
            }
        };
        var Pe = x()(De, 0);
        var qe = x()(De, 50);
        (0, n.useEffect)((function() {
            // Using the return value of useCallback to recreate componentWillUnmount
            return function() {
                Pe.cancel();
                qe.cancel();
            };
        }));
        var Ae = function e(t) {
            we.current = t;
        };
        var ze = function e(t) {
            if (t) {
                // On mount, focus the applicable docked head cell if a primary head cell was focused.
                if (xe.current) {
                    _a(t.getHead(), xe.current);
                    xe.current = undefined;
                }
            } else {
                var n;
                // On unmount, focus the applicable primary head cell if a docked head cell was focused.
                                var r = Ea((n = Ce.current) === null || n === void 0 ? void 0 : n.getHead());
                if (r) {
                    _a(we.current, r);
                }
            }
            Ce.current = t;
        };
        var He = function e(t) {
            ke.current = t;
        };
        var Me = function e(t) {
            var n = Re.current;
            if (!ke.current || !n || (0, R.keycode)(t.nativeEvent) !== "tab") {
                return;
            }
            var r = ke.current.scrollLeft;
            if (r !== 0) {
                ke.current.scrollLeft = 0;
                n.scrollLeft += r;
            }
        };
        var Le = function e(t, n) {
            var r, o;
            var i = n.index, a = n.columnId;
            var l = qt();
            if (i === undefined) {
                return;
            }
            var c = _ === "none" ? 1 : 2;
            var s = (r = Re.current) === null || r === void 0 ? void 0 : r.querySelectorAll("thead th:nth-child(".concat(i + c, "), tbody td:nth-child(").concat(i + c, ")"));
            var d = l.createElement("div");
 // TODO: find a styled-components compliant way to do this
                        d.style["float"] = "left";
            d.style.position = "fixed";
            d.style.top = "-100";
            d.style.left = "0";
            d.style.maxHeight = "10px";
            d.style.overflow = "hidden";
            u()(s, (function(e) {
                var t = e.cloneNode(true);
 // TS: this seems safe to assume?
                                t.style.display = "block";
                t.style.width = "auto";
                d.appendChild(t);
            }));
            l.body.appendChild(d);
            m === null || m === void 0 ? void 0 : m(t, {
                index: i,
                columnId: a,
                width: d.clientWidth + 1
            });
            (o = d.parentNode) === null || o === void 0 ? void 0 : o.removeChild(d);
        };
        var Ne = (0, n.useCallback)((function(e) {
            ue(e);
        }), [ ue ]);
        var $e = x()(Ne, 100, {
            trailing: false
        });
        var We = function e(t) {
            t.preventDefault();
 // necessary for the drop event to fire
                        if (t.dataTransfer) {
                t.dataTransfer.dropEffect = "move";
            }
            $e(t.clientX);
        };
        var Ke = function e(t) {
            t.preventDefault();
 // necessary for the drop event to fire
                        ue(t.clientX);
        };
        var Be = function e(t) {
            t.preventDefault();
 // necessary to prevent cell from animating to original position;
                };
        var Fe = function e() {
            ue(undefined);
 // eslint-disable-next-line @typescript-eslint/no-use-before-define
                        Ve();
        };
        var Ve = function e() {
            var t = zt();
            t.removeEventListener("dragenter", Ke);
            t.removeEventListener("dragover", We);
            t.removeEventListener("drop", Be);
            t.removeEventListener("dragend", Fe);
            $e.cancel();
 // cancel throttle
                };
        (0, n.useEffect)((function() {
            // Using the return value of useCallback to recreate componentWillUnmount
            return function() {
                Ve();
            };
 // The warning can be safely ignored here, as we intend for the component to run only once when it unmounts,
            // rather than rerunning whenever dependencies change.
            // eslint-disable-next-line react-hooks/exhaustive-deps
                }), []);
        var Ue = function e(t) {
            var n = t.dragIndex;
            var r = zt();
            ae(n);
            r.addEventListener("dragenter", Ke);
            r.addEventListener("dragover", We);
            r.addEventListener("drop", Be);
            r.addEventListener("dragend", Fe);
        };
        var Ge = function e(t) {
            var n = t.active, r = t.over;
            de.current = true;
            if (r && n.id !== r.id) {
                var o;
                var i = je.indexOf(n.id);
                var a = je.indexOf(r === null || r === void 0 ? void 0 : r.id);
                var l = (o = Ie[i]) === null || o === void 0 ? void 0 : o.props.dataId;
                b === null || b === void 0 ? void 0 : b({
                    fromIndex: i,
                    toIndex: a,
                    dataId: l
                });
            }
        };
        var Xe = function e() {
            de.current = true;
        };
        var Ye = function e(r) {
            var i = n.Children.toArray(r.props.children).filter(n.isValidElement);
            var a = t === null || t === void 0 ? void 0 : t.filter(n.isValidElement);
            var l =  (0, n.cloneElement)(r, {
                actions: a,
                actionsColumnWidth: o,
                dragIndex: ie,
                dragPosition: se,
                hasInfoColumn: _ !== "none",
                hasDragColumn: !!b,
                onAutosizeColumn: Le,
                onDragStart: h ? Ue : undefined,
                onRequestMoveColumn: h,
                onRequestResizeColumn: m,
                onRequestToggleAllRows: w,
                ref: Ae,
                rowSelection: P
            }, i);
            return l;
        };
        var Qe = function e(r) {
            var o = (t === null || t === void 0 ? void 0 : t.filter(n.isValidElement)) || [];
            n.Children.toArray(r === null || r === void 0 ? void 0 : r.props.children).filter(n.isValidElement).forEach((function(e, t) {
                var r;
                var o = e.key || ((r = e.props) === null || r === void 0 ? void 0 : r.dataId) || t + 1;
                Ie.push( (0, n.cloneElement)(e, {
                    index: t,
                    dataId: o
                }));
                je.push(o);
            }));
            
            return (0, n.cloneElement)(r, {
                actions: o.length > 0,
                movableColumns: !!h,
                onRequestMoveRow: b,
                primaryColumnIndex: I,
                rowExpansion: _,
                stripeRows: q
            }, Ie);
        };
        var Je = function e() {
            var t = Re.current;
            var n = zt();
            if (!Sa(p) || !Oe.current || !we.current || !t) {
                return false;
            }
            var r = Ra(t).top;
            return n.pageYOffset >= r - (c || 0);
        };
        var Ze = function e() {
            var t = zt();
            var n = Re.current;
            if (!s || !Oe.current || !n) {
                return false;
            }
            var r = n.getBoundingClientRect();
            return r.bottom > t.innerHeight && r.top < t.innerHeight;
        };
        var et = function e(t, o) {
            if (Je()) {
                // FIXME: handle inline
                // Save the current head focus state so that it can be applied to the docked version
                // after the `HeadTable` mounts.
                xe.current = Ea(we.current);
                if (L === undefined || U === undefined || Q === undefined || te === undefined) {
                    return false;
                }
                var i =  (0, n.cloneElement)(t, {
                    elementRef: null
                });
                
                return r().createElement(Gi, {
                    headType: "docked",
                    tHead: i,
                    cellWidths: L,
                    horizontalOffset: K,
                    tableWidth: U,
                    top: Q,
                    width: te,
                    tableStyle: A,
                    isFixedColumn: o,
                    ref: ze,
                    onKeyUp: Me,
                    elementRef: He,
                    hasDragColumn: !!b,
                    hasRowExpansion: _ !== "none",
                    hasRowSelection: !!w
                });
            }
            return false;
        };
        var tt = function e() {
            var t = zt();
            if (!Ze()) {
                return false;
            }
            var n = 0;
            if (ge.current && we.current && Oe.current && we.current) {
                var o, i, a, l;
                var c = t.innerHeight - ((o = Oe.current) === null || o === void 0 ? void 0 : o.getBoundingClientRect().top) - ((i = (a = we.current) === null || a === void 0 ? void 0 : (l = a.getEl()) === null || l === void 0 ? void 0 : l.offsetHeight) !== null && i !== void 0 ? i : 0);
                n = Math.min(c - ge.current.offsetHeight, 0);
            }
            
            return r().createElement(ye, {
                style: {
                    width: te,
                    marginBottom: n
                },
                onScroll: _e,
                "data-test": "docked-scroll-bar",
                ref: ge
            },  r().createElement(be, {
                style: {
                    width: U
                },
                "data-test": "docked-scroll-content"
            }));
        };
        var nt = function e() {
            var t = we.current;
            var n = Re.current;
            /**
     * there is slightly less space for the table than tableContainer's width,
     * because there is a 1 px border added to every column but the first
     */            if (t) {
                var r = t.getCellWidths();
                var o = r.length;
                var i = n === null || n === void 0 ? void 0 : n.clientWidth;
                if (i != null) {
                    var a = Math.max(0, o - 1);
                    return i - a;
                }
            }
            return null;
        };
        var rt;
        var ot;
        var it;
        var at = !!m;
        n.Children.toArray(i).forEach((function(e) {
            var t = e.type.splunkUiType;
            if (t === "Table.Head") {
                rt = Ye(e);
                if (!at) {
                    // if all the HeadCells are fixed width, then the table is fixed.
                    at = !n.Children.toArray(e.props.children).filter(n.isValidElement).some((function(e) {
                        return !f()(e.props, "width");
                    }));
                }
            } else if (t === "Table.Body") {
                ot = Qe(e);
            } else if (t === "Table.Caption") {
                // the html spec mandates that a caption must be the first table child.
                // catch the caption here so that it can be placed first later. note: a
                // caption can be placed on the bottom side of a table by adjusting the
                // caption's side prop.
                it = e;
            }
        }));
        Xi(rt, "A Table.Head is required.");
        var lt = et(rt, at);
 // When a `headTable` is used, suppress focus interactions in the primary `Head`. Focus
        // interactions will be handled by the overlaid `headTable` instead.
                var ct = n.Children.toArray(rt.props.children).filter(n.isValidElement).map((function(e) {
            
            // TS: onClick is different for regular/dropdown head cells, that's ok
            return (0, n.cloneElement)(e, {
                visible: !lt
            });
        }));
        rt =  (0, n.cloneElement)(rt, {}, ct);
        var st = fe || zt();
        var ut = Oa(p) ? Re.current : st;
        if (D) {
            at = false;
        }
        var dt = nt();
        var ft = {
            headType: p,
            resizableFillLayout: D,
            tableContainerWidthWithoutBorders: dt
        };
        var pt = {
            onDragStart: function e(t) {
                var n = t.active.id;
                return (0, T.sprintf)("Picked up sortable row in position %d of %d.", Ia(je, n), je.length);
            },
            onDragOver: function e(t) {
                var n = t.active, r = t.over;
                // In this specific use-case, the picked up item's `id` is always the same as the first `over` id.
                // The first `onDragOver` event therefore doesn't need to be announced, because it is called
                // immediately after the `onDragStart` announcement and is redundant.
                                if (de.current) {
                    de.current = false;
                    return undefined;
                }
                return r ? (0, T.sprintf)("Row moved from position %d to position %d of %d.", Ia(je, n.id), Ia(je, r.id), je.length) : undefined;
            },
            onDragEnd: function e(t) {
                var n = t.over;
                return n ? (0, T.sprintf)("Row dropped at position %d of %d.", Ia(je, n.id), je.length) : undefined;
            },
            onDragCancel: function e(t) {
                var n = t.active.id;
                return (0, T.sprintf)("Row returned to it's starting position of %d.", Ia(je, n));
            }
        };
        
        return r().createElement(pe, ca({
            "data-test": "table",
            ref: d,
            style: S,
            "data-test-row-selection": w ? P : undefined
        }, g()(z, [].concat(sa(Object.keys(xa)), [ "style" ]))),  r().createElement(O(), {
            target: zt(),
            eventType: "scroll",
            listener: Pe,
            options: {
                passive: false,
                capture: true
            }
        }),  r().createElement(k(), {
            handleWidth: true,
            onResize: qe
        }),  r().createElement(on.Provider, {
            value: ft
        }, lt,  r().createElement(ve, {
            onScroll: Te,
            ref: Re,
            style: v
        },  r().createElement(E.ScrollContainerProvider, {
            value: ut
        },  r().createElement(a.DndContext, {
            accessibility: {
                screenReaderInstructions: Ta,
                announcements: pt
            },
            sensors: me,
            onDragEnd: Ge,
            onDragCancel: Xe,
            collisionDetection: a.closestCenter,
            modifiers: Da
        },  r().createElement(l.SortableContext, {
            items: je,
            strategy: l.verticalListSortingStrategy
        },  r().createElement(he, {
            ref: Oe,
            "data-test": "main-table",
            style: A,
            "data-fixed-column": at ? "true" : undefined,
            $resizableFillLayout: D
        }, it, rt, ot))))), tt()));
    }
    Pa.propTypes = xa;
    var qa =  function(e) {
        ea(n, e);
        var t = na(n);
        function n() {
            Qi(this, n);
            return t.apply(this, arguments);
        }
        Zi(n, [ {
            key: "render",
            // @docs-props-type TablePropsBase
            value: function e() {
                
                return r().createElement(Pa, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    la(qa, "propTypes", xa);
    la(qa, "defaultProps", Ca);
    la(qa, "Caption", Se);
    la(qa, "Head", mo);
    la(qa, "HeadCell", In);
    la(qa, "HeadDropdownCell", Go);
    la(qa, "Body", fe);
    la(qa, "Row", Ur);
    la(qa, "Cell", Fe);
    qa.Caption = Se;
    qa.Head = mo;
    qa.HeadCell = In;
    qa.HeadDropdownCell = Go;
    qa.Body = fe;
    qa.Row = Ur;
    qa.Cell = Fe;
    /* harmony default export */    const Aa = qa;
    // CONCATENATED MODULE: ./src/Table/index.ts
    module.exports = t;
    /******/})();