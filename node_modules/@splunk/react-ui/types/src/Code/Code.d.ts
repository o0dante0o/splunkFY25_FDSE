import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
type CodeSupportedLanguages = 'bash' | 'clike' | 'css' | 'html' | 'json' | 'javascript' | 'js' | 'jsx' | 'typescript' | 'ts' | 'tsx' | 'markup' | 'mathml' | 'splunk-spl' | 'svg' | 'xml' | 'yaml' | 'yml';
interface CodePropsBase {
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLPreElement>;
    /**
     * Sets the length of the left-indent. Use only when the value of
     `showIndentGuide` is `true`.
     */
    indentChars?: number;
    /**
     * Applies syntax highlighting for a specific programming language.
     */
    language?: CodeSupportedLanguages;
    /**
     * In cases where `language` is not valid `Code` will use this value as the fallback for `language`.
     */
    languageFallback?: CodeSupportedLanguages;
    /**
     * Displays the indent guideline.
     */
    showIndentGuide?: boolean;
    /**
     * Inserts code content into the code block.
     */
    value?: string;
}
type CodeProps = ComponentProps<CodePropsBase, 'pre'>;
declare function Code({ elementRef, indentChars, language, languageFallback, showIndentGuide, value, ...otherProps }: CodeProps): JSX.Element;
declare namespace Code {
    var propTypes: {
        elementRef: PropTypes.Requireable<object>;
        indentChars: PropTypes.Requireable<number>;
        language: PropTypes.Requireable<string>;
        languageFallback: PropTypes.Requireable<string>;
        showIndentGuide: PropTypes.Requireable<boolean>;
        value: PropTypes.Requireable<string>;
    };
}
export default Code;
