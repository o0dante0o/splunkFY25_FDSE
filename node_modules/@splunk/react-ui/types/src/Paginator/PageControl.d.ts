import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
/** @public */
type PaginatorPageControlChangeHandler = (event: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<HTMLInputElement>, data: {
    page: number;
}) => void;
interface PaginatorPageControlPropsBase {
    /**
     * Currently selected page.
     */
    current?: number;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLElement>;
    /**
     * Callback to handle page change.
     */
    onChange?: PaginatorPageControlChangeHandler;
    /**
     * The total number of pages.
     */
    totalPages: number;
}
type PageControlProps = ComponentProps<PaginatorPageControlPropsBase, 'nav'>;
declare function PageControl({ onChange, current, totalPages, ...otherProps }: PageControlProps): JSX.Element;
declare namespace PageControl {
    var propTypes: {
        elementRef: PropTypes.Requireable<object>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        current: PropTypes.Requireable<number>;
        totalPages: PropTypes.Requireable<number>;
    };
}
export default PageControl;
export type { PaginatorPageControlChangeHandler };
