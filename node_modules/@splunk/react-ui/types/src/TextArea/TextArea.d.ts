import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { ControlGroupContext } from '@splunk/react-ui/ControlGroup';
import { AnyTheme } from '@splunk/themes';
import { ClassComponentProps } from '../utils/types';
/** @public */
type TextAreaChangeHandler = (event: React.ChangeEvent<HTMLTextAreaElement> | React.MouseEvent<HTMLSpanElement>, data: {
    name?: string;
    value: string;
}) => void;
/** @public */
type TextAreaBlurHandler = (event: React.FocusEvent<HTMLTextAreaElement>, data: {
    name?: string;
    value: string;
}) => void;
/** @public */
type TextAreaFocusHandler = (event: React.FocusEvent<HTMLTextAreaElement>, data: {
    name?: string;
    value: string;
}) => void;
interface TextAreaPropsBase {
    /**
     * @deprecated The `search` appearance has been marked for deprecation and will be removed in a future major version.
     *
     * Setting the appearance to search will create a rounded input.
     * @private.
     */
    appearance?: 'default' | 'search';
    /** Append removes rounded borders and the border from the right side. */
    append?: boolean;
    /**
     * Control the browser's automatic capitalization functionality.
     * Note: Doesn't apply to physical keyboard input.
     * Examples: 'on', 'off', 'sentences', 'words, 'characters'.
     */
    autoCapitalize?: string;
    /**
     * Control the browser's autofill functionality.
     * See [the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute) for details.
     * Examples: 'on', 'off', 'cc-name', 'shipping street-address'.
     */
    autoComplete?: string;
    /** Set the input's autocorrect attribute. Only supported by Safari. See also `spellCheck`. */
    autoCorrect?: string;
    /** Specify that the input should request focus when mounted. */
    autoFocus?: boolean;
    /**
     * @deprecated This prop has been marked for deprecation and will be removed in a future major version.
     *
     * Include an "X" button to clear the value.
     * */
    canClear?: boolean;
    children?: React.ReactNode;
    /** @private. */
    classNamePrivate?: string;
    /**
     * Set this property instead of value to make value uncontrolled. */
    defaultValue?: string;
    /**
     * The id of the description. When placed in a ControlGroup, this is automatically set to the
     * ControlGroup's help component.
     */
    describedBy?: string;
    /** Determines whether or not the input is editable. */
    disabled?: boolean;
    /**
     * A React ref which is set to the DOM element when the component mounts, and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /**
     * Adornment after the input.
     */
    endAdornment?: React.ReactNode;
    /**
     * Highlight the field as having an error. The border and text will turn red.
     */
    error?: boolean;
    /** When false, display as inline-block with the default width. */
    inline?: boolean;
    /** @private. */
    inputClassName?: string;
    /**
     * An id for the input, which may be necessary for accessibility, such as for aria
     * attributes.
     */
    inputId?: string;
    /**
     * A React ref which is set to the input element when the component mounts and null when it unmounts.
     */
    inputRef?: React.Ref<HTMLInputElement | HTMLTextAreaElement>;
    /**
     * The id of the label. When placed in a ControlGroup, this is automatically set to the
     * ControlGroup's label.
     */
    labelledBy?: string;
    /** Set the input's maxlength attribute. */
    maxLength?: number;
    /** The name is returned with onChange events, which can be used to identify the
     * control when multiple controls share an onChange callback. */
    name?: string;
    /** A callback for when the input loses focus. */
    onBlur?: TextAreaBlurHandler;
    /**
     * This is equivalent to onInput which is called on keydown, paste, and so on.
     * If value is set, this callback is required. This must set the value prop to retain the
     * change.
     */
    onChange?: TextAreaChangeHandler;
    /** A callback for when the input takes focus. */
    onFocus?: TextAreaFocusHandler;
    /** A keydown callback can be used to prevent a certain input by utilizing the event argument. */
    onKeyDown?: React.KeyboardEventHandler<HTMLTextAreaElement>;
    /** A callback for when the text selection or cursor position changes. */
    onSelect?: React.ReactEventHandler<HTMLTextAreaElement>;
    /** A callback for when the user clicks the textbox.
     * This will only trigger when the textbox itself is clicked and will not trigger for other parts of the component,
     * such as the clear button or nodes added via "startAdornment" or "endAdornment" props.
     * If you want to handle all click events, pass the "onClick" prop, which will be attached to `TextArea`'s root element.
     */
    onInputClick?: React.MouseEventHandler<HTMLTextAreaElement>;
    /**
     * @deprecated This prop is deprecated and will be removed in the next major version.
     *
     * The gray text shown when the input is empty.
     */
    placeholder?: string;
    /** Prepend removes rounded borders from the left side. */
    prepend?: boolean;
    /** @private. */
    required?: boolean;
    /** Maximum number of rows to display */
    rowsMax?: number;
    /** Minimum number of rows to display */
    rowsMin?: number;
    /** Control the browser's spelling and grammar checking functionality. */
    spellCheck?: boolean;
    /** @private */
    splunkTheme: AnyTheme;
    /**
     * Adornment in front of the input.
     */
    startAdornment?: React.ReactNode;
    tabIndex?: number;
    /**
     * The contents of the input. Setting this value makes the property controlled. A callback
     * is required. */
    value?: string;
}
declare const defaultProps: Required<Pick<TextAreaPropsBase, 'appearance' | 'append' | 'autoFocus' | 'canClear' | 'disabled' | 'error' | 'inline' | 'placeholder' | 'prepend' | 'rowsMax' | 'rowsMin' | 'tabIndex'>>;
interface TextAreaPropsBaseControlled extends TextAreaPropsBase {
    defaultValue?: never;
    onChange: TextAreaChangeHandler;
    value?: string;
}
interface TextAreaPropsBaseUncontrolled extends TextAreaPropsBase {
    defaultValue?: string;
    value?: never;
}
type TextAreaProps = ClassComponentProps<TextAreaPropsBaseControlled | TextAreaPropsBaseUncontrolled, typeof defaultProps, 'div'>;
interface TextAreaState {
    height?: number;
    value: string;
    startAdornmentWidth?: number;
    endAdornmentWidth?: number;
}
/** Note: TextArea places role and aria props onto the input. All other props are placed on the wrapper. */
declare class TextArea extends Component<TextAreaProps, TextAreaState> {
    private controlledExternally;
    private input;
    private shadow;
    private startAdornment;
    private endAdornment;
    static propTypes: React.WeakValidationMap<TextAreaProps>;
    static defaultProps: Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">>;
    static componentType: string;
    context: React.ContextType<typeof ControlGroupContext>;
    static contextType: React.Context<import("../ControlGroup/ControlGroupContext").ControlGroupContextValue>;
    static validateRows({ rowsMin, rowsMax }: TextAreaProps): void;
    constructor(props: Readonly<TextAreaProps>);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Readonly<TextAreaProps>): void;
    private getAdornmentWidth;
    private handleResize;
    private handleInputMount;
    private handleShadowMount;
    private handleInputChange;
    private handleInputKeyDown;
    private handleInputSelect;
    private handleInputClick;
    private handleInputFocus;
    private handleInputBlur;
    private handleClear;
    private syncHeightWithShadow;
    private isControlled;
    private renderAdornment;
    private renderEndAdornment;
    private renderStartAdornment;
    private getDisplayValue;
    blur(): void;
    /**
     * Place focus on the input.
     */
    focus(): void;
    select(): void;
    render(): JSX.Element;
}
declare const TextAreaWithTheme: React.ForwardRefExoticComponent<Omit<Pick<Pick<TextAreaPropsBaseControlled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, "slot" | "style" | "title" | "onPause" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocusCapture" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "translate" | "radioGroup" | "about" | "datatype" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | keyof TextAreaPropsBaseControlled> & Pick<PropTypes.InferProps<React.WeakValidationMap<TextAreaProps>>, "inlist"> & Pick<TextAreaPropsBaseControlled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, never>, "slot" | "style" | "title" | "children" | "value" | "onChange" | "onPause" | "name" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoComplete" | "maxLength" | "required" | "elementRef" | "splunkTheme" | "inputId" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "inputClassName" | "onInputClick"> & Partial<Pick<Pick<TextAreaPropsBaseControlled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, "slot" | "style" | "title" | "onPause" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocusCapture" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "translate" | "radioGroup" | "about" | "datatype" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | keyof TextAreaPropsBaseControlled> & Pick<PropTypes.InferProps<React.WeakValidationMap<TextAreaProps>>, "inlist"> & Pick<TextAreaPropsBaseControlled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, never>, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Partial<Pick<Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">>, never>> & {
    ref?: React.Ref<TextArea> | undefined;
}, "splunkTheme"> | Omit<Pick<Pick<TextAreaPropsBaseUncontrolled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, "slot" | "style" | "title" | "onPause" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocusCapture" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "translate" | "radioGroup" | "about" | "datatype" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | keyof TextAreaPropsBaseUncontrolled> & Pick<PropTypes.InferProps<React.WeakValidationMap<TextAreaProps>>, "inlist"> & Pick<TextAreaPropsBaseUncontrolled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, never>, "slot" | "style" | "title" | "children" | "value" | "onChange" | "onPause" | "name" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "spellCheck" | "translate" | "radioGroup" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "autoComplete" | "maxLength" | "required" | "elementRef" | "splunkTheme" | "inputId" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "inputClassName" | "onInputClick"> & Partial<Pick<Pick<TextAreaPropsBaseUncontrolled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, "slot" | "style" | "title" | "onPause" | "className" | "color" | "id" | "lang" | "role" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocusCapture" | "onBlurCapture" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "key" | "defaultChecked" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "translate" | "radioGroup" | "about" | "datatype" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoSave" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | keyof TextAreaPropsBaseUncontrolled> & Pick<PropTypes.InferProps<React.WeakValidationMap<TextAreaProps>>, "inlist"> & Pick<TextAreaPropsBaseUncontrolled & Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref" | "children" | "value" | "onChange" | "name" | "tabIndex" | "onFocus" | "onBlur" | "onKeyDown" | "onSelect" | "defaultValue" | "placeholder" | "spellCheck" | "autoCapitalize" | "autoCorrect" | "autoFocus" | "disabled" | "autoComplete" | "maxLength" | "required" | "appearance" | "inline" | "css" | "elementRef" | "error" | "splunkTheme" | "inputId" | "append" | "prepend" | "classNamePrivate" | "inputRef" | "labelledBy" | "endAdornment" | "startAdornment" | "describedBy" | "rowsMax" | "rowsMin" | "canClear" | "inputClassName" | "onInputClick">, never>, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">> & Partial<Pick<Required<Pick<TextAreaPropsBase, "tabIndex" | "placeholder" | "autoFocus" | "disabled" | "appearance" | "inline" | "error" | "append" | "prepend" | "rowsMax" | "rowsMin" | "canClear">>, never>> & {
    ref?: React.Ref<TextArea> | undefined;
}, "splunkTheme">> & {
    componentType: string;
};
export default TextAreaWithTheme;
export type { TextArea as TextAreaWithoutTheme };
export { TextAreaBlurHandler, TextAreaChangeHandler, TextAreaFocusHandler };
export type { TextAreaPropsBase, TextAreaPropsBaseControlled, TextAreaPropsBaseUncontrolled };
