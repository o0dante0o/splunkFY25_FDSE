/**
 * Given component children, restructure them into an array of arrays, each of length `groupSize`.
 *
 * The last array is not guaranteed to be full, it will have a length in the range `[1, groupSize]`
 *
 * @example
 * ```js
 * groupChildren([1, 2, 3, 4, 5, 6, 7], 2);
 * // > [[1, 2], [3, 4], [5, 6], [7]]
 * ```
 * @param {Array} children One node, or an array of nodes, to be divided into groups
 * @param {number} groupSize The size of each group to be created
 * @returns A 2d array where each inner-array is a group of size `groupSize` of children
 * and the order of the `children` received equals the order of the flattened result
 */
export declare const groupChildren: (children: React.ReactNode | React.ReactNode[], groupSize: number) => React.ReactNode[][];
