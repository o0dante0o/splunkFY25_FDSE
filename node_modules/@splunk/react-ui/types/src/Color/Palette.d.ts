import React from 'react';
import Clickable from '@splunk/react-ui/Clickable';
interface PaletteProps {
    /**
     * In the prisma theme, controls if the palette is expanded
     */
    expanded: boolean;
    /**
     * Complete list of palettes values to be rendered as swatches
     * In enterprise themes this list is always shown.
     * In prisma themes the entire list is only shown when the palette is `expanded`
     */
    palette: (string | null)[];
    /**
     * Current value of the Color input
     */
    value?: string | null;
    /**
     * This ref is passed to the swatch that should be focused for Color to control focus
     */
    swatchToFocusRef: React.RefObject<Clickable & HTMLInputElement> | null;
    /**
     * Callback for handling when a swatch is selected
     */
    onSwatchClick: (event: React.MouseEvent<HTMLButtonElement>, data: {
        value?: string | null;
    }) => void;
    /**
     * ref for the expandButton so Color can control the state
     */
    expandButtonRef: React.RefObject<Clickable> | null;
    /**
     * Callback for handling when the expand button is pressed
     */
    onPaletteExpand: (event: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => void;
    /**
     * Render function for injecting the toolbar and input below the rendered swatches
     */
    renderInput?: () => JSX.Element;
    /**
     * Callback for handling activation of the system color picker, only used in prisma themes.
     */
    onSystemColorPickerChange: (event: React.ChangeEvent<HTMLInputElement>) => void;
}
declare function Palette({ expanded, palette, value, swatchToFocusRef, onSwatchClick, expandButtonRef, onPaletteExpand, onSystemColorPickerChange, renderInput, }: PaletteProps): JSX.Element;
export default Palette;
