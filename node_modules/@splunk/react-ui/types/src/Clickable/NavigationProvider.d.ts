import React from 'react';
import PropTypes from 'prop-types';
/** @public */
type NavigationProviderClickHandler = (event: React.MouseEvent<HTMLAnchorElement>, data: {
    openInNewContext?: boolean;
    to: string;
    originalTo: string;
    label?: string;
}) => void;
type NavigationProviderTransformUrl = (url: string, data: {
    isInternal?: boolean;
    isRootRelative?: boolean;
}) => string;
interface NavigationProviderPropsBase {
    children?: React.ReactNode;
    /**
     * An `onClick` handler to use when a link is clicked if no other `onClick` handler is supplied.
     * The function takes the event and an options argument with `to` and `openInNewContext`
     */
    onClick?: NavigationProviderClickHandler;
    /**
     * Triggers when a link is clicked, even if the link has its own `onClick` handler.
     * The function takes the event and an options argument with `to` and `openInNewContext`
     */
    onLinkClick?: NavigationProviderClickHandler;
    /**
     * @deprecated Use the `transformUrl` prop instead.
     * If set, all links that use the NavigationProvider's context will have this prepended to them.
     * This is ignored if `transformUrl` is set.
     */
    prefix?: string;
    /**
     * If set, all links that use the NavigationProvider's context will be transformed using this function.
     */
    transformUrl?: NavigationProviderTransformUrl;
}
interface NavigationProviderPropsWithPrefix extends NavigationProviderPropsBase {
    prefix?: never;
    transformUrl?: NavigationProviderTransformUrl;
}
interface NavigationProviderPropsWithoutPrefix extends NavigationProviderPropsBase {
    prefix?: string;
    transformUrl?: never;
}
type NavigationContextValue = {
    onClick?: NavigationProviderClickHandler;
    onLinkClick?: NavigationProviderClickHandler;
    prefix?: string;
    transformUrl?: NavigationProviderTransformUrl;
};
declare const NavigationContext: React.Context<NavigationContextValue>;
type NavigationProviderProps = NavigationProviderPropsWithPrefix | NavigationProviderPropsWithoutPrefix;
/**
 * Used to provide an override for the `onClick` for links for single page applications so that
 * internal links can navigate without a page reload.
 */
declare function NavigationProvider({ children, onClick, onLinkClick, prefix, transformUrl, }: NavigationProviderProps): JSX.Element;
declare namespace NavigationProvider {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        onLinkClick: PropTypes.Requireable<(...args: any[]) => any>;
        prefix: PropTypes.Requireable<string>;
        transformUrl: PropTypes.Requireable<(...args: any[]) => any>;
    };
}
export { NavigationContext, NavigationProvider, NavigationProviderClickHandler, NavigationProviderTransformUrl, };
