import React from 'react';
import { UpdateNameCallbackHandler, UpdateValueCallbackHandler } from './DualListboxContext';
export type OptionClickHandler = (event: React.MouseEvent<HTMLLIElement>, data: {
    value: string;
    name?: string;
}) => void;
export type GetOptionStateHandler = (value: string) => {
    active: boolean;
    selected: boolean;
};
export type GetLabelStateHandler = () => {
    disabled: boolean;
    selected: boolean | 'some';
    selectedValueCount: number;
    valueCount: number;
};
export interface ListboxContextValue {
    controlled?: boolean;
    onOptionClick?: OptionClickHandler;
    getLabelState?: GetLabelStateHandler;
    getOptionStateForValue?: GetOptionStateHandler;
    updateLabelRefreshHookByName?: UpdateNameCallbackHandler;
    updateOptionRefreshHookByValue?: UpdateValueCallbackHandler;
}
/**
 * A React context used to inform subcomponets of Listbox of parent component values.
 * The context interface is `ListboxContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
declare const ListboxContext: React.Context<ListboxContextValue>;
export default ListboxContext;
