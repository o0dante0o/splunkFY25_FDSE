import React from 'react';
import { ComponentProps } from '../utils/types';
type OptionClickHandler = (event: React.MouseEvent<HTMLLIElement>, data: {
    value: string;
}) => void;
interface OptionPropsBase {
    /**
     * The id used for accessibility labelling.
     */
    id: string;
    /**
     * The display of this option, used in key matching.
     */
    label: string;
    /**
     * Parent list `name` associated to option.
     * Used in intial state and controlled variants.
     */
    listName?: string;
    /**
     * When true, applies visual and assistive selected state.
     */
    selected?: boolean;
    /**
     * The value of this option, returned in events.
     */
    value: string;
}
type OptionProps = ComponentProps<OptionPropsBase, 'li'>;
declare function Option({ id, label, selected: selectedProp, value, ...otherProps }: OptionProps): JSX.Element | null;
declare namespace Option {
    var propTypes: React.WeakValidationMap<OptionPropsBase>;
}
export default Option;
export { OptionClickHandler };
