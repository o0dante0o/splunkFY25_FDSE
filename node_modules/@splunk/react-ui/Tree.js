/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 3563: 
        /***/ e => {
            e.exports = require("@splunk/themes");
            /***/        },
        /***/ 5295: 
        /***/ e => {
            e.exports = require("@splunk/ui-utils/keyboard");
            /***/        },
        /***/ 23: 
        /***/ e => {
            e.exports = require("prop-types");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/        },
        /***/ 232: 
        /***/ e => {
            e.exports = require("styled-components");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var r = {};
    /******/
    /******/ // The require function
    /******/    function t(n) {
        /******/ // Check if module is in cache
        /******/ var o = r[n];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var a = r[n] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[n](a, a.exports, t);
        /******/
        /******/ // Return the exports of the module
        /******/        return a.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ t.n = e => {
            /******/ var r = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            t.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ t.d = (e, r) => {
            /******/ for (var n in r) {
                /******/ if (t.o(r, n) && !t.o(e, n)) {
                    /******/ Object.defineProperty(e, n, {
                        enumerable: true,
                        get: r[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ t.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ t.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var n = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        t.r(n);
        // EXPORTS
                t.d(n, {
            TreeItem: () => /* reexport */ A,
            default: () => /* reexport */ re
        });
        // EXTERNAL MODULE: external "react"
                var e = t(9497);
        var r =  t.n(e);
        // EXTERNAL MODULE: external "prop-types"
                var o = t(23);
        var a =  t.n(o);
        // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                var i = t(5295);
        // CONCATENATED MODULE: ./src/Tree/TreeContext.tsx
        var u =  (0, e.createContext)({
            defaultIndent: true
        });
        /* harmony default export */        const l = u;
        // EXTERNAL MODULE: external "styled-components"
                var f = t(232);
        var c =  t.n(f);
        // EXTERNAL MODULE: external "@splunk/themes"
                var d = t(3563);
        // CONCATENATED MODULE: ./src/Tree/TreeItemStyles.ts
        var v = c().span.withConfig({
            displayName: "TreeItemStyles__StyledTreeItemContent",
            componentId: "ie7zrw-0"
        })([ "font-family:inherit;" ]);
        var s = c().span.withConfig({
            displayName: "TreeItemStyles__StyledTreeItemNode",
            componentId: "ie7zrw-1"
        })([ "&:focus{box-shadow:", ";outline:0;&:active{box-shadow:none;}}" ], d.variables.focusShadow);
        // CONCATENATED MODULE: ./src/Tree/TreeStyles.ts
        var p = c().ul.withConfig({
            displayName: "TreeStyles__StyledUnorderedList",
            componentId: "sc-13pokwt-0"
        })([ "", ";font-family:inherit;list-style:none;white-space:inherit;", ";" ], d.mixins.reset("ul"), (function(e) {
            var r = e.$defaultIndent;
            return r && (0, f.css)([ "padding-left:", ";" ], d.variables.spacingXXXLarge);
        }));
        // CONCATENATED MODULE: ./src/Tree/TreeItem.tsx
        function y() {
            y = Object.assign || function(e) {
                for (var r = 1; r < arguments.length; r++) {
                    var t = arguments[r];
                    for (var n in t) {
                        if (Object.prototype.hasOwnProperty.call(t, n)) {
                            e[n] = t[n];
                        }
                    }
                }
                return e;
            };
            return y.apply(this, arguments);
        }
        function m(e, r) {
            return w(e) || I(e, r) || g(e, r) || b();
        }
        function b() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function g(e, r) {
            if (!e) return;
            if (typeof e === "string") return h(e, r);
            var t = Object.prototype.toString.call(e).slice(8, -1);
            if (t === "Object" && e.constructor) t = e.constructor.name;
            if (t === "Map" || t === "Set") return Array.from(e);
            if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return h(e, r);
        }
        function h(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var t = 0, n = new Array(r); t < r; t++) {
                n[t] = e[t];
            }
            return n;
        }
        function I(e, r) {
            if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
            var t = [];
            var n = true;
            var o = false;
            var a = undefined;
            try {
                for (var i = e[Symbol.iterator](), u; !(n = (u = i.next()).done); n = true) {
                    t.push(u.value);
                    if (r && t.length === r) break;
                }
            } catch (e) {
                o = true;
                a = e;
            } finally {
                try {
                    if (!n && i["return"] != null) i["return"]();
                } finally {
                    if (o) throw a;
                }
            }
            return t;
        }
        function w(e) {
            if (Array.isArray(e)) return e;
        }
        function S(e, r) {
            if (e == null) return {};
            var t = O(e, r);
            var n, o;
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (o = 0; o < a.length; o++) {
                    n = a[o];
                    if (r.indexOf(n) >= 0) continue;
                    if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                    t[n] = e[n];
                }
            }
            return t;
        }
        function O(e, r) {
            if (e == null) return {};
            var t = {};
            var n = Object.keys(e);
            var o, a;
            for (a = 0; a < n.length; a++) {
                o = n[a];
                if (r.indexOf(o) >= 0) continue;
                t[o] = e[o];
            }
            return t;
        }
        var j = {
            id: a().string,
            children: a().node,
            content: a().node,
            customIndent: a().node,
            endAdornment: a().node,
            labelledBy: a().string,
            onFocus: a().func,
            onKeyDown: a().func,
            onToggle: a().func,
            open: a().bool,
            toggle: a().node
        };
        function x(t) {
            var n = t.id, o = t.children, a = t.content, i = t.customIndent, u = t.endAdornment, f = t.labelledBy, c = t.onFocus, d = t.onKeyDown, b = t.onToggle, g = t.open, h = g === void 0 ? true : g, I = t.toggle, w = S(t, [ "id", "children", "content", "customIndent", "endAdornment", "labelledBy", "onFocus", "onKeyDown", "onToggle", "open", "toggle" ]);
            var O = (0, e.useContext)(l), j = O.defaultIndent, x = j === void 0 ? true : j, A = O.onItemKeyDown, k = O.onItemClick, E = O.removeNode, T = O.setNode, P = O.itemPaths, C = O.focusedItemId;
            var D = (0, e.useState)(h), _ = m(D, 2), N = _[0], $ = _[1];
 // make first tree item tabbable
                        var K = (0, e.useState)((P === null || P === void 0 ? void 0 : P.get("".concat(n))) === "0" ? 0 : -1), M = m(K, 2), F = M[0], q = M[1];
            var B = (0, e.useRef)(null);
            var U = (0, e.useRef)(null);
            var X = e.Children.toArray(o).filter(e.isValidElement);
            X.forEach((function(e, r) {
                if (e.props.id) {
                    if (N && T) {
                        T("".concat(e.props.id), "".concat(P === null || P === void 0 ? void 0 : P.get("".concat(n)), "-").concat(r));
                    } else if (E) {
                        E(e.props.id);
                    }
                }
            }));
            var z = function e(r, t) {
                $(r);
                b === null || b === void 0 ? void 0 : b(r, t);
            };
            var L = function e(r) {
                k === null || k === void 0 ? void 0 : k(r, n);
            };
            var R = function e(r) {
                var t;
                r.stopPropagation();
                B === null || B === void 0 ? void 0 : (t = B.current) === null || t === void 0 ? void 0 : t.focus();
                c === null || c === void 0 ? void 0 : c(r);
            };
            var V = function e() {
                if ((P === null || P === void 0 ? void 0 : P.get("".concat(n))) === "0") {
                    q(0);
                }
            };
            (0, e.useEffect)((function() {
                if (C === n) {
                    var e;
                    U === null || U === void 0 ? void 0 : (e = U.current) === null || e === void 0 ? void 0 : e.focus();
                }
            }), [ C, U ]);
            var G = function e(r) {
                r.stopPropagation();
            };
            var H = function e(r) {
                r.stopPropagation();
 // Used to ensure first item in Tree is tab navigable, i.e. in JSONTree when focus is manually set to the root item,
                // this allows user to tab backwards to previous item. Tab index is reset to 0 onBlur.
                                if (r.shiftKey && r.key === "Tab" && (P === null || P === void 0 ? void 0 : P.get("".concat(n))) === "0") {
                    q(-1);
                }
                A === null || A === void 0 ? void 0 : A(r, n, N, X, z);
                d === null || d === void 0 ? void 0 : d(r);
            };
            var J = function r() {
                if (!I) {
                    return undefined;
                }
                
                return (0, e.cloneElement)(I, {
                    onClick: function e(r) {
                        var t, n;
                        z(!N, r);
                        L(r);
                        (t = (n = I.props).onClick) === null || t === void 0 ? void 0 : t.call(n, r);
                    },
                    "aria-expanded": N
                });
            };
            
            return r().createElement("li", y({}, w, {
                ref: U,
                tabIndex: F,
                onBlur: V,
                onFocus: R,
                onKeyDown: H,
                role: "treeitem",
                "aria-labelledby": f,
                "aria-expanded": X.length ? N : undefined
            }), i,  r().createElement(s, {
                ref: B,
                tabIndex: -1,
                onFocus: G,
                onClick: L
            },  r().createElement(v, null, a), J(), !N && u), N &&  r().createElement(r().Fragment, null,  r().createElement(p, {
                role: "group",
                $defaultIndent: x
            }, o), u));
        }
        x.propTypes = j;
        /* harmony default export */        const A = x;
        // CONCATENATED MODULE: ./src/Tree/treeUtils.ts
        function k(e, r) {
            return D(e) || C(e, r) || T(e, r) || E();
        }
        function E() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function T(e, r) {
            if (!e) return;
            if (typeof e === "string") return P(e, r);
            var t = Object.prototype.toString.call(e).slice(8, -1);
            if (t === "Object" && e.constructor) t = e.constructor.name;
            if (t === "Map" || t === "Set") return Array.from(e);
            if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return P(e, r);
        }
        function P(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var t = 0, n = new Array(r); t < r; t++) {
                n[t] = e[t];
            }
            return n;
        }
        function C(e, r) {
            if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
            var t = [];
            var n = true;
            var o = false;
            var a = undefined;
            try {
                for (var i = e[Symbol.iterator](), u; !(n = (u = i.next()).done); n = true) {
                    t.push(u.value);
                    if (r && t.length === r) break;
                }
            } catch (e) {
                o = true;
                a = e;
            } finally {
                try {
                    if (!n && i["return"] != null) i["return"]();
                } finally {
                    if (o) throw a;
                }
            }
            return t;
        }
        function D(e) {
            if (Array.isArray(e)) return e;
        }
        /**
 * A helper function to get first key in Map that matches given value
 */        function _(e, r) {
            var t;
            var n = Array.from(e.entries());
            return (t = n.find((function(e) {
                var t = k(e, 2), n = t[1];
                return n === r;
            }))) === null || t === void 0 ? void 0 : t[0];
        }
        /**
 * A helper function to get parent path of current item path
 */        function N(e) {
            // remove last index number of the current item path string to get parent
            return e.split("-").slice(0, -1).join("-");
        }
        /**
 * A helper function to get next path of current item path in same level
 */        function $(e, r) {
            return e === null || e === void 0 ? void 0 : e.replace(/([^-]*)$/, "".concat(r + 1));
        }
        /**
 * A helper function to get the last index number of an item path string
 */        function K(e) {
            var r = e.split("-").pop();
            if (!r) {
                return 0;
            }
            return parseInt(r, 10) || 0;
        }
        function M(e, r) {
            var t = e.get(r);
            if (!t) {
                return r;
            }
            var n = N(t);
            return _(e, n) || r;
        }
        /**
 * A helper function for getNextTreeItem
 */        function F(e, r) {
            var t = N(r);
            if (!t) {
                return _(e, r);
            }
 // get next node in the parent level
                        var n = K(t);
            var o = $(t, n);
            var a = _(e, o);
            if (a) {
                return a;
            }
 // continue getting parents until find next node or reach root
                        return F(e, o);
        }
        function q(e, r) {
            var t = e.get(r);
            if (!t) {
                return r;
            }
 // case where next tree item is the first visible child
                        var n = _(e, "".concat(t, "-0"));
            if (n) {
                return n;
            }
 // case where next tree item is the next node in the same level
                        var o = K(t);
            var a = $(t, o);
            var i = _(e, a);
            if (i) {
                return i;
            }
 // case where next tree item is a higher level or does not exist
                        return F(e, t) || r;
        }
        /**
 * A helper function for getPrevTreeItem
 */        function B(e, r) {
            var t = _(e, "".concat(r, "-0"));
            if (!t) {
                return _(e, r);
            }
            var n = _(e, r);
            var o = "".concat(r, "-0");
 // get the last child in current node, and continue to find its children recursively
                        while (n) {
                var a = K(o);
                var i = $(o, a);
                n = _(e, i);
                if (n) {
                    o = i;
                }
            }
            return B(e, o);
        }
        function U(e, r) {
            var t = e.get(r);
            if (!t) {
                return r;
            }
            var n = K(t);
 // case where current is first child of parent or root item
                        if (n === 0) {
                return M(e, r);
            }
 // case where previous tree item is or is a child of previous node in same level
                        var o = t.replace(/[^-]+$/, "".concat(n - 1));
            return B(e, o) || r;
        }
        function X(e) {
            return _(e, "0");
        }
        function z(e) {
            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "0";
            var t = _(e, r);
            var n = r;
 // find last child in current node
                        while (t) {
                var o = K(n);
                t = _(e, $(n, o));
                if (t) {
                    n = $(n, o);
                }
            }
 // check if last child has children
                        var a = _(e, "".concat(n, "-0"));
            if (!a) {
                return _(e, n);
            }
 // continue to find its last child recursively
                        n = "".concat(n, "-0");
            return z(e, n);
        }
        // CONCATENATED MODULE: ./src/Tree/Tree.tsx
        function L() {
            L = Object.assign || function(e) {
                for (var r = 1; r < arguments.length; r++) {
                    var t = arguments[r];
                    for (var n in t) {
                        if (Object.prototype.hasOwnProperty.call(t, n)) {
                            e[n] = t[n];
                        }
                    }
                }
                return e;
            };
            return L.apply(this, arguments);
        }
        function R(e, r) {
            return Q(e) || J(e, r) || G(e, r) || V();
        }
        function V() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function G(e, r) {
            if (!e) return;
            if (typeof e === "string") return H(e, r);
            var t = Object.prototype.toString.call(e).slice(8, -1);
            if (t === "Object" && e.constructor) t = e.constructor.name;
            if (t === "Map" || t === "Set") return Array.from(e);
            if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return H(e, r);
        }
        function H(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var t = 0, n = new Array(r); t < r; t++) {
                n[t] = e[t];
            }
            return n;
        }
        function J(e, r) {
            if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
            var t = [];
            var n = true;
            var o = false;
            var a = undefined;
            try {
                for (var i = e[Symbol.iterator](), u; !(n = (u = i.next()).done); n = true) {
                    t.push(u.value);
                    if (r && t.length === r) break;
                }
            } catch (e) {
                o = true;
                a = e;
            } finally {
                try {
                    if (!n && i["return"] != null) i["return"]();
                } finally {
                    if (o) throw a;
                }
            }
            return t;
        }
        function Q(e) {
            if (Array.isArray(e)) return e;
        }
        function W(e, r) {
            if (e == null) return {};
            var t = Y(e, r);
            var n, o;
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (o = 0; o < a.length; o++) {
                    n = a[o];
                    if (r.indexOf(n) >= 0) continue;
                    if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                    t[n] = e[n];
                }
            }
            return t;
        }
        function Y(e, r) {
            if (e == null) return {};
            var t = {};
            var n = Object.keys(e);
            var o, a;
            for (a = 0; a < n.length; a++) {
                o = n[a];
                if (r.indexOf(o) >= 0) continue;
                t[o] = e[o];
            }
            return t;
        }
        var Z = {
            children: a().node,
            defaultIndent: a().bool
        };
        function ee(t) {
            var n = t.children, o = t.defaultIndent, a = o === void 0 ? true : o, u = W(t, [ "children", "defaultIndent" ]);
            var f = (0, e.useState)(), c = R(f, 2), d = c[0], v = c[1];
            var s = new Map;
            var y = function e(r, t, n, o, a) {
                var u = (0, i.keycode)(r.nativeEvent);
                r.stopPropagation();
                switch (u) {
                  case "up":
                    r.preventDefault();
                    v(U(s, t));
                    break;

                  case "down":
                    r.preventDefault();
                    v(q(s, t));
                    break;

                  case "left":
                    r.preventDefault();
                    if (n && (o === null || o === void 0 ? void 0 : o.length)) {
                        a(false, r);
                    } else {
                        v(M(s, t));
                    }
                    break;

                  case "right":
                    r.preventDefault();
                    if (n && (o === null || o === void 0 ? void 0 : o.length)) {
                        v(q(s, t));
                    } else {
                        a(true, r);
                    }
                    break;

                  case "home":
                    r.preventDefault();
                    v(X(s));
                    break;

                  case "end":
                    r.preventDefault();
                    v(z(s));
                    break;

                  default:
 // do nothing
                                }
            };
            var m = function e(r, t) {
                r.preventDefault();
                v(t);
            };
            var b = function e(r) {
                s["delete"](r);
            };
            var g = function e(r, t) {
                s.set(r, t);
            };
            var h = e.Children.toArray(n).filter(e.isValidElement);
            h.forEach((function(e, r) {
                if (e.props.id && g) {
                    g("".concat(e.props.id), "".concat(r));
                }
            }));
            
            return r().createElement(l.Provider, {
                value: {
                    defaultIndent: a,
                    onItemKeyDown: y,
                    onItemClick: m,
                    removeNode: b,
                    setNode: g,
                    itemPaths: s,
                    focusedItemId: d
                }
            },  r().createElement(p, L({
                role: "tree",
                $defaultIndent: a
            }, u), n));
        }
        ee.propTypes = Z;
        ee.TreeItem = A;
        /* harmony default export */        const re = ee;
    }) // CONCATENATED MODULE: ./src/Tree/index.ts
    ();
    module.exports = n;
    /******/})();