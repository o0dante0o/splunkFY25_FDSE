/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var a in n) {
                /******/ if (e.o(n, a) && !e.o(t, a)) {
                    /******/ Object.defineProperty(t, a, {
                        enumerable: true,
                        get: n[a]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        DateWithoutTheme: () => /* reexport */ Y,
        default: () => /* reexport */ N
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var a =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var r =  e.n(o);
    // CONCATENATED MODULE: external "lodash/has"
    const l = require("lodash/has");
    var i =  e.n(l);
    // CONCATENATED MODULE: external "lodash/omit"
    const u = require("lodash/omit");
    var s =  e.n(u);
    // CONCATENATED MODULE: external "moment"
    const c = require("moment");
    var p =  e.n(c);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const f = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const d = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/react-ui/Calendar"
    const h = require("@splunk/react-ui/Calendar");
    var v =  e.n(h);
    // CONCATENATED MODULE: external "@splunk/react-ui/Popover"
    const y = require("@splunk/react-ui/Popover");
    var m =  e.n(y);
    // CONCATENATED MODULE: external "@splunk/themes"
    const b = require("@splunk/themes");
    // CONCATENATED MODULE: external "styled-components"
    const g = require("styled-components");
    var C =  e.n(g);
    // CONCATENATED MODULE: external "@splunk/react-ui/Text"
    const O = require("@splunk/react-ui/Text");
    var x =  e.n(O);
    // CONCATENATED MODULE: ./src/Date/DateStyles.ts
    var k = C()(x()).withConfig({
        displayName: "DateStyles__StyledText",
        componentId: "kacgdc-0"
    })([ "cursor:", ";&[data-inline]{flex-basis:", ";width:", ";}" ], (0, b.pickVariant)("$disabled", {
        false: "text",
        true: "not-allowed"
    }), (0, b.pick)({
        enterprise: "105px",
        prisma: "150px"
    }), (0, b.pick)({
        enterprise: {
            comfortable: "105px",
            compact: "80px"
        },
        prisma: "150px"
    }));
    var I = C().div.withConfig({
        displayName: "DateStyles__IconContainer",
        componentId: "kacgdc-1"
    })([ "align-items:center;color:", ";display:flex;padding:", ";pointer-events:none;" ], (0, 
    b.pickVariant)("$disabled", {
        false: b.variables.contentColorMuted,
        true: b.variables.contentColorDisabled
    }), (0, b.pick)({
        comfortable: "0 8px",
        compact: "0 6px"
    }));
    // CONCATENATED MODULE: ./src/Date/Icon.tsx
    function T() {
        T = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var a in n) {
                    if (Object.prototype.hasOwnProperty.call(n, a)) {
                        e[a] = n[a];
                    }
                }
            }
            return e;
        };
        return T.apply(this, arguments);
    }
    function D(e) {
        var t = (0, b.useSplunkTheme)(), n = t.density;
        var o = n === "compact" ? "20px" : "24px";
        
        return a().createElement("svg", T({
            viewBox: "0 0 24 24",
            width: o,
            height: o
        }, e),  a().createElement("path", {
            fill: "currentColor",
            fillRule: "evenodd",
            d: "M16.6001 2C17.1524 2 17.6001 2.44772 17.6001 3V4H19C20.1046 4 21 4.89543 21 6V8.5V9.5V19.5C21 19.7761 20.7761 20 20.5 20H3.5C3.22386 20 3 19.7761 3 19.5V9.5V8.5V6C3 4.89543 3.89543 4 5 4H6.6001V3C6.6001 2.44772 7.04781 2 7.6001 2C8.15238 2 8.6001 2.44772 8.6001 3V4H15.6001V3C15.6001 2.44772 16.0478 2 16.6001 2ZM6.6001 6C6.6001 6.55228 7.04781 7 7.6001 7C8.15238 7 8.6001 6.55228 8.6001 6H15.6001C15.6001 6.55228 16.0478 7 16.6001 7C17.1524 7 17.6001 6.55228 17.6001 6H19V8H5L5 6H6.6001ZM19 10H5V18H19V10Z"
        }));
    }
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function S(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/Date/Date.tsx
    function w(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            w = function e(t) {
                return typeof t;
            };
        } else {
            w = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return w(e);
    }
    function V() {
        V = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var a in n) {
                    if (Object.prototype.hasOwnProperty.call(n, a)) {
                        e[a] = n[a];
                    }
                }
            }
            return e;
        };
        return V.apply(this, arguments);
    }
    function j(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function F(e, t) {
        for (var n = 0; n < t.length; n++) {
            var a = t[n];
            a.enumerable = a.enumerable || false;
            a.configurable = true;
            if ("value" in a) a.writable = true;
            Object.defineProperty(e, a.key, a);
        }
    }
    function M(e, t, n) {
        if (t) F(e.prototype, t);
        if (n) F(e, n);
        return e;
    }
    function _(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) P(e, t);
    }
    function P(e, t) {
        P = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return P(e, t);
    }
    function q(e) {
        var t = H();
        return function n() {
            var a = K(e), o;
            if (t) {
                var r = K(this).constructor;
                o = Reflect.construct(a, arguments, r);
            } else {
                o = a.apply(this, arguments);
            }
            return E(this, o);
        };
    }
    function E(e, t) {
        if (t && (w(t) === "object" || typeof t === "function")) {
            return t;
        }
        return R(e);
    }
    function R(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function H() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function K(e) {
        K = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return K(e);
    }
    function W(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var A = {
        defaultValue: r().string,
        describedBy: r().string,
        disabled: r().bool,
        elementRef: r().oneOfType([ r().func, r().object ]),
        error: r().bool,
        highlightToday: r().bool,
        inline: r().bool,
        inputId: r().string,
        inputOnly: r().bool,
        labelledBy: r().string,
        locale: r().string,
        name: r().string,
        onBlur: r().func,
        onChange: r().func,
        onClick: r().func,
        onFocus: r().func,
        onKeyDown: r().func,
        /** @private */
        splunkTheme: r().object,
        value: r().string
    };
    var B = {
        disabled: false,
        error: false,
        highlightToday: false,
        inline: true,
        inputOnly: false,
        locale: "en_US"
    };
    var Y =  function(e) {
        _(n, e);
        var t = q(n);
        // @docs-props-type DatePropsBase
        /**
   * This static value can be used to convert a moment date to a compatible string
   * to set the `value` prop.
   * ```
   * moment().format(Date.momentFormat);
   * ```
   * @public
   * @name momentFormat
   * @memberOf Date
   * @type string
   */        function n(e) {
            var a;
            j(this, n);
            a = t.call(this, e);
            W(R(a), "controlledExternally", void 0);
            W(R(a), "focusCalledInternally", false);
            W(R(a), "popoverId", void 0);
            W(R(a), "calendar", null);
            W(R(a), "openWithFocus", false);
            W(R(a), "applyTextChange", (function(e) {
                var t = p()(a.state.tempTextInputDate, "l", a.props.locale);
                if (t.isValid()) {
                    a.handleDateChange(e, {
                        value: t.format(Y.momentFormat)
                    }, "textInput");
                } else {
                    a.setState({
                        calendarOpen: false,
                        tempTextInputDate: undefined
                    });
                }
            }));
            W(R(a), "handleDateChange", (function(e, t, n) {
                var o = t.value;
                if (n !== "textInput") {
                    a.focusCalledInternally = true;
                    a.focus();
                }
                if (a.getValue() !== o) {
                    var r, l;
                    a.setState({
                        calendarOpen: false,
                        tempTextInputDate: undefined,
                        value: a.isControlled() ? undefined : o
                    });
                    var i = a.props.name;
                    (r = (l = a.props).onChange) === null || r === void 0 ? void 0 : r.call(l, e, {
                        value: o,
                        name: i
                    });
                } else {
                    a.setState({
                        calendarOpen: false
                    });
                }
            }));
            W(R(a), "handleFocus", (function(e, t) {
                var n, o;
                if (a.focusCalledInternally) {
                    a.focusCalledInternally = false;
                } else if (!a.props.inputOnly) {
                    a.setState({
                        calendarOpen: true
                    });
                }
                (n = (o = a.props).onFocus) === null || n === void 0 ? void 0 : n.call(o, e, t);
            }));
            W(R(a), "handleClick", (function(e) {
                var t, n, o;
                if (document.activeElement !== a.state.input && ((t = a.state.anchor) === null || t === void 0 ? void 0 : t.contains(e.target))) {
                    a.focus();
                }
                if (!a.props.inputOnly && !a.state.calendarOpen) {
                    a.setState({
                        calendarOpen: true
                    });
                }
                (n = (o = a.props).onClick) === null || n === void 0 ? void 0 : n.call(o, e);
            }));
            W(R(a), "handleInputChange", (function(e, t) {
                var n = t.value;
                a.setState({
                    tempTextInputDate: n,
                    calendarOpen: !a.props.inputOnly
                });
            }));
            W(R(a), "handleKeyDown", (function(e) {
                var t, n;
                var o = (0, d.keycode)(e.nativeEvent);
                if (o === "enter" || o === "tab") {
                    a.applyTextChange(e);
                } else if (!a.props.inputOnly && o === "down") {
                    e.preventDefault();
                    if (!a.state.calendarOpen) {
                        a.openWithFocus = true;
                        a.setState({
                            calendarOpen: true
                        });
                    } else if (a.calendar) {
                        a.calendar.focusActiveDay();
                    }
                } else if (o === "esc") {
                    a.setState({
                        calendarOpen: false,
                        tempTextInputDate: undefined
                    });
                    a.focus();
                }
                (t = (n = a.props).onKeyDown) === null || t === void 0 ? void 0 : t.call(n, e);
            }));
            W(R(a), "handleMount", (function(e) {
                a.setState({
                    anchor: e
                });
                S(a.props.elementRef, e);
            }));
            W(R(a), "handleInputMount", (function(e) {
                a.setState({
                    input: e
                });
            }));
            W(R(a), "handleCalendarMount", (function(e) {
                a.calendar = e;
            }));
            W(R(a), "handleRequestClose", (function(e) {
                var t = e.event, n = e.reason;
                if ((n === "clickAway" || n === "escapeKey") && t !== undefined && t.target !== a.state.anchor) {
                    a.applyTextChange(t);
                    if (n === "escapeKey") {
                        a.focusCalledInternally = true;
                        a.focus();
                    }
                }
            }));
            a.controlledExternally = i()(e, "value");
            var o = a.isControlled() ? e.value : e.defaultValue || p()().locale(e.locale).format(Y.momentFormat);
            a.state = {
                anchor: null,
                calendarOpen: false,
                input: null,
                value: a.isControlled() ? undefined : o
            };
            a.popoverId = (0, f.createDOMID)("calendar");
            if (false) {}
            if (false) {}
            return a;
        }
        M(n, [ {
            key: "componentDidUpdate",
            value: function e(t, n) {
                if (false) {}
                if (false) {}
                if (false) {}
                /**
       * If `openWithFocus` and `calendarOpen` are set the user is attempting to navigate to the dropdown, but it's closed.
       * On the first update following the state change set focus to the active day within the calendar.
       */                if (this.openWithFocus && this.state.calendarOpen && n.calendarOpen !== this.state.calendarOpen) {
                    var a;
                    this.openWithFocus = false;
                    (a = this.calendar) === null || a === void 0 ? void 0 : a.focusActiveDay();
                }
            }
        }, {
            key: "getValue",
            value: function e() {
                return this.isControlled() ? this.props.value : this.state.value;
            }
        }, {
            key: "getTextInputValue",
            value: function e() {
                return this.state.tempTextInputDate === undefined ? p()(this.getValue(), Y.momentFormat, this.props.locale).format("l") : this.state.tempTextInputDate;
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
            /**
     * Place focus on the input.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.state.input) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, n = t.disabled, o = t.highlightToday, r = t.inputOnly, l = t.locale, i = t.splunkTheme;
                var u = i.isPrisma;
                var c = this.getValue();
                var p = u && !r &&  a().createElement(I, {
                    "aria-hidden": true,
                    $disabled: n
                },  a().createElement(D, null));
                var f;
                var d = {};
                if (!r) {
                    d.role = "combobox";
                    d["aria-controls"] = this.state.calendarOpen ? this.popoverId : undefined;
                    d["aria-expanded"] = n ? false : this.state.calendarOpen;
                    d["aria-haspopup"] = true;
                    f =  a().createElement(m(), {
                        anchor: this.state.anchor,
                        id: this.popoverId,
                        open: n ? false : this.state.calendarOpen,
                        onRequestClose: this.handleRequestClose
                    },  a().createElement(v(), {
                        ref: this.handleCalendarMount,
                        highlightToday: o,
                        locale: l,
                        onChange: this.handleDateChange,
                        value: c
                    }));
                }
                
                return a().createElement(k, V({
                    autoCapitalize: "off",
                    autoComplete: "off",
                    autoCorrect: "off",
                    spellCheck: false,
                    "data-test": "date",
                    "data-test-value": c,
                    "data-test-popover-id": this.popoverId,
                    elementRef: this.handleMount,
                    inputRef: this.handleInputMount,
                    onChange: this.handleInputChange,
                    onClick: this.handleClick,
                    onFocus: this.handleFocus,
                    onKeyDown: this.handleKeyDown,
                    value: this.getTextInputValue(),
                    startAdornment: p,
                    $disabled: n
                }, d, s()(this.props, "defaultValue", "elementRef", "inputOnly", "multiline", "locale", "onChange", "onClick", "onFocus", "onKeyDown", "onSelect", "spellCheck", "value")), f);
            }
        } ]);
        return n;
    }(n.Component);
    W(Y, "propTypes", A);
    W(Y, "defaultProps", B);
    W(Y, "momentFormat", "YYYY-MM-DD");
    W(Y, "validateValue", (function(e) {
        if (!p()(e, Y.momentFormat).isValid()) {
            // eslint-disable-next-line no-console
            console.error('Invalid date string value "'.concat(e, '" provided to Moment.'));
        }
    }));
    var $ = (0, b.withSplunkTheme)(Y);
    var Z = $;
    Z.propTypes = Y.propTypes;
    Z.momentFormat = Y.momentFormat;
    /* harmony default export */    const N = Z;
    // CONCATENATED MODULE: ./src/Date/index.ts
    module.exports = t;
    /******/})();