/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var n in t) {
                /******/ if (e.o(t, n) && !e.o(r, n)) {
                    /******/ Object.defineProperty(r, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        Option: () => /* reexport */ ne,
        default: () => /* reexport */ De
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var n =  e.n(t);
    // CONCATENATED MODULE: external "prop-types"
    const a = require("prop-types");
    var i =  e.n(a);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const l = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const o = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/ChevronLeft"
    const u = require("@splunk/react-icons/enterprise/ChevronLeft");
    var c =  e.n(u);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/ChevronRight"
    const s = require("@splunk/react-icons/enterprise/ChevronRight");
    var v =  e.n(s);
    // CONCATENATED MODULE: external "@splunk/ui-utils/format"
    const d = require("@splunk/ui-utils/format");
    // CONCATENATED MODULE: external "@splunk/react-ui/useForceUpdate"
    const f = require("@splunk/react-ui/useForceUpdate");
    var p =  e.n(f);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const b = require("@splunk/react-ui/ScreenReaderContent");
    var m =  e.n(b);
    // CONCATENATED MODULE: ./src/DualListbox/DualListboxContext.tsx
    /**
 * A React context used to inform subcomponets of DualListbox of parent component values.
 * The context interface is `DualListboxContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
    var h =  n().createContext({});
    /* harmony default export */    const g = h;
    // CONCATENATED MODULE: ./src/DualListbox/ScreenReaderWrapper.tsx
    function y() {
        y = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return y.apply(this, arguments);
    }
    function k(e) {
        var r = y({}, e);
        var a = p()();
        var i = (0, t.useContext)(g);
        var l = i.getScreenReaderMessage, o = i.updateScreenReaderRefreshHook;
        (0, t.useEffect)((function() {
            o === null || o === void 0 ? void 0 : o(a);
            return function() {
                return o === null || o === void 0 ? void 0 : o();
            };
        }), [ o, a ]);
        if (!l) {
            return null;
        }
        
        return n().createElement(m(), y({
            "aria-live": "assertive"
        }, r), l() || "");
    }
    /* harmony default export */    const C = k;
    // CONCATENATED MODULE: ./src/DualListbox/listboxUtils.ts
    var x = function e(r, t) {
        var n = r.filter((function(e) {
            return e !== t;
        }));
        if (r.length === n.length) {
            n.push(t);
        }
        return n;
    };
    var S = function e(r, t) {
        var n = new Set(t);
        return r.filter((function(e) {
            return !n.has(e);
        }));
    };
    var w = function e(r, t, n) {
        if (r < 0) {
            return undefined;
        }
        var a = t[r];
        var i = new Set(n);
        if (!i.has(a)) {
            return a;
        }
        for (var l = r + 1; l < t.length; l += 1) {
            var o = t[l];
            if (!i.has(o)) {
                return o;
            }
        }
        for (var u = r - 1; u > 0; u -= 1) {
            var c = t[u];
            if (!i.has(c)) {
                return c;
            }
        }
        return undefined;
    };
    // CONCATENATED MODULE: ./src/utils/scrollIntoViewIfNeeded.ts
    // A utility that attempts to move an element into view by scrolling it's derived parent.
    var O = function e(r) {
        if (!r) {
            return;
        }
        var t = r.offsetParent;
        if (!t) {
            return;
        }
 // Below the bottom of the container.
                if (t.scrollTop + t.clientHeight < r.offsetTop + r.clientHeight) {
            t.scrollTop = r.offsetTop + r.clientHeight - t.clientHeight;
 // Above the top of the container.
                } else if (t.scrollTop > r.offsetTop) {
            t.scrollTop = r.offsetTop;
        }
    };
    // CONCATENATED MODULE: ./src/utils/fuzzyMatch.ts
    // A utility for matching keyboard characters to list values
    var R = function e(r, t) {
        return r ? r.label.charAt(t).toLowerCase() : "";
    };
    var E = function e(r, t) {
        if (!r.length) {
            return r;
        }
        var n = null;
        var a = false;
        var i = r.filter((function(e) {
            var r = R(e, t.index);
            if (r === t.value) {
                a = true;
                return true;
            }
 // If we haven't found a match yet, keep track of the next closest match.
            // Secondary matching looks for the closest character of a higher value, and failing that, closest of a lower value.
                        if (!a) {
                var i = R(n, t.index);
                if (!i) {
                    n = e;
                } else if (r > t.value) {
                    if (i < t.value) {
                        n = e;
                    } else if (i > r) {
                        n = e;
                    }
                } else if (r > i) {
                    n = e;
                }
            }
            return false;
        }));
        return i.length === 0 && n ? [ n ] : i;
    };
    // CONCATENATED MODULE: ./src/DualListbox/ToolbarContext.tsx
    /**
 * A React context used to inform subcomponets of Toolbar of parent component values.
 * The context interface is `ToolbarContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
    var I =  n().createContext({});
    /* harmony default export */    const L = I;
    // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
    const q = require("@splunk/react-ui/Tooltip");
    var j =  e.n(q);
    // CONCATENATED MODULE: external "styled-components"
    const _ = require("styled-components");
    var D =  e.n(_);
    // CONCATENATED MODULE: external "@splunk/themes"
    const N = require("@splunk/themes");
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const V = require("@splunk/react-ui/Clickable");
    var P =  e.n(V);
    // CONCATENATED MODULE: ./src/DualListbox/ToolbarButtonStyles.ts
    var H = D()(P()).withConfig({
        displayName: "ToolbarButtonStyles__StyledClickable",
        componentId: "k7zksz-0"
    })([ "", " border:", ";border-radius:", ";box-sizing:border-box;cursor:pointer;flex-grow:1;font-weight:", ";line-height:", ";min-height:", ";min-width:", ";max-width:100%;padding:", ";position:relative;text-align:center;text-decoration:none;vertical-align:middle;white-space:nowrap;width:", ";&:active{transition:none;}&:focus{box-shadow:", ";}&:focus,&:hover{z-index:3;}", ";" ], N.mixins.reset("block"), (0, 
    N.pick)({
        enterprise: "1px solid transparent"
    }), N.variables.borderRadius, (0, N.pick)({
        enterprise: N.variables.fontWeightSemiBold,
        prisma: N.variables.fontWeightSemiBold
    }), N.variables.lineHeight, N.variables.inputHeight, N.variables.inputHeight, (0, 
    N.pick)({
        enterprise: {
            comfortable: "0 5px",
            compact: "0 2px"
        },
        prisma: {
            comfortable: (0, _.css)([ "0px calc(", " / 2 - 1px)" ], N.variables.inputHeight),
            compact: (0, _.css)([ "0px calc(", " / 2 - 1px)" ], N.variables.inputHeight)
        }
    }), N.variables.inputHeight, N.variables.focusShadow, (0, N.pickVariant)("$disabled", {
        false: (0, N.pick)({
            enterprise: (0, _.css)([ "color:", ";transition:background-color 0.2s,border 0.2s,box-shadow 0.2s,text-decoration 0.2s;&:hover{background-color:", ";border-color:", ";color:", ";}&:active{background-color:", ";transition:none;}&:focus{color:", ";}" ], (0, 
            N.pick)({
                light: N.variables.gray45,
                dark: N.variables.white
            }), N.variables.backgroundColorHover, (0, N.pick)({
                light: N.variables.gray60,
                dark: N.variables.borderColor
            }), (0, N.pick)({
                light: N.variables.linkColor,
                dark: N.variables.white
            }), (0, N.pick)({
                light: N.variables.gray92,
                dark: N.variables.gray22
            }), (0, N.pick)({
                light: N.variables.linkColor,
                dark: N.variables.white
            })),
            prisma: (0, _.css)([ "color:", ";transition:background-image 0.2s,border 0.2s,box-shadow 0.2s,text-decoration 0.2s;&:hover{background-color:", ";border-color:", ";box-shadow:", ";}&:active{background-color:", ";transition:none;}&:focus{&:active{background-color:", ";}}" ], N.variables.contentColorActive, N.variables.interactiveColorOverlayHover, N.variables.interactiveColorBorderHover, N.variables.hoverShadow, N.variables.interactiveColorOverlayActive, N.variables.interactiveColorOverlayActive)
        }),
        true: (0, _.css)([ "border-color:", ";color:", ";cursor:not-allowed;" ], (0, N.pick)({
            prisma: N.variables.interactiveColorBorderDisabled
        }), (0, N.pick)({
            enterprise: N.variables.textDisabledColor,
            prisma: N.variables.contentColorDisabled
        }))
    }));
    var T = D().span.withConfig({
        displayName: "ToolbarButtonStyles__StyledIcon",
        componentId: "k7zksz-1"
    })([ "align-items:center;display:flex;flex-direction:row;flex-shrink:0;font-size:", ";justify-content:center;max-width:100%;" ], (0, 
    N.pick)({
        enterprise: "inherit",
        prisma: {
            comfortable: "21px",
            compact: "16px"
        }
    }));
    // CONCATENATED MODULE: ./src/DualListbox/ToolbarButton.tsx
    function B() {
        B = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return B.apply(this, arguments);
    }
    function M(e, r) {
        if (e == null) return {};
        var t = A(e, r);
        var n, a;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (a = 0; a < i.length; a++) {
                n = i[a];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function A(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var a, i;
        for (i = 0; i < n.length; i++) {
            a = n[i];
            if (r.indexOf(a) >= 0) continue;
            t[a] = e[a];
        }
        return t;
    }
    var K = {
        icon: i().node.isRequired,
        name: i().string.isRequired,
        tooltipLabel: i().string.isRequired,
        tooltipPlacement: i().oneOf([ "above", "below", "left", "right" ])
    };
    function $(e) {
        var r = e.ariaLabel, a = e.ariaKeyShortcuts, i = e.icon, l = e.name, o = e.tooltipLabel, u = e.tooltipPlacement, c = M(e, [ "ariaLabel", "ariaKeyShortcuts", "icon", "name", "tooltipLabel", "tooltipPlacement" ]);
        var s = (0, t.useContext)(L);
        var v = p()();
        var d = s.getButtonState, f = s.onButtonClick, b = s.updateButtonRefreshHookByName;
        (0, t.useEffect)((function() {
            b === null || b === void 0 ? void 0 : b(l, v);
            return function() {
                return b === null || b === void 0 ? void 0 : b(l);
            };
        }), [ l, b, v ]);
        var m = (0, t.useCallback)((function(e) {
            f === null || f === void 0 ? void 0 : f(e, {
                name: l
            });
        }), [ f, l ]);
        if (!d) {
            return null;
        }
        var h = d(l), g = h.disabled;
        
        return n().createElement(j(), {
            defaultPlacement: u,
            content:  n().createElement("span", {
                "aria-hidden": true
            }, o)
        },  n().createElement(H, B({
            "aria-label": r,
            "aria-keyshortcuts": a,
            "aria-disabled": g || undefined,
            "data-test": "toolbar-button",
            $disabled: g,
            onClick: !g ? m : undefined
        }, c),  n().createElement(T, null, i)));
    }
    $.propsTypes = K;
    /* harmony default export */    const F = $;
    // CONCATENATED MODULE: external "@splunk/react-ui/Switch"
    const z = require("@splunk/react-ui/Switch");
    var U =  e.n(z);
    // CONCATENATED MODULE: ./src/DualListbox/OptionStyles.ts
    var W = D().li.withConfig({
        displayName: "OptionStyles__StyledListItem",
        componentId: "q275d9-0"
    })([ "align-items:center;color:", ";cursor:pointer;display:flex;overflow:hidden;width:100%;word-wrap:break-word;", " ", "" ], N.variables.contentColorActive, (0, 
    N.pickVariant)("$active", {
        true: (0, _.css)([ "", "" ], (0, N.pick)({
            prisma: (0, _.css)([ "background:", ";" ], N.variables.interactiveColorOverlaySelected),
            enterprise: {
                light: (0, _.css)([ "background:", ";" ], N.variables.accentColorL50),
                dark: (0, _.css)([ "background:", ";" ], N.variables.accentColorD50)
            }
        }))
    }), (0, N.pick)({
        prisma: (0, N.pickVariant)("$selected", {
            true: (0, _.css)([ "&:hover{background:", ";}" ], N.mixins.overlayColors(N.variables.interactiveColorOverlaySelected, N.variables.interactiveColorOverlayHover)),
            false: (0, _.css)([ "&:hover{background:", ";}" ], N.variables.interactiveColorOverlayHover)
        }),
        enterprise: (0, _.css)([ "&:hover{background:", ";}" ], N.variables.backgroundColorHover)
    }));
    var X = D()(U()).withConfig({
        displayName: "OptionStyles__StyledSwitch",
        componentId: "q275d9-1"
    })([ "padding-left:", ";" ], N.variables.spacingSmall);
    var G = D().div.withConfig({
        displayName: "OptionStyles__StyledDiv",
        componentId: "q275d9-2"
    })([ "padding:", ";word-break:break-word;word-wrap:break-word;" ], (0, N.pick)({
        prisma: {
            compact: (0, _.css)([ "6px ", "" ], N.variables.spacingSmall),
            comfortable: (0, _.css)([ "10px ", "" ], N.variables.spacingSmall)
        },
        enterprise: (0, _.css)([ "6px ", "" ], N.variables.spacingSmall)
    }));
    // CONCATENATED MODULE: ./src/DualListbox/ListboxContext.tsx
    /**
 * A React context used to inform subcomponets of Listbox of parent component values.
 * The context interface is `ListboxContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
    var J =  n().createContext({});
    /* harmony default export */    const Q = J;
    // CONCATENATED MODULE: ./src/DualListbox/Option.tsx
    function Y() {
        Y = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return Y.apply(this, arguments);
    }
    function Z(e, r) {
        if (e == null) return {};
        var t = ee(e, r);
        var n, a;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (a = 0; a < i.length; a++) {
                n = i[a];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function ee(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var a, i;
        for (i = 0; i < n.length; i++) {
            a = n[i];
            if (r.indexOf(a) >= 0) continue;
            t[a] = e[a];
        }
        return t;
    }
    var re = {
        id: i().string.isRequired,
        label: i().string.isRequired,
        listName: i().string,
        selected: i().bool,
        value: i().string.isRequired
    };
    function te(e) {
        var r = e.id, a = e.label, i = e.selected, l = e.value, o = Z(e, [ "id", "label", "selected", "value" ]);
        var u = (0, t.useContext)(Q);
        var c = p()();
        var s = u.onOptionClick, v = u.getOptionStateForValue, d = u.updateOptionRefreshHookByValue, f = u.controlled;
        (0, t.useEffect)((function() {
            d === null || d === void 0 ? void 0 : d(l, c);
            return function() {
                return d === null || d === void 0 ? void 0 : d(l);
            };
        }), [ l, d, c ]);
        var b = (0, t.useCallback)((function(e) {
            s === null || s === void 0 ? void 0 : s(e, {
                value: l
            });
        }), [ s, l ]);
        if (!v) {
            return null;
        }
        var m = v(l), h = m.active, g = m.selected;
        var y = !!(f ? i : g);
        
        return n().createElement(W, Y({
            "aria-selected": y,
            "data-test": "option",
            "data-test-value": l,
            "data-test-active": h,
            id: r,
            onClick: b,
            role: "option",
            $active: h,
            $selected: y
        }, o),  n().createElement(X, {
            interactive: false,
            selected: y,
            appearance: "checkbox"
        }),  n().createElement(G, null, a));
    }
    te.propTypes = re;
    /* harmony default export */    const ne = te;
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const ae = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: ./src/DualListbox/LabelStyles.ts
    var ie = D().label.withConfig({
        displayName: "LabelStyles__StyledLabel",
        componentId: "unwplx-0"
    })([ "color:", ";flex:0 0 auto;" ], N.variables.contentColorActive);
    var le = D().div.withConfig({
        displayName: "LabelStyles__StyledLabelContainer",
        componentId: "unwplx-1"
    })([ "display:flex;flex-direction:column;" ]);
    var oe = D().div.withConfig({
        displayName: "LabelStyles__StyledSwitchContainer",
        componentId: "unwplx-2"
    })([ "align-items:center;border:1px solid transparent;display:flex;gap:", ";grid-row:headers;padding:0 ", ";", "" ], N.variables.spacingSmall, N.variables.spacingSmall, (function(e) {
        var r = e.$columnNumber;
        return (0, _.css)([ "grid-column:", ";" ], "list".concat(r));
    }));
    // CONCATENATED MODULE: ./src/DualListbox/Label.tsx
    var ue = {
        id: i().string.isRequired,
        index: i().number.isRequired,
        listId: i().string.isRequired,
        name: i().string.isRequired,
        onSwitchClick: i().func,
        value: i().string.isRequired
    };
    function ce(e) {
        var r = e.id, a = e.index, i = e.listId, o = e.name, u = e.onSwitchClick, c = e.value;
        var s = (0, t.useContext)(Q);
        var v = p()();
        var f = (0, t.useRef)((0, ae.createDOMID)("switch"));
        var b = s.updateLabelRefreshHookByName, h = s.getLabelState;
        (0, t.useEffect)((function() {
            b === null || b === void 0 ? void 0 : b(o, v);
            return function() {
                return b === null || b === void 0 ? void 0 : b(o);
            };
        }), [ o, b, v ]);
        if (!h) {
            return null;
        }
        var g = h(), y = g.disabled, k = g.selected, C = g.selectedValueCount, x = g.valueCount;
        
        return n().createElement(oe, {
            $columnNumber: a
        },  n().createElement(m(), {
            "aria-hidden": true,
            id: f.current
        }, (0, d.sprintf)((0, l._)("Select all %(listName)s Options"), {
            listName: c
        })),  n().createElement(U(), {
            appearance: "checkbox",
            "data-test": "select-all",
            disabled: y,
            labelledBy: f.current,
            onClick: u,
            selected: k,
            value: c
        }),  n().createElement(le, null,  n().createElement(ie, {
            id: r,
            htmlFor: i
        }, c),  n().createElement("span", {
            "aria-hidden": true
        }, "".concat(C, "/").concat(x, " selected"))));
    }
    ce.propTypes = ue;
    /* harmony default export */    const se = ce;
    // CONCATENATED MODULE: ./src/DualListbox/ListboxStyles.ts
    var ve = D().ul.withConfig({
        displayName: "ListboxStyles__StyledListbox",
        componentId: "sc-11oqtd-0"
    })([ "background-color:", ";border:1px solid ", ";border-radius:", ";grid-row:lists;list-style:none;margin:0;min-height:0;min-width:0;overflow:auto;padding:0;position:relative;&:focus{box-shadow:", ";outline:none;}", "" ], N.variables.transparent, (0, 
    N.pick)({
        enterprise: N.variables.gray60,
        prisma: N.variables.interactiveColorBorder
    }), N.variables.borderRadius, N.variables.focusShadow, (function(e) {
        var r = e.$columnNumber;
        return (0, _.css)([ "grid-column:", ";" ], "list".concat(r));
    }));
    // CONCATENATED MODULE: ./src/DualListbox/Listbox.tsx
    function de() {
        de = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return de.apply(this, arguments);
    }
    function fe(e, r) {
        if (e == null) return {};
        var t = pe(e, r);
        var n, a;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (a = 0; a < i.length; a++) {
                n = i[a];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function pe(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var a, i;
        for (i = 0; i < n.length; i++) {
            a = n[i];
            if (r.indexOf(a) >= 0) continue;
            t[a] = e[a];
        }
        return t;
    }
    var be = {
        children: i().node,
        index: i().number.isRequired,
        label: i().string.isRequired,
        multiSelect: i().bool,
        name: i().string.isRequired,
        onClick: i().func,
        onKeyDown: i().func,
        onSelectAllClick: i().func
    };
    function me(e) {
        var r = e.children, a = e.elementRef, i = e.index, l = e.label, o = e.name, u = e.onClick, c = e.onKeyDown, s = e.onSelectAllClick, v = fe(e, [ "children", "elementRef", "index", "label", "name", "onClick", "onKeyDown", "onSelectAllClick" ]);
        var d = (0, t.useRef)((0, ae.createDOMID)("label"));
        var f = (0, t.useRef)((0, ae.createDOMID)("listbox"));
        var p = (0, t.useContext)(g), b = p.controlled, m = p.getSelectedStateForValue, h = p.getActiveValue, y = p.getSelectedValueCount, k = p.getValueCount, C = p.updateLabelRefreshHookByName, x = p.updateOptionRefreshHookByValue;
        var S = (0, t.useCallback)((function(e, r) {
            var t = r.value;
            u === null || u === void 0 ? void 0 : u(e, {
                name: o,
                value: t
            });
        }), [ o, u ]);
        var w = (0, t.useCallback)((function(e) {
            return {
                active: (h === null || h === void 0 ? void 0 : h(o)) === e,
                selected: !!(m === null || m === void 0 ? void 0 : m(e))
            };
        }), [ o, h, m ]);
        var O = (0, t.useCallback)((function() {
            var e = (k === null || k === void 0 ? void 0 : k(o)) || 0;
            var r = (y === null || y === void 0 ? void 0 : y(o)) || 0;
            var t = false;
            if (r > 0) {
                t = r === e ? true : "some";
            }
            return {
                disabled: e < 1,
                selected: t,
                selectedValueCount: r,
                valueCount: e
            };
        }), [ o, y, k ]);
        var R = function e(r) {
            c === null || c === void 0 ? void 0 : c(r, {
                name: o
            });
        };
        var E = function e(r, t) {
            var n = t.selected;
            s === null || s === void 0 ? void 0 : s(r, {
                name: o,
                selected: n
            });
        };
        var I = function e(r) {
            // this prevents default text selection when using shift + click
            if (r.shiftKey && r.target !== r.currentTarget) {
                r.preventDefault();
            }
        };
        var L = (0, t.useMemo)((function() {
            return {
                onOptionClick: S,
                updateLabelRefreshHookByName: C,
                updateOptionRefreshHookByValue: x,
                getOptionStateForValue: w,
                getLabelState: O,
                controlled: b
            };
        }), [ S, C, x, w, O, b ]);
        
        return n().createElement(Q.Provider, {
            value: L
        },  n().createElement(se, {
            id: d.current,
            index: i,
            listId: f.current,
            name: o,
            onSwitchClick: E,
            value: l
        }),  n().createElement(ve, de({
            "aria-activedescendant": "",
            "aria-labelledby": d.current,
            "aria-multiselectable": true,
            "data-test": "listbox",
            id: f.current,
            onKeyDown: R,
            onMouseDown: I,
            ref: a,
            role: "listbox",
            tabIndex: 0,
            $columnNumber: i
        }, v), r));
    }
    me.propTypes = be;
    /* harmony default export */    const he = me;
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const ge = require("@splunk/react-ui/Box");
    var ye =  e.n(ge);
    // CONCATENATED MODULE: ./src/DualListbox/DualListboxStyles.ts
    var ke = D()(ye()).withConfig({
        displayName: "DualListboxStyles__StyledBox",
        componentId: "sc-1te6bz0-0"
    })([ "display:grid;grid-template-columns:[list0] 180px [actions] min-content [list1] 180px;grid-template-rows:[headers] min-content [lists] 160px;gap:", " ", ";", " ", "" ], N.variables.spacingXSmall, N.variables.spacingSmall, (function(e) {
        var r = e.$inline;
        return r && (0, _.css)([ "display:inline-grid;" ]);
    }), (function(e) {
        var r = e.$fill;
        return r && (0, _.css)([ "height:100%;grid-template-columns:[list0] 1fr [actions] min-content [list1] 1fr;grid-template-rows:[headers] min-content [lists] 1fr;position:relative;width:100%;" ]);
    }));
    var Ce = D().div.withConfig({
        displayName: "DualListboxStyles__StyledFlexColumn",
        componentId: "sc-1te6bz0-1"
    })([ "&::before{content:'';grid-column:headers;grid-row:lists;}align-items:center;display:flex;flex-direction:column;gap:", ";grid-column:actions;grid-row:lists;justify-content:center;" ], N.variables.spacingSmall);
    // CONCATENATED MODULE: ./src/DualListbox/DualListbox.tsx
    function xe() {
        xe = Object.assign || function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    if (Object.prototype.hasOwnProperty.call(t, n)) {
                        e[n] = t[n];
                    }
                }
            }
            return e;
        };
        return xe.apply(this, arguments);
    }
    function Se(e, r) {
        return Ie(e) || Ee(e, r) || Oe(e, r) || we();
    }
    function we() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Oe(e, r) {
        if (!e) return;
        if (typeof e === "string") return Re(e, r);
        var t = Object.prototype.toString.call(e).slice(8, -1);
        if (t === "Object" && e.constructor) t = e.constructor.name;
        if (t === "Map" || t === "Set") return Array.from(e);
        if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return Re(e, r);
    }
    function Re(e, r) {
        if (r == null || r > e.length) r = e.length;
        for (var t = 0, n = new Array(r); t < r; t++) {
            n[t] = e[t];
        }
        return n;
    }
    function Ee(e, r) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var t = [];
        var n = true;
        var a = false;
        var i = undefined;
        try {
            for (var l = e[Symbol.iterator](), o; !(n = (o = l.next()).done); n = true) {
                t.push(o.value);
                if (r && t.length === r) break;
            }
        } catch (e) {
            a = true;
            i = e;
        } finally {
            try {
                if (!n && l["return"] != null) l["return"]();
            } finally {
                if (a) throw i;
            }
        }
        return t;
    }
    function Ie(e) {
        if (Array.isArray(e)) return e;
    }
    function Le(e, r) {
        if (e == null) return {};
        var t = qe(e, r);
        var n, a;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (a = 0; a < i.length; a++) {
                n = i[a];
                if (r.indexOf(n) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    function qe(e, r) {
        if (e == null) return {};
        var t = {};
        var n = Object.keys(e);
        var a, i;
        for (i = 0; i < n.length; i++) {
            a = n[i];
            if (r.indexOf(a) >= 0) continue;
            t[a] = e[a];
        }
        return t;
    }
    /** @public */    var je = {
        children: i().node,
        controlled: i().bool,
        fill: i().bool,
        inline: i().bool,
        onChange: i().func,
        onSelect: i().func,
        lists: i().arrayOf(i().shape({
            name: i().string.isRequired,
            label: i().string.isRequired
        })).isRequired
    };
    function _e(e) {
        var r, a, i, u;
        var s = e.children, f = e.controlled, b = f === void 0 ? false : f, m = e.fill, h = m === void 0 ? false : m, y = e.inline, k = y === void 0 ? false : y, R = e.onChange, I = e.onSelect, q = e.lists, j = Le(e, [ "children", "controlled", "fill", "inline", "onChange", "onSelect", "lists" ]);
        // @docs-props-type DualListboxPropsBase
                var _ = p()();
        var D = (0, t.useRef)(false);
        (0, t.useEffect)((function() {
            D.current = true;
        }), []);
 // TODO: Implement shared isControlled hook (SUI-5283).
                var N = (0, t.useRef)(b);
 // List One "Available" Refs
                var V = (0, t.useRef)([]);
        var P = (0, t.useRef)([]);
        var H = (0, t.useRef)();
        var T = (0, t.useRef)(null);
        var B = (0, t.useRef)([]);
 // List Two "Selected" Refs
                var M = (0, t.useRef)([]);
        var A = (0, t.useRef)([]);
        var K = (0, t.useRef)();
        var $ = (0, t.useRef)(null);
        var z = (0, t.useRef)([]);
 // Refresh Hook Stores, used to render indivual elements when uncontrolled
                var U = (0, t.useRef)({});
        var W = (0, t.useRef)({});
        var X = (0, t.useRef)({});
        var G = (0, t.useRef)();
 // Activity Values Refs
                var J = (0, t.useRef)();
        var Q = (0, t.useRef)({});
        var Y = (0, t.useRef)({});
        var Z = (0, t.useRef)({});
        var ee = (0, t.useRef)(0);
 // Key Match Refs
                var re = (0, t.useRef)();
        var te = (0, t.useRef)();
        var ne = (0, t.useRef)([]);
        if (false) {}
        if (false) {}
        if (false) {}
 // Unpack names and labels instead of relying on `lists` being a consistent reference
                var ae = (r = q[0]) === null || r === void 0 ? void 0 : r.name;
        var ie = (a = q[1]) === null || a === void 0 ? void 0 : a.name;
        var le = (i = q[0]) === null || i === void 0 ? void 0 : i.label;
        var oe = (u = q[1]) === null || u === void 0 ? void 0 : u.label;
 // Copy previous state for uncontrolled render so it's not voided by following value reset
                var ue = new Set(M.current);
 // This ensures we recapture the indexes after batch moves, but will be refactored when sorting is implemented (SUI-5270).
                V.current = [];
        M.current = [];
        B.current = [];
        z.current = [];
 // Clean the data stores before we copy the references into listData
                if (!D.current || N.current) {
            P.current = [];
            A.current = [];
            Q.current = {};
            Z.current = {};
            Y.current = {};
        }
        var ce = [ {
            options: [],
            matchOptions: B.current,
            values: V.current,
            selectedValues: P.current,
            activeValue: H.current,
            activeFound: !H.current
        }, {
            options: [],
            matchOptions: z.current,
            values: M.current,
            selectedValues: A.current,
            activeValue: K.current,
            activeFound: !K.current
        } ];
        if (!D.current || N.current) {
            t.Children.toArray(s).filter(t.isValidElement).forEach((function(e) {
                var r = e.props, t = r.value, n = r.label;
                var a = e.props.listName === ie;
                var i = ce[a ? 1 : 0];
 // Ensure the active value is found on controlled renders
                                if (!i.activeFound && i.activeValue === t) {
                    i.activeFound = true;
                }
                i.values.push(t);
                i.options.push(e);
                i.matchOptions.push({
                    value: t,
                    label: n
                });
                var l = !!e.props.selected;
                if (l) {
                    i.selectedValues.push(t);
                }
                Q.current[t] = l;
                Z.current[t] = i.values.length - 1;
                Y.current[t] = e.props.id;
            }));
        } else {
            t.Children.toArray(s).filter(t.isValidElement).forEach((function(e) {
                var r = e.props, t = r.value, n = r.label;
                var a = ue.has(t);
                var i = ce[a ? 1 : 0];
                i.values.push(t);
                i.options.push(e);
                i.matchOptions.push({
                    value: t,
                    label: n
                });
                Z.current[t] = i.values.length - 1;
            }));
        }
        var se = (0, t.useCallback)((function(e, r) {
            if (e === ae) {
                H.current = r;
            } else {
                K.current = r;
            }
        }), [ ae ]);
        var ve = (0, t.useCallback)((function(e) {
            return e === ae ? H.current : K.current;
        }), [ ae ]);
        var de = (0, t.useCallback)((function(e, r) {
            if (e === ae) {
                P.current = r;
            } else {
                A.current = r;
            }
        }), [ ae ]);
        var fe = (0, t.useCallback)((function(e) {
            return e === ae ? P.current : A.current;
        }), [ ae ]);
        var pe = (0, t.useCallback)((function(e) {
            return fe(e).length;
        }), [ fe ]);
        var be = (0, t.useCallback)((function() {
            return J.current;
        }), []);
        var me = (0, t.useCallback)((function(e) {
            return Q.current[e];
        }), []);
        var ge = (0, t.useCallback)((function(e, r) {
            if (e === ae) {
                V.current = r;
            } else {
                M.current = r;
            }
        }), [ ae ]);
        var ye = (0, t.useCallback)((function(e) {
            return e === ae ? V.current : M.current;
        }), [ ae ]);
        var we = (0, t.useCallback)((function(e) {
            return ye(e).length;
        }), [ ye ]);
        var Oe = (0, t.useCallback)((function(e) {
            var r = we(e);
            return r > 0 && r === pe(e);
        }), [ we, pe ]);
        var Re = (0, t.useCallback)((function(e) {
            return e === ae ? B.current : z.current;
        }), [ ae ]);
        var Ee = (0, t.useCallback)((function(e) {
            var r = we(e);
            var t = pe(e);
            return {
                disabled: r < 1 || t < 1
            };
        }), [ we, pe ]);
        var Ie = (0, t.useCallback)((function() {
            if (J.current && J.current.length > 0) {
                var e;
                J.current = "";
                (e = G.current) === null || e === void 0 ? void 0 : e.call(G);
            }
        }), []);
        var qe = (0, t.useCallback)((function() {
            re.current = undefined;
            ne.current = [];
            if (te.current) {
                clearTimeout(te.current);
            }
        }), []);
        var je = (0, t.useCallback)((function(e) {
            G.current = e;
        }), []);
        var _e = (0, t.useCallback)((function(e, r) {
            if (r) {
                X.current[e] = r;
            } else {
                delete X.current[e];
            }
        }), []);
        var De = (0, t.useCallback)((function(e, r) {
            if (r) {
                W.current[e] = r;
            } else {
                delete W.current[e];
            }
        }), []);
        var Ne = (0, t.useCallback)((function(e, r) {
            if (r) {
                U.current[e] = r;
            } else {
                delete U.current[e];
            }
        }), []);
        var Ve = (0, t.useCallback)((function(e) {
            if (e) {
                var r, t;
                (r = (t = X.current)[e]) === null || r === void 0 ? void 0 : r.call(t);
            }
        }), []);
        var Pe = (0, t.useCallback)((function(e) {
            if (e) {
                var r, t;
                (r = (t = W.current)[e]) === null || r === void 0 ? void 0 : r.call(t);
            }
        }), []);
        var He = (0, t.useCallback)((function(e) {
            if (e) {
                var r, t;
                (r = (t = U.current)[e]) === null || r === void 0 ? void 0 : r.call(t);
            }
        }), []);
        var Te = (0, t.useCallback)((function(e) {
            Ie();
            Pe(e);
            He(ae);
            He(ie);
        }), [ Ie, He, Pe, ae, ie ]);
        var Be = (0, t.useCallback)((function(e, r) {
            var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var n = e === ae ? T.current : $.current;
            if (!n) {
                return;
            }
            var a = ve(e);
            se(e, r);
            if (!t) {
                // render new
                Ve(r);
            }
            if (r !== a) {
                if (!t) {
                    // render previous
                    Ve(a);
                }
                var i = r ? Y.current[r] : "";
 // update listbox via dom to avoid render + child render
                                n.setAttribute("aria-activedescendant", i);
                if (!t && i.length > 0) {
                    var l = n.querySelector("#".concat(i));
                    O(l);
                }
            }
        }), [ ve, se, Ve, ae ]);
        var Me = (0, t.useCallback)((function(e, r) {
            var t = r.value, n = r.name;
            var a = Oe(n) ? ye(n) : fe(n);
            var i = x(a, t);
            if (!N.current) {
                Q.current[t] = !Q.current[t];
                de(n, i);
                Te(n);
            }
            Be(n, t);
            e.preventDefault();
            I === null || I === void 0 ? void 0 : I(e, {
                values: i,
                listName: n
            });
        }), [ Oe, fe, ye, de, Be, Te, I ]);
        var Ae = (0, t.useCallback)((function(e, r) {
            var t = r.initialIndex, n = r.name, a = r.targetIndex;
            var i = ye(n);
            var l = Math.min(t, a);
            var o = Math.max(t, a);
            var u = [];
            if (N.current) {
                u = i.slice(l, o + 1);
            } else {
                i.forEach((function(e, r) {
                    var t = false;
                    if (r >= l && r <= o) {
                        t = true;
                        u.push(e);
                    } else {
                        t = false;
                    }
                    if (Q.current[e] !== t) {
                        Q.current[e] = t;
                        Ve(e);
                    }
                }));
                de(n, u);
                Te(n);
            }
            Be(n, i[a]);
            e.preventDefault();
            e.stopPropagation();
            I === null || I === void 0 ? void 0 : I(e, {
                values: u,
                listName: n
            });
        }), [ ye, I, de, Be, Te, Ve ]);
        var Ke = (0, t.useCallback)((function(e, r) {
            var t = r.name, n = r.selected;
            var a = ye(t);
            var i = n === true ? [] : a;
            var l = n !== true;
            if (!N.current) {
                a === null || a === void 0 ? void 0 : a.forEach((function(e) {
                    if (Q.current[e] !== l) {
                        Q.current[e] = l;
                        Ve(e);
                    }
                }));
                de(t, i);
                Te(t);
            }
            e.preventDefault();
            I === null || I === void 0 ? void 0 : I(e, {
                values: i,
                listName: t
            });
        }), [ ye, I, de, Te, Ve ]);
 // handleMoveValues does not update the active value of the source, keyboard and mouse differ, only the target active value is updated
                var $e = (0, t.useCallback)((function(e, r, t) {
            var n = ye(r);
            var a = fe(r);
            var i = Oe(r);
            var o = ye(t);
            var u = ve(t);
            if (n.length === 0 || !i && a.length === 0) {
                return;
            }
            if (!u && a.length > 0) {
                // target lacks an active value, default to the first
                // skip the render it will be catch in batch
                Be(t, a[0], true);
            }
            var c = (0, d.sprintf)((0, l._)("Moved %(count)d items to %(listLabel)s list"), {
                count: a.length,
                listLabel: t === ae ? le : oe
            });
 // These new values do not perserve sort position, may need to be refactored with sort logic (SUI-5270).
                        var s = i ? [] : S(n, a);
            var v = o.concat(a);
            if (!N.current) {
                a.forEach((function(e) {
                    Q.current[e] = false;
                }));
                ge(t, v);
                ge(r, s);
                de(r, []);
                J.current = c;
 // move is a batch update, force a full render, no internal update needed
                                _();
            }
            var f = {
                affectedValues: a,
                sourceListName: r || "",
                sourceValues: s,
                targetListName: t || "",
                targetValues: v,
                screenReaderMessage: c || "",
                values: a.slice()
            };
            e.preventDefault();
            R === null || R === void 0 ? void 0 : R(e, f);
        }), [ _, ve, Oe, fe, ye, R, de, ge, Be, ae, le, oe ]);
        var Fe = (0, t.useCallback)((function(e, r) {
            var t = r.name;
            var n = Oe(t);
            var a = ve(t);
            var i = t === ae ? ie : ae;
            if (a && (n || !!Q.current[a])) {
                // active option was present in items to be removed, clear the active option
                Be(t);
            }
            $e(e, t, i);
        }), [ ve, Oe, $e, Be, ae, ie ]);
        var ze = (0, t.useCallback)((function(e, r) {
            var t = r.name, n = r.value;
            if (e.nativeEvent.shiftKey) {
                Ae(e, {
                    targetIndex: Z.current[n],
                    initialIndex: ee.current,
                    name: t
                });
            } else {
                Me(e, {
                    name: t,
                    value: n
                });
            }
        }), [ Ae, Me ]);
        var Ue = (0, t.useCallback)((function(e, r) {
            Ke(e, r);
        }), [ Ke ]);
        var We = (0, t.useCallback)((function(e, r) {
            var t = e.nativeEvent.key;
            var n = Re(r);
 // Checking for a single character to avoid complications from double-byte languages and emojis.
                        if (t.length === 1) {
                var a = [];
                var i = {
                    index: 0,
                    value: t
                };
                if (!re.current) {
                    if (t === " ") {
                        qe();
                        return;
                    }
                    a = E(n, i);
                } else if (ne.current.length > 1) {
                    i.index = re.current.index + 1;
                    a = E(ne.current, i);
                }
                if (a.length) {
                    var l = 0;
 // If the active option is a first character match, cycle to the next matching option.
                                        if (i.index === 0 && a.length > 1) {
                        var o = ve(r);
                        if (o) {
                            var u = a.findIndex((function(e) {
                                return e.value === o;
                            }));
                            if (u >= 0) {
                                l = u === a.length - 1 ? 0 : u + 1;
                            }
                        }
                    }
                    Be(r, a[l].value);
                }
                ne.current = a;
                re.current = i;
                if (te.current) {
                    clearTimeout(te.current);
                }
                te.current = setTimeout(qe, 500);
                e.preventDefault();
                e.stopPropagation();
            }
        }), [ ve, Re, qe, Be ]);
        var Xe = (0, t.useCallback)((function(e, r) {
            var t = r.name;
            var n = (0, o.keycode)(e.nativeEvent);
            var a = ye(t);
            var i = fe(t);
            var l = Oe(t);
            var u = ve(t);
            var c = u ? Z.current[u] : -1;
            var s = ee.current >= 0 ? ee.current : 0;
            if (J.current && J.current.length > 0) {
                Ie();
            }
            var v = u;
            switch (n) {
              case "shift":
                ee.current = c;
                break;

              case "home":
                if (e.nativeEvent.ctrlKey && e.nativeEvent.shiftKey) {
                    // handle select until start
                    Ae(e, {
                        targetIndex: 0,
                        initialIndex: s,
                        name: t
                    });
                } else {
                    var d = Se(a, 1);
                    v = d[0];
                }
                break;

              case "end":
                if (e.nativeEvent.ctrlKey && e.nativeEvent.shiftKey) {
                    // handle select until end
                    Ae(e, {
                        targetIndex: a.length - 1,
                        initialIndex: s,
                        name: t
                    });
                } else {
                    v = a[a.length - 1];
                }
                break;

              case "up":
                if (e.nativeEvent.shiftKey) {
                    // handle select until previous
                    Ae(e, {
                        targetIndex: Math.max(c - 1, 0),
                        initialIndex: s,
                        name: t
                    });
                } else {
                    v = a[Math.max(c - 1, 0)];
                }
                break;

              case "down":
                if (e.nativeEvent.shiftKey) {
                    // handle select until next
                    Ae(e, {
                        targetIndex: Math.min(c + 1, a.length - 1),
                        initialIndex: s,
                        name: t
                    });
                } else {
                    v = a[Math.min(c + 1, a.length - 1)];
                }
                break;

              case "space":
                if (u != null) {
                    Me(e, {
                        name: t,
                        value: u
                    });
                }
                break;

              case "enter":
                if (t === ae) {
                    if (l) {
                        // all values moved, no longer an active value
                        v = undefined;
                    } else if (i.length > 0) {
                        // somes values moved, determine next active value
                        v = w(c, a, i);
                    }
                    $e(e, ae, ie);
                }
                break;

              case "delete":
                if (t === ie) {
                    if (l) {
                        // all values moved, no longer an active value
                        v = undefined;
                    } else if (i.length > 0) {
                        // somes values moved, determine next active value
                        v = w(c, a, i);
                    }
                    $e(e, ie, ae);
                }
                break;

              default:
                if (n === "a" && (e.nativeEvent.ctrlKey || e.nativeEvent.metaKey)) {
                    // handle control + A, otherwise let 'a' passthrough
                    Ke(e, {
                        name: t,
                        selected: l
                    });
                } else {
                    // do fuzzy match
                    We(e, t);
                }
                break;
            }
            if (v !== u) {
                e.preventDefault();
                Be(t, v);
            }
        }), [ Ie, ve, Oe, fe, ye, We, $e, Ae, Me, Ke, Be, ae, ie ]);
        var Ge = (0, t.useMemo)((function() {
            return {
                onButtonClick: Fe,
                updateButtonRefreshHookByName: Ne,
                getButtonState: Ee
            };
        }), [ Fe, Ne, Ee ]);
        var Je = (0, t.useMemo)((function() {
            return {
                controlled: N.current,
                getActiveValue: ve,
                getScreenReaderMessage: be,
                getSelectedStateForValue: me,
                getSelectedValueCount: pe,
                getValueCount: we,
                updateLabelRefreshHookByName: De,
                updateOptionRefreshHookByValue: _e,
                updateScreenReaderRefreshHook: je
            };
        }), [ ve, be, me, pe, we, De, _e, je ]);
        if (N.current && !ce[0].activeFound) {
            // listOne active value wasn't found, likely the result of a controlled state reset
            // update interal values, skip the render it will be caught in batch
            Be(ae, undefined, true);
        }
        if (N.current && !ce[1].activeFound) {
            // listTwo active value wasn't found, likely the result of a controlled state reset
            // update interal values, skip the render it will be caught in batch
            Be(ie, undefined, true);
        }
        
        return n().createElement(ke, xe({
            "data-test": "dual-listbox",
            $inline: h ? false : k,
            $fill: h
        }, j),  n().createElement(g.Provider, {
            value: Je
        },  n().createElement(he, {
            index: 0,
            elementRef: T,
            label: le,
            name: ae,
            onClick: ze,
            onKeyDown: Xe,
            onSelectAllClick: Ue
        }, ce[0].options),  n().createElement(Ce, null,  n().createElement(L.Provider, {
            value: Ge
        },  n().createElement(F, {
            ariaLabel: (0, d.sprintf)((0, l._)("Move selected options to %(listLabel)s list"), {
                listLabel: oe
            }),
            ariaKeyShortcuts: "Enter",
            "data-test": "move-to-secondary",
            icon:  n().createElement(v(), {
                hideDefaultTooltip: true,
                screenReaderText: null
            }),
            name: ae,
            tooltipLabel: (0, d.sprintf)((0, l._)("Move to %(listLabel)s"), {
                listLabel: oe
            }),
            tooltipPlacement: "left"
        }),  n().createElement(F, {
            ariaLabel: (0, d.sprintf)((0, l._)("Move selected options to %(listLabel)s list"), {
                listLabel: le
            }),
            ariaKeyShortcuts: "Delete",
            "data-test": "move-to-primary",
            icon:  n().createElement(c(), {
                hideDefaultTooltip: true,
                screenReaderText: null
            }),
            name: ie,
            tooltipLabel: (0, d.sprintf)((0, l._)("Move to %(listLabel)s"), {
                listLabel: le
            }),
            tooltipPlacement: "right"
        }))),  n().createElement(he, {
            index: 1,
            elementRef: $,
            label: oe,
            name: ie,
            onClick: ze,
            onKeyDown: Xe,
            onSelectAllClick: Ue
        }, ce[1].options),  n().createElement(C, null)));
    }
    _e.propTypes = je;
    _e.Option = ne;
    /* harmony default export */    const De = _e;
    // CONCATENATED MODULE: ./src/DualListbox/index.ts
    module.exports = r;
    /******/})();