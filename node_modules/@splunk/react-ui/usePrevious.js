/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var o in t) {
                /******/ if (e.o(t, o) && !e.o(r, o)) {
                    /******/ Object.defineProperty(r, o, {
                        enumerable: true,
                        get: t[o]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* reexport */ n
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    // CONCATENATED MODULE: ./src/usePrevious/usePrevious.tsx
    /**
 * This is a private component not intended for use outside @splunk/react-ui
 *
 * Keeps the previous version of a value. Useful for emulating the "prevState"
 * argument to componentDidUpdate() in functional components.
 * See https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state
 *
 * @param value - The value to store
 */
    function o(e) {
        var r = (0, t.useRef)();
        (0, t.useEffect)((function() {
            r.current = e;
        }), [ e ]);
        return r.current;
    }
    /* harmony default export */    const n = o;
    // CONCATENATED MODULE: ./src/usePrevious/index.ts
    module.exports = r;
    /******/})();