/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Divider: () => /* reexport */ p.Divider,
        Heading: () => /* reexport */ p.Heading,
        Option: () => /* reexport */ J,
        default: () => /* reexport */ $r
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var a =  e.n(o);
    // CONCATENATED MODULE: external "lodash/has"
    const i = require("lodash/has");
    var l =  e.n(i);
    // CONCATENATED MODULE: external "lodash/omit"
    const s = require("lodash/omit");
    var c =  e.n(s);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const u = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/react-ui/Menu"
    const p = require("@splunk/react-ui/Menu");
    // CONCATENATED MODULE: ./src/Select/OptionBase.tsx
    function f(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            f = function e(t) {
                return typeof t;
            };
        } else {
            f = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return f(e);
    }
    function d() {
        d = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return d.apply(this, arguments);
    }
    function v(e, t) {
        if (e == null) return {};
        var n = h(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (o = 0; o < a.length; o++) {
                r = a[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function h(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, a;
        for (a = 0; a < r.length; a++) {
            o = r[a];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function b(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function y(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function m(e, t, n) {
        if (t) y(e.prototype, t);
        if (n) y(e, n);
        return e;
    }
    function g(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) O(e, t);
    }
    function O(e, t) {
        O = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return O(e, t);
    }
    function w(e) {
        var t = x();
        return function n() {
            var r = k(e), o;
            if (t) {
                var a = k(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return S(this, o);
        };
    }
    function S(e, t) {
        if (t && (f(t) === "object" || typeof t === "function")) {
            return t;
        }
        return C(e);
    }
    function C(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function x() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function k(e) {
        k = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return k(e);
    }
    function I(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var _ = {
        /** @private */
        active: a().bool,
        children: a().node,
        description: a().string,
        descriptionPosition: a().oneOf([ "right", "bottom" ]),
        disabled: a().bool,
        hidden: a().bool,
        icon: a().node,
        label: a().string.isRequired,
        /**
   * @private Passed down from <BaseSelect>
   */
        multiple: a().bool,
        matchRanges: a().arrayOf(a().shape({
            start: a().number.isRequired,
            end: a().number.isRequired
        })),
        /** @private */
        onClick: a().func,
        /** @private */
        selected: a().bool,
        truncate: a().bool,
        value: a().oneOfType([ a().string, a().number, a().bool ]).isRequired
    };
    var j = {
        descriptionPosition: "bottom",
        disabled: false,
        multiple: false,
        selected: false,
        truncate: false
    };
    /**
 * An option within a `Multiselect`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */    var E =  function(e) {
        g(n, e);
        var t = w(n);
        function n() {
            var e;
            b(this, n);
            for (var r = arguments.length, o = new Array(r), a = 0; a < r; a++) {
                o[a] = arguments[a];
            }
            e = t.call.apply(t, [ this ].concat(o));
            I(C(e), "c", null);
            I(C(e), "handleClick", (function(t) {
                var n = e.props, r = n.onClick, o = n.value, a = n.disabled;
                if (!a) {
                    r === null || r === void 0 ? void 0 : r(t, {
                        value: o
                    });
                }
            }));
            I(C(e), "handleMount", (function(t) {
                e.c = t;
            }));
            return e;
        }
        m(n, [ {
            key: "scrollIntoViewIfNeeded",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.scrollIntoViewIfNeeded();
            }
            /**
     * Place focus on the button.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, n = t.value, o = t.children, a = t.label, i = t.multiple, l = v(t, [ "value", "children", "label", "multiple" ]);
                
                return r().createElement(p.Item, d({
                    "aria-selected": this.props.selected,
                    "data-test-value": n,
                    "data-test": "option",
                    ref: this.handleMount
                }, l, {
                    selectable: true,
                    selectableAppearance: i ? "checkbox" : undefined,
                    onClick: this.handleClick,
                    role: "option",
                    value: n.toString()
                }), o || a);
            }
        } ]);
        return n;
    }(n.PureComponent);
    I(E, "propTypes", _);
    I(E, "defaultProps", j);
    I(E, "type", p.Item);
    /* harmony default export */    const M = E;
    // CONCATENATED MODULE: ./src/Multiselect/Option.tsx
    function A(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            A = function e(t) {
                return typeof t;
            };
        } else {
            A = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return A(e);
    }
    function P() {
        P = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return P.apply(this, arguments);
    }
    function V(e, t) {
        if (e == null) return {};
        var n = R(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (o = 0; o < a.length; o++) {
                r = a[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function R(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, a;
        for (a = 0; a < r.length; a++) {
            o = r[a];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function D(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function T(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function q(e, t, n) {
        if (t) T(e.prototype, t);
        if (n) T(e, n);
        return e;
    }
    function B(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) N(e, t);
    }
    function N(e, t) {
        N = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return N(e, t);
    }
    function L(e) {
        var t = $();
        return function n() {
            var r = H(e), o;
            if (t) {
                var a = H(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return F(this, o);
        };
    }
    function F(e, t) {
        if (t && (A(t) === "object" || typeof t === "function")) {
            return t;
        }
        return K(e);
    }
    function K(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function $() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function H(e) {
        H = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return H(e);
    }
    function z(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var W = {
        /** @private */
        active: a().bool,
        children: a().node,
        /**
   * @private this is passed down from Multiselect.
   */
        compact: a().bool,
        description: a().string,
        descriptionPosition: a().oneOf([ "right", "bottom" ]),
        disabled: a().bool,
        hidden: a().bool,
        icon: a().node,
        label: a().string.isRequired,
        matchRanges: a().arrayOf(a().shape({
            start: a().number.isRequired,
            end: a().number.isRequired
        })),
        /** @private */
        onClick: a().func,
        /** @private */
        selected: a().bool,
        selectedAppearance: a().oneOf([ "info", "success", "warning", "error" ]),
        selectedBackgroundColor: a().string,
        selectedForegroundColor: a().string,
        truncate: a().bool,
        value: a().oneOfType([ a().string, a().number, a().bool ]).isRequired
    };
    var U = {
        compact: false,
        descriptionPosition: "bottom",
        disabled: false,
        selected: false,
        truncate: false
    };
    /**
 * An option within a `Multiselect`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */    var G =  function(e) {
        B(n, e);
        var t = L(n);
        function n() {
            var e;
            D(this, n);
            for (var r = arguments.length, o = new Array(r), a = 0; a < r; a++) {
                o[a] = arguments[a];
            }
            e = t.call.apply(t, [ this ].concat(o));
            z(K(e), "c", null);
            z(K(e), "handleMount", (function(t) {
                e.c = t;
            }));
            return e;
        }
        q(n, [ {
            key: "scrollIntoViewIfNeeded",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.scrollIntoViewIfNeeded();
            }
            /**
     * Place focus on the button.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.c) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, n = t.compact, o = V(t, [ "compact" ]);
                
                return r().createElement(M, P({}, o, {
                    multiple: n,
                    ref: this.handleMount
                }), this.props.children || this.props.label);
            }
        } ]);
        return n;
    }(n.PureComponent);
    z(G, "propTypes", W);
    z(G, "defaultProps", U);
    /* harmony default export */    const J = G;
    // CONCATENATED MODULE: external "lodash/castArray"
    const Q = require("lodash/castArray");
    var X =  e.n(Q);
    // CONCATENATED MODULE: external "lodash/find"
    const Y = require("lodash/find");
    var Z =  e.n(Y);
    // CONCATENATED MODULE: external "lodash/forEachRight"
    const ee = require("lodash/forEachRight");
    var te =  e.n(ee);
    // CONCATENATED MODULE: external "lodash/includes"
    const ne = require("lodash/includes");
    var re =  e.n(ne);
    // CONCATENATED MODULE: external "lodash/isUndefined"
    const oe = require("lodash/isUndefined");
    var ae =  e.n(oe);
    // CONCATENATED MODULE: external "lodash/keys"
    const ie = require("lodash/keys");
    var le =  e.n(ie);
    // CONCATENATED MODULE: external "lodash/memoize"
    const se = require("lodash/memoize");
    var ce =  e.n(se);
    // CONCATENATED MODULE: external "lodash/pick"
    const ue = require("lodash/pick");
    var pe =  e.n(ue);
    // CONCATENATED MODULE: external "lodash/uniq"
    const fe = require("lodash/uniq");
    var de =  e.n(fe);
    // CONCATENATED MODULE: external "lodash/without"
    const ve = require("lodash/without");
    var he =  e.n(ve);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const be = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
    const ye = require("@splunk/react-ui/Dropdown");
    var me =  e.n(ye);
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const ge = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/ui-utils/filter"
    const Oe = require("@splunk/ui-utils/filter");
    // CONCATENATED MODULE: external "@splunk/react-ui/Link"
    const we = require("@splunk/react-ui/Link");
    var Se =  e.n(we);
    // CONCATENATED MODULE: external "@splunk/react-ui/ResultsMenu"
    const Ce = require("@splunk/react-ui/ResultsMenu");
    var xe =  e.n(Ce);
    // CONCATENATED MODULE: external "@splunk/react-ui/Text"
    const ke = require("@splunk/react-ui/Text");
    var Ie =  e.n(ke);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
    const _e = require("@splunk/react-icons/CaretSmallDown");
    var je =  e.n(_e);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
    const Ee = require("@splunk/react-icons/enterprise/Caret");
    var Me =  e.n(Ee);
    // CONCATENATED MODULE: external "@splunk/themes"
    const Ae = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Select/icons/CaretSmallDown.tsx
    var Pe = function e() {
        var t = (0, Ae.useSplunkTheme)(), n = t.isEnterprise;
        var o = n ?  r().createElement(Me(), {
            screenReaderText: null,
            hideDefaultTooltip: true,
            size: .5
        }) :  r().createElement(je(), null);
        return o;
    };
    /* harmony default export */    const Ve = Pe;
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Search"
    const Re = require("@splunk/react-icons/enterprise/Search");
    var De =  e.n(Re);
    // CONCATENATED MODULE: external "@splunk/react-icons/Magnifier"
    const Te = require("@splunk/react-icons/Magnifier");
    var qe =  e.n(Te);
    // CONCATENATED MODULE: ./src/Select/icons/Search.tsx
    var Be = function e() {
        var t = (0, Ae.useSplunkTheme)(), n = t.isEnterprise, o = t.isCompact;
        var a = (0, u._)("Search");
        var i = o ? "20px" : "24px";
        var l = n ?  r().createElement(De(), {
            role: "presentation",
            size: "16px",
            screenReaderText: a,
            hideDefaultTooltip: true
        }) :  r().createElement(qe(), {
            role: "presentation",
            "aria-label": a,
            width: i,
            height: i
        });
        return l;
    };
    /* harmony default export */    const Ne = Be;
    // CONCATENATED MODULE: external "styled-components"
    const Le = require("styled-components");
    var Fe =  e.n(Le);
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const Ke = require("@splunk/react-ui/Clickable");
    var $e =  e.n(Ke);
    // CONCATENATED MODULE: external "@splunk/react-ui/Switch"
    const He = require("@splunk/react-ui/Switch");
    var ze =  e.n(He);
    // CONCATENATED MODULE: ./src/Menu/ItemStyles.ts
    var We = (0, Le.css)([ "color:", ";font-size:", ";line-height:", ";overflow:inherit;white-space:inherit;text-overflow:inherit;" ], (0, 
    Ae.pick)({
        prisma: Ae.variables.contentColorDefault,
        enterprise: Ae.variables.textGray
    }), Ae.variables.fontSizeSmall, (0, Ae.pick)({
        prisma: "16px"
    }));
    var Ue = Fe().span.withConfig({
        displayName: "ItemStyles__StyledItemDescriptionBottom",
        componentId: "sc-4kc053-0"
    })([ "", ";display:block;" ], We);
    var Ge = Fe().span.withConfig({
        displayName: "ItemStyles__StyledItemDescriptionRight",
        componentId: "sc-4kc053-1"
    })([ "", ";float:right;padding-left:", ";max-width:50%;text-align:right;box-sizing:border-box;" ], We, Ae.variables.spacing);
    var Je = Fe().div.withConfig({
        displayName: "ItemStyles__StyledItemSelectedIcon",
        componentId: "sc-4kc053-2"
    })([ "position:absolute;", " color:", ";" ], (0, Ae.pick)({
        prisma: (0, Le.css)([ "right:16px;" ]),
        enterprise: (0, Le.css)([ "right:3px;left:8px;" ])
    }), (0, Ae.pick)({
        prisma: Ae.variables.contentColorActive,
        enterprise: Ae.variables.accentColorL10
    }));
    var Qe = Fe().span.withConfig({
        displayName: "ItemStyles__StyledItemIcon",
        componentId: "sc-4kc053-3"
    })([ "flex:0 0 auto;padding-right:", ";min-width:10px;display:inline-block;text-align:center;vertical-align:", ";", "" ], (0, 
    Ae.pick)({
        prisma: "8px",
        enterprise: "3px"
    }), (0, Ae.pick)({
        prisma: "initial",
        enterprise: "middle"
    }), (0, Ae.pick)({
        prisma: (0, Le.css)([ "color:", ";display:inline-flex;align-items:center;min-width:20px;min-height:20px;& > svg{width:20px;height:20px;}" ], Ae.variables.contentColorMuted),
        enterprise: (0, Le.css)([ "transform:translateY(-1px);" ])
    }));
    var Xe = Fe()($e()).withConfig({
        displayName: "ItemStyles__StyledClickable",
        componentId: "sc-4kc053-4"
    })([ "display:block;position:relative;cursor:pointer;color:", ";word-wrap:break-word;max-width:100%;width:100%;padding:", ";", " ", " ", " &:not([disabled]){&:hover{background:", ";", "}&:focus{outline:0;box-shadow:", ";", "}", " ", "}&[disabled]{color:", ";cursor:not-allowed;", ",", "{color:inherit;}", "{cursor:not-allowed;color:", ";}", "}", "" ], (0, 
    Ae.pick)({
        prisma: Ae.variables.contentColorActive,
        enterprise: {
            dark: Ae.variables.gray96,
            light: Ae.variables.gray22
        }
    }), (0, Ae.pick)({
        prisma: {
            comfortable: "10px 16px",
            compact: "6px 16px"
        },
        enterprise: "6px 10px"
    }), (function(e) {
        var t = e.$isSelectable, n = e.$selectableAppearance;
        return t && (0, Ae.pick)({
            prisma: (0, Le.css)([ "padding-right:44px;", "" ], (function() {
                return n === "checkbox" && "padding-left: 42px;";
            })),
            enterprise: (0, Le.css)([ "padding-right:10px;padding-left:", ";" ], (function() {
                return n === "checkbox" ? "32px" : "28px";
            }))
        });
    }), (function(e) {
        var t = e.$active, n = e.$preventFocus;
        return t && !n && (0, Le.css)([ "box-shadow:", ";" ], Ae.variables.focusShadowInset);
    }), (function(e) {
        var t = e.$active;
        return t && (0, Le.css)([ "background:", ";font-weight:", ";" ], (0, Ae.pick)({
            enterprise: {
                light: Ae.variables.gray92,
                dark: Ae.variables.gray22
            },
            prisma: Ae.variables.neutral100
        }), Ae.variables.fontWeightBold);
    }), (0, Ae.pick)({
        prisma: Ae.variables.interactiveColorOverlayHover,
        enterprise: Ae.variables.backgroundColorHover
    }), (function(e) {
        var t = e.$selected;
        return t && (0, Ae.pick)({
            prisma: (0, Le.css)([ "background:", ";" ], Ae.mixins.overlayColors(Ae.variables.interactiveColorOverlaySelected, Ae.variables.interactiveColorOverlayHover))
        });
    }), Ae.variables.focusShadowInset, (0, Ae.pick)({
        prisma: (0, Le.css)([ "background:", ";" ], Ae.variables.interactiveColorOverlayHover)
    }), (0, Ae.pick)({
        prisma: (0, Le.css)([ "&:active{background:", ";}" ], Ae.variables.interactiveColorOverlayActive)
    }), (function(e) {
        var t = e.$selected;
        return t && (0, Ae.pick)({
            prisma: (0, Le.css)([ "background:", ";&:active{background:", ";}" ], Ae.variables.interactiveColorOverlaySelected, Ae.mixins.overlayColors(Ae.variables.interactiveColorOverlaySelected, Ae.variables.interactiveColorOverlayActive))
        });
    }), (0, Ae.pick)({
        enterprise: {
            light: Ae.variables.gray45,
            dark: Ae.variables.contentColorDisabled
        },
        prisma: Ae.variables.contentColorDisabled
    }), 
    /* sc-sel */
    Ue, 
    /* sc-sel */
    Ge, 
    /* sc-sel */
    Je, (0, Ae.pick)({
        prisma: Ae.variables.contentColorDisabled,
        enterprise: Ae.variables.gray80
    }), (0, Ae.pick)({
        prisma: (0, Le.css)([ "& > * > ", "{color:", ";}" ], 
        /* sc-sel */
        Qe, Ae.variables.contentColorDisabled)
    }), (function(e) {
        var t = e.$selected;
        return t && (0, Ae.pick)({
            prisma: (0, Le.css)([ "", "{color:", ";}" ], 
            /* sc-sel */
            Qe, Ae.variables.contentColorActive)
        });
    }));
    var Ye = Fe()(ze()).withConfig({
        displayName: "ItemStyles__StyledSwitch",
        componentId: "sc-4kc053-5"
    })([ "position:absolute;left:", ";top:", ";" ], (0, Ae.pick)({
        prisma: "16px",
        enterprise: "8px"
    }), (0, Ae.pick)({
        prisma: "0px",
        enterprise: {
            comfortable: "-1px",
            compact: "2px"
        }
    }));
    var Ze = Fe().span.withConfig({
        displayName: "ItemStyles__StyledInnerWrapper",
        componentId: "sc-4kc053-6"
    })([ "display:flex;align-items:flex-start;" ]);
    var et = Fe().span.withConfig({
        displayName: "ItemStyles__StyledTitleAndDescriptionWrapper",
        componentId: "sc-4kc053-7"
    })([ "display:flex;flex-wrap:wrap;flex-direction:column;max-width:100%;width:100%;align-self:center;word-break:break-word;white-space:normal;", "" ], (function(e) {
        var t = e.$truncate;
        return t && (0, Le.css)([ "white-space:nowrap;overflow:hidden;text-overflow:ellipsis;" ]);
    }));
    var tt = Fe().div.withConfig({
        displayName: "ItemStyles__StyledLabel",
        componentId: "sc-4kc053-8"
    })([ "overflow:inherit;white-space:inherit;text-overflow:inherit;max-width:100%;min-height:20px;", "" ], (function(e) {
        var t = e.$truncate;
        return t && (0, Le.css)([ "display:block;clear:both;" ]);
    }));
    var nt = Fe().span.withConfig({
        displayName: "ItemStyles__StyledMatch",
        componentId: "sc-4kc053-9"
    })([ "border-bottom:1px solid ", ";" ], (0, Ae.pick)({
        prisma: Ae.variables.contentColorActive,
        enterprise: {
            dark: Ae.variables.gray96,
            light: Ae.variables.gray45
        }
    }));
    var rt = Fe().span.withConfig({
        displayName: "ItemStyles__StyledSubmenu",
        componentId: "sc-4kc053-10"
    })([ "float:right;padding-left:", ";color:", ";", "" ], Ae.variables.spacingSmall, (0, 
    Ae.pick)({
        prisma: "inherit",
        enterprise: Ae.variables.textGray
    }), (0, Ae.pick)({
        prisma: (0, Le.css)([ "& > svg{width:20px;height:20px;}" ])
    }));
    // CONCATENATED MODULE: ./src/Select/SelectAllOptionStyles.ts
    var ot = Fe()(tt).withConfig({
        displayName: "SelectAllOptionStyles__StyledSelectAllLabel",
        componentId: "y6bn08-0"
    })([ "font-weight:", ";" ], Ae.variables.fontWeightBold);
    var at = Fe()(M).withConfig({
        displayName: "SelectAllOptionStyles__StyledSelectAllOption",
        componentId: "y6bn08-1"
    })([ "padding-inline-start:", ";box-shadow:none;" ], (0, Ae.pick)({
        prisma: "42px;",
        enterprise: "32px;"
    }));
    // CONCATENATED MODULE: ./src/Select/SelectAllOption.tsx
    var it = {
        active: a().bool,
        elementRef: a().oneOfType([ a().func, a().object ]),
        id: a().string,
        onClick: a().func,
        selectAllLabel: a().string,
        totalCount: a().number,
        changedToggle: a().bool,
        selected: a().oneOf([ false, true, "some" ])
    };
    var lt =  r().forwardRef((function(e, t) {
        var n = e.active, o = e.id, a = e.onClick, i = e.selectAllLabel, l = e.totalCount, s = e.changedToggle, c = e.selected;
        // When toggle is changed the total count is not displayed anymore so the count is now shown in the Select all menu item
                var p = s ? " (".concat(l === null || l === void 0 ? void 0 : l.toString(), ")") : "";
        
        return r().createElement(at, {
            label: i,
            value: "selectAll",
            key: "selectAll",
            onClick: a,
            "data-test": "select-all",
            "aria-keyshortcuts": "Control+A",
            id: o,
            active: n,
            ref: t,
            tabIndex: -1
        },  r().createElement(Ye, {
            interactive: false,
            selected: c === "some" && "some" || c,
            key: "main-checkbox",
            value: "main-checkbox",
            appearance: "checkbox",
            "aria-label": !c && (0, u._)("No options selected") || c === "some" && (0, u._)("Some options selected") || (0, 
            u._)("All options selected"),
            "data-test": "select-all-switch",
            selectedLabel: c === true ? (0, u._)("All options selected") : (0, u._)("Option selected"),
            unselectedLabel: c === true ? (0, u._)("No options selected") : (0, u._)("Option unselected"),
            someSelectedLabel: (0, u._)("Some options selected")
        }),  r().createElement(Ge, {
            "data-test": "description"
        }, "".concat(p, " Ctrl-a")),  r().createElement(Ze, null,  r().createElement(et, {
            $truncate: false
        },  r().createElement(ot, {
            $truncate: false
        }, i))));
    }));
    lt.propTypes = it;
    /* harmony default export */    const st = lt;
    // CONCATENATED MODULE: external "@splunk/react-ui/Button"
    const ct = require("@splunk/react-ui/Button");
    var ut =  e.n(ct);
    // CONCATENATED MODULE: ./src/Select/SelectBaseStyles.ts
    var pt = Fe()(ut()).withConfig({
        displayName: "SelectBaseStyles__StyledButton",
        componentId: "sc-16cj7sk-0"
    })([ "&[data-inline]{width:", ";}", "" ], (function(e) {
        var t = e.$multiple;
        return t ? "400px" : "auto";
    }), (function(e) {
        var t = e.$multiple;
        return !t && "flex-grow: 0;";
    }));
    var ft = Fe().span.withConfig({
        displayName: "SelectBaseStyles__StyledLinkIcon",
        componentId: "sc-16cj7sk-1"
    })([ "padding-right:2px;" ]);
    var dt = Fe().span.withConfig({
        displayName: "SelectBaseStyles__StyledLinkCaret",
        componentId: "sc-16cj7sk-2"
    })([ "padding-left:2px;" ]);
    var vt = Fe().div.withConfig({
        displayName: "SelectBaseStyles__StyledFilter",
        componentId: "sc-16cj7sk-3"
    })([ "padding:", ";min-width:160px;" ], (0, Ae.pick)({
        enterprise: "8px",
        prisma: "10px 16px"
    }));
    var ht = Fe().span.withConfig({
        displayName: "SelectBaseStyles__StyledSearchIconWrapper",
        componentId: "sc-16cj7sk-4"
    })([ "color:", ";pointer-events:none;padding:", ";" ], (0, Ae.pick)({
        enterprise: {
            light: Ae.variables.gray60,
            dark: Ae.variables.white
        },
        prisma: Ae.variables.contentColorMuted
    }), (0, Ae.pick)({
        comfortable: "0 8px",
        compact: "0 6px"
    }));
    var bt = Fe().span.withConfig({
        displayName: "SelectBaseStyles__StyledCount",
        componentId: "sc-16cj7sk-5"
    })([ "padding-right:", ";" ], (0, Ae.pick)({
        enterprise: Ae.variables.spacingQuarter,
        prisma: Ae.variables.spacingXSmall
    }));
    var yt = Fe()(Se()).withConfig({
        displayName: "SelectBaseStyles__StyledControlsLink",
        componentId: "sc-16cj7sk-6"
    })([ "margin-right:20px;", ";" ], (function(e) {
        var t = e.$disabled;
        return t && (0, Le.css)([ "color:", ";" ], Ae.variables.contentColorDisabled);
    }));
    var mt = Fe().div.withConfig({
        displayName: "SelectBaseStyles__StyledToggleAllControls",
        componentId: "sc-16cj7sk-7"
    })([ "padding:", ";", "" ], (0, Ae.pick)({
        enterprise: "5px 8px",
        prisma: "10px 16px"
    }), (0, Ae.pickVariant)("$placement", {
        above: {
            enterprise: (0, Le.css)([ "border-top:", ";" ], Ae.variables.border),
            prisma: (0, Le.css)([ "border-top:1px solid ", ";" ], Ae.variables.neutral200)
        },
        below: {
            enterprise: (0, Le.css)([ "border-bottom:", ";" ], Ae.variables.border),
            prisma: (0, Le.css)([ "border-bottom:1px solid ", ";" ], Ae.variables.neutral200)
        }
    }));
    // CONCATENATED MODULE: ./src/utils/fuzzyMatch.ts
    // A utility for matching keyboard characters to list values
    var gt = function e(t, n) {
        return t ? t.label.charAt(n).toLowerCase() : "";
    };
    var Ot = function e(t, n) {
        if (!t.length) {
            return t;
        }
        var r = null;
        var o = false;
        var a = t.filter((function(e) {
            var t = gt(e, n.index);
            if (t === n.value) {
                o = true;
                return true;
            }
 // If we haven't found a match yet, keep track of the next closest match.
            // Secondary matching looks for the closest character of a higher value, and failing that, closest of a lower value.
                        if (!o) {
                var a = gt(r, n.index);
                if (!a) {
                    r = e;
                } else if (t > n.value) {
                    if (a < n.value) {
                        r = e;
                    } else if (a > t) {
                        r = e;
                    }
                } else if (t > a) {
                    r = e;
                }
            }
            return false;
        }));
        return a.length === 0 && r ? [ r ] : a;
    };
    // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var wt = {
        body: {
            appendChild: function e() {
                return [];
            }
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        activeElement: {
            blur: function e() {},
            nodeName: ""
        },
        querySelector: function e() {
            return null;
        },
        querySelectorAll: function e() {
            return [];
        },
        getElementById: function e() {
            return null;
        },
        createEvent: function e() {
            return {
                initEvent: function e() {}
            };
        },
        createElement: function e() {
            return {
                children: [],
                childNodes: [],
                style: {},
                setAttribute: function e() {},
                getElementsByTagName: function e() {
                    return [];
                }
            };
        },
        createElementNS: function e() {
            return {};
        },
        importNode: function e() {
            return null;
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        }
    };
    function St() {
        var e = typeof document !== "undefined" ? document : wt;
        return e;
    }
    // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var Ct = {
        document: wt,
        navigator: {
            userAgent: ""
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        },
        history: {
            replaceState: function e() {},
            pushState: function e() {},
            go: function e() {},
            back: function e() {}
        },
        CustomEvent: function e() {
            return this;
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        getComputedStyle: function e() {
            return {
                getPropertyValue: function e() {
                    return "";
                }
            };
        },
        Image: function e() {},
        Date: function e() {},
        screen: {},
        setTimeout: function e() {},
        clearTimeout: function e() {},
        matchMedia: function e() {
            return {};
        },
        requestAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                t();
                return null;
            }
            return setTimeout(t, 0);
        },
        cancelAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                return;
            }
            clearTimeout(t);
        }
    };
    function xt() {
        var e = typeof window !== "undefined" ? window : Ct;
        return e;
    }
    // CONCATENATED MODULE: ./src/Select/SelectBase.tsx
    function kt() {
        kt = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return kt.apply(this, arguments);
    }
    function It(e, t) {
        return Et(e) || jt(e, t) || Pt(e, t) || _t();
    }
    function _t() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function jt(e, t) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
        var n = [];
        var r = true;
        var o = false;
        var a = undefined;
        try {
            for (var i = e[Symbol.iterator](), l; !(r = (l = i.next()).done); r = true) {
                n.push(l.value);
                if (t && n.length === t) break;
            }
        } catch (e) {
            o = true;
            a = e;
        } finally {
            try {
                if (!r && i["return"] != null) i["return"]();
            } finally {
                if (o) throw a;
            }
        }
        return n;
    }
    function Et(e) {
        if (Array.isArray(e)) return e;
    }
    function Mt(e) {
        return Rt(e) || Vt(e) || Pt(e) || At();
    }
    function At() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Pt(e, t) {
        if (!e) return;
        if (typeof e === "string") return Dt(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Dt(e, t);
    }
    function Vt(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function Rt(e) {
        if (Array.isArray(e)) return Dt(e);
    }
    function Dt(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Tt(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function qt(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Bt(e, t, n) {
        if (t) qt(e.prototype, t);
        if (n) qt(e, n);
        return e;
    }
    function Nt(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Lt(e, t);
    }
    function Lt(e, t) {
        Lt = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Lt(e, t);
    }
    function Ft(e) {
        var t = Ht();
        return function n() {
            var r = zt(e), o;
            if (t) {
                var a = zt(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return Kt(this, o);
        };
    }
    function Kt(e, t) {
        if (t && (Wt(t) === "object" || typeof t === "function")) {
            return t;
        }
        return $t(e);
    }
    function $t(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Ht() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function zt(e) {
        zt = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return zt(e);
    }
    function Wt(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Wt = function e(t) {
                return typeof t;
            };
        } else {
            Wt = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Wt(e);
    }
    function Ut(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function Gt(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                Ut(Object(n), true).forEach((function(t) {
                    Jt(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                Ut(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function Jt(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Qt = {
        allowKeyMatching: a().bool,
        allowNewValues: a().bool,
        animateLoading: a().bool,
        appearance: a().oneOf([ "default", "link", "primary", "pill", "toggle", "flat" ]),
        append: a().bool,
        children: a().node,
        defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
        defaultValues: a().array,
        describedBy: a().string,
        disabled: a().bool,
        elementRef: a().oneOfType([ a().func, a().object ]),
        error: a().bool,
        filter: a().oneOf([ false, true, "controlled" ]),
        footerMessage: a().node,
        inline: a().bool,
        inputId: a().string,
        inputRef: a().oneOfType([ a().func, a().object ]),
        isLoadingOptions: a().bool,
        labelledBy: a().string,
        labelText: a().string,
        loadingMessage: a().node,
        menuStyle: a().object,
        multiple: a().bool,
        name: a().string,
        noOptionsMessage: a().node,
        onChange: a().func,
        onClose: a().func,
        onFilterChange: a().func,
        onOpen: a().func,
        onScroll: a().func,
        onScrollBottom: a().func,
        /** @private. */
        required: a().bool,
        placeholder: a().string,
        prefixLabel: a().string,
        prepend: a().bool,
        repositionMode: a().oneOf([ "none", "flip" ]),
        selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
        showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
        suffixLabel: a().string,
        tabConfirmsNewValue: a().bool,
        toggleContent: a().oneOf([ "optionChildren", "optionLabel" ]),
        values: a().array,
        /** @private. */
        virtualization: a().number
    };
    var Xt = {
        allowKeyMatching: true,
        allowNewValues: false,
        animateLoading: false,
        appearance: "toggle",
        append: false,
        defaultPlacement: "vertical",
        disabled: false,
        filter: false,
        inline: false,
        isLoadingOptions: false,
        menuStyle: {},
        multiple: false,
        noOptionsMessage: (0, u._)("No matches"),
        placeholder: (0, u._)("Select..."),
        prepend: false,
        repositionMode: "flip",
        selectAllAppearance: "buttongroup",
        tabConfirmsNewValue: false,
        toggleContent: "optionChildren"
    };
    var Yt = ce()((function(e) {
        return [ e ];
    }));
 // preserve separate widths for single vs. multi mode
        var Zt = ce()((function(e) {
        var t = e.anchorWidth, n = e.isMultiple, r = e.maxHeight, o = e.menuStyle;
        return n ? Gt({
            width: Math.max(t !== null && t !== void 0 ? t : 0, 200),
            maxHeight: r
        }, o) : Gt({
            minWidth: t !== null && t !== void 0 ? t : undefined,
            maxWidth: Math.max(t !== null && t !== void 0 ? t : 0, 300),
            maxHeight: r
        }, o);
    }));
    var en = [ "clickAway", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
    function tn(e) {
        return e && l()(e.props, "value");
    }
    function nn(e, t) {
        return "".concat(Wt(e), "-").concat(e, "-").concat(t);
    }
    var rn =  function(e) {
        Nt(o, e);
        var t = Ft(o);
        Bt(o, null, [ {
            key: "validateAppearance",
            // @docs-props-type CompactPropsBase
            value: function e(t) {
                if (false) {}
            }
        } ]);
        function o(e) {
            var a;
            Tt(this, o);
            a = t.call(this, e);
            Jt($t(a), "activeItemId", void 0);
            Jt($t(a), "activeValue", void 0);
            Jt($t(a), "availableOptionCount", void 0);
            Jt($t(a), "controlledExternally", void 0);
            Jt($t(a), "displayedValues", void 0);
            Jt($t(a), "dropdown", null);
            Jt($t(a), "firstSelectedEnabledOption", null);
            Jt($t(a), "firstSelectedOptionIndex", void 0);
            Jt($t(a), "menuId", void 0);
            Jt($t(a), "menuListboxId", void 0);
            Jt($t(a), "previousActiveIndex", null);
            Jt($t(a), "selectedOptionCount", void 0);
            Jt($t(a), "optionRefsByKey", void 0);
            Jt($t(a), "matchCharacter", void 0);
            Jt($t(a), "matchTimeout", void 0);
            Jt($t(a), "currentMatchOptions", void 0);
            Jt($t(a), "availableMatchOptions", void 0);
            Jt($t(a), "optionSelection", void 0);
            Jt($t(a), "resetMatches", (function() {
                a.matchCharacter = null;
                a.currentMatchOptions = [];
                if (a.matchTimeout) {
                    clearTimeout(a.matchTimeout);
                }
            }));
            Jt($t(a), "handleSelectAll", (function(e) {
                var t, n, o;
                var i = a.props, l = i.name, s = i.children, c = i.multiple;
 // this doesn't make sense if we can't select multiple values
                                if (!c) {
                    return;
                }
                var u = (t = a.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var p = de()(u.concat(a.displayedValues));
                p = r().Children.toArray(s).filter((function(e) {
                    return tn(e) && re()(p, e.props.value) && (!e.props.disabled || re()(u, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!a.isControlled()) {
                    a.setState({
                        values: p
                    });
                }
                (n = (o = a.props).onChange) === null || n === void 0 ? void 0 : n.call(o, e, {
                    values: p,
                    name: l,
                    reason: "selectAll"
                });
            }));
            Jt($t(a), "handleClearAll", (function(e) {
                var t, n, o;
                var i = a.props, l = i.name, s = i.children, c = i.multiple;
 // this doesn't make sense if we can't select multiple values
                                if (!c) {
                    return;
                }
                var u = (t = a.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var p = he().apply(void 0, [ u ].concat(Mt(a.displayedValues)));
 // this will unselect all selected values unless those values are disabled or hidden by the filter
                                var f = r().Children.toArray(s).filter((function(e) {
                    return tn(e) && (re()(u, e.props.value) && e.props.disabled || re()(p, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!a.isControlled()) {
                    a.setState({
                        values: f
                    });
                }
                (n = (o = a.props).onChange) === null || n === void 0 ? void 0 : n.call(o, e, {
                    values: f,
                    name: l,
                    reason: "clearAll"
                });
            }));
            Jt($t(a), "handleTextKeyDown", (function(e) {
                var t = a.props, r = t.children, o = t.onScrollBottom, i = t.tabConfirmsNewValue;
                var l = (0, ge.keycode)(e.nativeEvent);
                if (l === "tab") {
                    if (i && !ae()(a.activeValue) && a.availableOptionCount <= 1) {
                        e.preventDefault();
                        a.toggleValue(e, a.activeValue);
                    }
                }
                if (e.shiftKey || e.metaKey || e.ctrlKey) {
                    if (l === "a" && (e.ctrlKey || e.metaKey)) {
                        // handle control + A
                        if (a.optionSelection === "all") {
                            a.handleClearAll(e);
                        } else {
                            a.handleSelectAll(e);
                        }
                    }
                    return;
                }
                if (l === "down") {
                    e.preventDefault();
                    a.setState((function(e) {
                        return {
                            activeIndex: Math.min(e.activeIndex + 1, a.props.selectAllAppearance === "checkbox" ? a.availableOptionCount : a.availableOptionCount - 1)
                        };
                    }));
                    if (r && o) {
                        var s;
                        var c = n.Children.toArray(r).length - (2 + ((s = a.getCurrentValues()) !== null && s !== void 0 ? s : []).length);
                        if (a.state.activeIndex === c) {
                            a.handleScrollBottom(e);
                        }
                    }
                }
                if (l === "up") {
                    e.preventDefault();
                    a.setState((function(e) {
                        return {
                            activeIndex: Math.max(e.activeIndex - 1, 0)
                        };
                    }));
                }
                if (l === "enter" && !ae()(a.activeValue) && a.state.open) {
                    if (a.activeValue === "selectAll") {
                        if (a.optionSelection === "all") {
                            a.handleClearAll(e);
                        } else {
                            a.handleSelectAll(e);
                        }
                    } else {
                        e.preventDefault();
                        a.toggleValue(e, a.activeValue);
                    }
                }
            }));
            Jt($t(a), "handleMenuOptionClick", (function(e, t) {
                var n = t.value;
                e.preventDefault();
                if (!a.state.open) {
                    return;
                }
                a.toggleValue(e, n);
            }));
            Jt($t(a), "handleMenuOptionKeyDown", (function(e, t) {
                var n = e.nativeEvent.key;
 // Checking for a single character to avoid complications from double-byte languages and emojis.
                                if (n.length === 1) {
                    var r = [];
                    var o = {
                        index: 0,
                        value: n
                    };
                    if (!a.matchCharacter) {
                        if (n === " ") {
                            a.resetMatches();
                            return;
                        }
                        r = Ot(a.availableMatchOptions, o);
                    } else if (a.currentMatchOptions.length > 1) {
                        o.index = a.matchCharacter.index + 1;
                        r = Ot(a.currentMatchOptions, o);
                    }
                    if (r.length) {
                        var i = 0;
 // If the active option is a first character match, cycle to the next matching option.
                                                if (o.index === 0 && r.length > 1) {
                            var l = r.indexOf(a.availableMatchOptions[t]);
                            if (l >= 0) {
                                i = l === r.length - 1 ? 0 : l + 1;
                            }
                        }
                        var s = r[i];
                        var c = a.optionRefsByKey[nn(s.value, s.label)];
                        if (c != null) {
                            var u;
                            (u = c.focus) === null || u === void 0 ? void 0 : u.call(c);
                        }
                    }
                    a.currentMatchOptions = r;
                    a.matchCharacter = o;
                    if (a.matchTimeout) {
                        clearTimeout(a.matchTimeout);
                    }
                    a.matchTimeout = setTimeout(a.resetMatches, 500);
                    e.preventDefault();
                    e.stopPropagation();
                }
            }));
            Jt($t(a), "handleTextChange", (function(e, t) {
                var n, r;
                var o = t.value;
                a.setState({
                    filterKeyword: o,
                    open: true,
                    activeIndex: 0
                });
                (n = (r = a.props).onFilterChange) === null || n === void 0 ? void 0 : n.call(r, e, {
                    keyword: o
                });
            }));
            Jt($t(a), "handleTextFocus", (function() {
                a.setState({
                    textHasFocus: true
                });
            }));
            Jt($t(a), "handleTextBlur", (function() {
                a.setState({
                    textHasFocus: false
                });
            }));
            Jt($t(a), "handleRequestOpen", (function(e) {
                var t = {
                    open: true,
                    topValues: a.getTopValues()
                };
 // SUI-3234: preserve existing behavior difference between <Select> and <Multiselect.Compact>
                                if (a.props.multiple) {
                    t.filterKeyword = "";
                }
                var n = a.state.filterKeyword;
                a.setState(t, (function() {
                    var t, r;
                    (t = (r = a.props).onOpen) === null || t === void 0 ? void 0 : t.call(r);
                    if (a.firstSelectedEnabledOption && !a.hasFilter()) {
                        a.firstSelectedEnabledOption.focus();
                    } else {
                        var o;
                        a.setState({
                            activeIndex: (o = a.firstSelectedOptionIndex) !== null && o !== void 0 ? o : 0
                        });
                    }
                    if (n !== a.state.filterKeyword) {
                        var i, l;
                        (i = (l = a.props).onFilterChange) === null || i === void 0 ? void 0 : i.call(l, e, {
                            keyword: a.state.filterKeyword
                        });
                    }
                }));
            }));
            Jt($t(a), "handleRequestClose", (function() {
                a.setState({
                    open: false,
                    activeIndex: 0
                }, (function() {
                    var e, t;
                    a.previousActiveIndex = null;
                    (e = (t = a.props).onClose) === null || e === void 0 ? void 0 : e.call(t);
                }));
            }));
            Jt($t(a), "handleScrollBottom", (function(e) {
                if (a.state.open && !a.props.isLoadingOptions) {
                    var t, n;
                    (t = (n = a.props).onScrollBottom) === null || t === void 0 ? void 0 : t.call(n, e);
                }
            }));
            Jt($t(a), "handleActiveOptionMount", (function(e) {
                if (a.previousActiveIndex !== a.state.activeIndex) {
                    e === null || e === void 0 ? void 0 : e.scrollIntoViewIfNeeded();
                }
            }));
            Jt($t(a), "handleOptionMount", (function(e, t, n) {
                if (n) {
                    a.firstSelectedEnabledOption = e;
                }
                if (e == null) {
                    delete a.optionRefsByKey[t];
                } else {
                    a.optionRefsByKey[t] = e;
                }
            }));
            Jt($t(a), "createToggle", (function() {
                var e;
                var t = a.props, i = t.toggle, l = t.appearance, s = t.children, p = t.describedBy, f = t.disabled, d = t.elementRef, v = t.error, h = t.inline, b = t.labelledBy, y = t.labelText, m = t.multiple, g = t.placeholder, O = t.prefixLabel, w = t.required, S = t.suffixLabel, C = t.toggleContent;
                var x;
                var k;
                var I = [];
 // Generate buttonLabels
                                var _ = (e = a.getCurrentValues()) !== null && e !== void 0 ? e : [];
                var j = n.Children.toArray(s);
                var E = _.reduce((function(e, t, n, r) {
                    var o = Z()(j, (function(e) {
                        return tn(e) && e.props.value === t;
                    }));
                    if (o) {
                        var a = C !== "optionLabel" && o.props.children ? o.props.children : o.props.label;
                        e.push(a);
                        I.push(o.props.label);
 // if not in multiple mode, add the icon
                                                if (!m && _.length === 1) {
                            x = o.props.icon;
                        }
                    } else if (m) {
                        // only add values that don't match an option in "multiple" mode to preserve old behaviour
                        e.push(t);
                        I.push(t.toString());
                    }
                    if (n < r.length - 1) {
                        e.push((0, u._)(", "));
                        I.push((0, u._)(", "));
                    }
                    return e;
                }), []);
                k = E;
 // only apply prefix / suffix if the label is not empty
                                if (k.length > 0) {
                    k = a.wrapLabel({
                        prefixLabel: O,
                        label: k,
                        suffixLabel: S
                    });
                }
 // single <Select> behaviour is to show the placeholder if all parts of the the label
                // are empty strings so we replicate this behaviour here
                                if (k.length === 0 || !m && k.every((function(e) {
                    return e === "";
                }))) {
                    k = Yt(g);
 // placeholder has a default value so will not be undefined
                                        I = Yt(g);
                }
 // If there's more than one item selected, read out the selected total
                // rather than reading out each selected item
                                if (k.length > 1) {
                    I = a.wrapLabel({
                        prefixLabel: O,
                        label: [ "".concat(_.length, " items selected") ],
                        suffixLabel: S
                    });
                } else {
                    I = a.wrapLabel({
                        prefixLabel: O,
                        label: I,
                        suffixLabel: S
                    });
                }
                var M = Gt({
                    "aria-describedby": p,
                    "aria-label": "".concat(y ? "".concat(y, ", ") : "").concat(I.join("")),
                    "aria-labelledby": y ? undefined : b,
                    "aria-required": w,
                    "data-select-appearance": l,
                    "data-test": m ? "multiselect" : "select",
                    disabled: f,
                    elementRef: d,
                    error: v
                }, c()(a.props, le()(o.propTypes)));
                if (m) {
                    M["data-test-values"] = JSON.stringify(_);
                } else {
                    var A = It(_, 1), P = A[0];
                    M["data-test-value"] = P;
                }
                if (i) {
                    
                    return (0, n.cloneElement)(i, M);
                }
                if (l === "link") {
                    
                    return r().createElement(Se(), kt({}, M, {
                        "data-select-appearance": "link"
                    }), !!x &&  r().createElement(ft, null, x), k || g,  r().createElement(dt, null,  r().createElement(Ve, null)));
                }
                
                return r().createElement(pt, kt({}, M, {
                    $multiple: m,
                    appearance: l,
                    label: k,
                    error: v,
                    icon: x,
                    inline: h,
                    isMenu: true,
                    "aria-haspopup": "listbox",
                    "aria-owns": a.menuId,
                    onClick: a.props.onClick
                }, pe()(a.props, o.invalidLinkAppearanceProps)), !!_.length && m &&  r().createElement(bt, {
                    "data-role": "count"
                }, "(", _.length, ")"));
            }));
            Jt($t(a), "createChildren", (function() {
                var e = a.state, t = e.filterKeyword, o = e.textHasFocus, i = e.topValues;
                var l = a.props, s = l.allowKeyMatching, c = l.allowNewValues, f = l.filter, d = l.multiple, v = l.selectAllAppearance, h = l.showSelectedValuesFirst, b = l.isLoadingOptions, y = l.onScrollBottom;
                var m = a.getCurrentValues();
                a.availableOptionCount = 0;
                a.firstSelectedOptionIndex = undefined;
                a.selectedOptionCount = 0;
                a.activeValue = undefined;
                a.availableMatchOptions = [];
                var g;
                var O = 0;
                var w = false;
 // used to avoid overwriting the selected item ref in multiple mode
                                var S;
                var C = h === "immediately" ? a.getTopValues() : i;
                var x = n.Children.toArray(a.props.children).reduce((function(e, t, o) {
                    // ignore Headings and Dividers
                    if (!tn(t)) {
                        e.push(t);
                        return e;
                    }
 // Find out if the search string exactly matches a value
                                        if (t.props.value === a.state.filterKeyword) {
                        g = true;
                    }
                    var i = m && m.indexOf(t.props.value) >= 0;
                    var l = !!i && !t.props.disabled && !S;
                    var c = s && !d && !f && !b && !y;
                    var u = nn(t.props.value, t.props.label);
                    var v = -1;
                    if (c && !t.props.disabled && !t.props.hidden) {
                        a.availableMatchOptions.push({
                            label: t.props.label,
                            value: t.props.value
                        });
                        v = a.availableMatchOptions.length - 1;
                    }
 // Format the Menu.Item
                                        var h =  (0, n.cloneElement)(t, {
                        key: t.key || o,
                        onClick: a.handleMenuOptionClick,
                        onKeyDown: c ? function(e) {
                            return a.handleMenuOptionKeyDown(e, v);
                        } : undefined,
                        selected: i,
                        multiple: d,
                        role: "option",
                        ref: function e(t) {
                            return a.handleOptionMount(t, u, l);
                        }
                    });
                    if (l) {
                        S = true;
                    }
                    if (C && C.indexOf(t.props.value) >= 0) {
                        if (O === 0) {
                            e.splice(O, 0,  r().createElement(p.Divider, {
                                key: "topDivider"
                            }));
                            w = true;
                        }
                        e.splice(O, 0, h);
                        O += 1;
                    } else {
                        e.push(h);
                    }
                    return e;
                }), []);
 // In multiple mode, add missing items
                                if (d) {
                    te()(m, (function(e) {
                        var t = Z()(x, (function(t) {
                            return tn(t) && t.props && t.props.value === e;
                        }));
                        if (!t) {
                            if (e === a.state.filterKeyword) {
                                g = true;
                            }
                            var n = C && C.indexOf(e) >= 0;
                            var o = C.length;
                            if (O === 0) {
                                x.splice(0, 0,  r().createElement(p.Divider, {
                                    key: "topDivider"
                                }));
                                O += 1;
                                w = true;
                            }
                            x.splice(n ? 0 : o + 1, 0,  r().createElement(M, {
                                label: String(e),
                                value: e,
                                key: "missing-value-".concat(e),
                                onClick: a.handleMenuOptionClick,
                                multiple: d,
                                selected: true
                            }));
                            if (n) {
                                O += 1;
                            }
                        }
                    }));
                }
                var k = f === "controlled";
 // Filter the items
                                var I = (0, Oe.stringToKeywords)(t);
                x = k ? x : x.filter((function(e) {
                    if (tn(e)) {
                        return (0, Oe.testPhrase)(e.props.label, I);
                    }
                    return true;
 // Keep all headers and non-interactive options
                                })).map((function(e) {
                    if (!tn(e)) {
                        return e;
                    }
 // highlight matched text
                                        var t = I && (0, Oe.keywordLocations)(e.props.label, I);
                    
                    return (0, n.cloneElement)(e, {
                        matchRanges: t || undefined
                    });
                }));
 // Add the option to add the new value
                                if (c && !g && t) {
                    var _ = w ? O + 1 : O;
                    x.splice(_, 0,  r().createElement(M, {
                        label: "".concat(t, " (new value)"),
                        value: t,
                        key: "newValue",
                        multiple: d,
                        onClick: a.handleMenuOptionClick
                    }));
                }
 // When selectAll is a menu item, add an offset so that activeItem accounts for the extra selectAll option.
                                var j = v === "checkbox" && d && x.length > 1 ? 1 : 0;
                var E = true;
 // Highlight the selected Items and remove hidden
                                x = x.reduce((function(e, t) {
                    // ignore Dividers & Headings
                    if (!tn(t)) {
                        e.push(t);
                        return e;
                    }
 // Ignore any hidden items
                                        if (t.props && t.props.hidden) {
                        return e;
                    }
                    if (t.props.selected && !t.props.disabled && a.firstSelectedOptionIndex == null) {
                        a.firstSelectedOptionIndex = a.availableOptionCount;
                    }
                    var r = j === a.state.activeIndex;
                    j += 1;
                    a.availableOptionCount += 1;
                    a.selectedOptionCount += t.props.selected ? 1 : 0;
                    if (t.key !== "newValue" && !t.props.disabled && !t.props.selected) {
                        E = false;
                    }
                    if (!r || !o) {
                        e.push(t);
                        return e;
                    }
                    if (!t.props.disabled) {
                        a.activeValue = t.props.value;
                    }
                    var i =  (0, n.cloneElement)(t, {
                        active: r,
                        id: a.activeItemId,
                        ref: a.handleActiveOptionMount
                    });
                    e.push(i);
                    return e;
                }), []);
                a.optionSelection = a.selectedOptionCount === 0 && "none" || E && "all" || "some";
 // add select all option
                                if (v === "checkbox" && d && a.availableOptionCount > 0) {
                    var A;
                    var P;
                    if (a.optionSelection === "all") {
                        if (t === "") {
                            P = (0, u._)("Clear all");
                        } else {
                            P = (0, u._)("Clear all matches");
                        }
                    } else if (t === "") {
                        P = (0, u._)("Select all");
                    } else {
                        P = (0, u._)("Select all matches");
                    }
                    if (a.state.activeIndex === 0 && o) {
                        a.activeValue = "selectAll";
                    }
                    x.unshift( r().createElement(st, {
                        key: "selectAllOption",
                        selected: a.optionSelection === "all" || a.optionSelection !== "none" && "some",
                        selectAllLabel: P,
                        totalCount: (A = a.getCurrentValues()) === null || A === void 0 ? void 0 : A.length,
                        changedToggle: !!a.props.toggle,
                        onClick: a.optionSelection === "all" ? a.handleClearAll : a.handleSelectAll,
                        id: a.state.activeIndex === 0 ? a.activeItemId : undefined,
                        active: a.state.activeIndex === 0,
                        ref: a.handleActiveOptionMount,
                        tabIndex: -1
                    }),  r().createElement(p.Divider, {
                        key: "selectAllDivider"
                    }));
                }
                a.displayedValues = x.reduce((function(e, t) {
                    if (tn(t)) {
                        e.push(t.props.value);
                    }
                    return e;
                }), []);
                return x;
            }));
            Jt($t(a), "wrapLabel", (function(e) {
                var t = e.prefixLabel, n = e.label, r = e.suffixLabel;
                var o = n;
                if (t) {
                    o = [ "".concat(t, ": ") ].concat(o);
                }
                if (r) {
                    o = X()(o).concat(" ".concat(r));
                }
                return o;
            }));
            Jt($t(a), "handleDropdownMount", (function(e) {
                a.dropdown = e;
            }));
            a.state = {
                activeIndex: 0,
                filterKeyword: "",
                open: false,
                textHasFocus: false,
                topValues: [],
                values: e.defaultValues || []
            };
            a.controlledExternally = l()(e, "values");
            a.displayedValues = [];
            a.availableOptionCount = 0;
            a.firstSelectedOptionIndex = undefined;
            a.selectedOptionCount = 0;
            a.matchCharacter = null;
            a.matchTimeout = null;
            a.currentMatchOptions = [];
            a.availableMatchOptions = [];
            a.optionRefsByKey = {};
            a.optionSelection = "none";
            if (false) {}
            if (false) {}
            o.validateAppearance(e);
            a.menuId = (0, be.createDOMID)("menu");
            a.menuListboxId = (0, be.createDOMID)("menu-listbox");
            a.activeItemId = (0, be.createDOMID)("active-item");
            return a;
        }
        Bt(o, [ {
            key: "componentDidUpdate",
            value: function e(t, n) {
                if (false) {}
                if (false) {}
                o.validateAppearance(this.props);
                this.previousActiveIndex = n.activeIndex;
            }
        }, {
            key: "getCurrentValues",
            value: function e() {
                var t = this.isControlled() ? this.props.values : this.state.values;
                return this.props.multiple || t == null ? t : t.slice(0, 1);
            }
        }, {
            key: "getTopValues",
            value: function e() {
                var t;
                // in non-multiple mode, don't move values to the top of the list
                                return this.props.multiple && this.props.showSelectedValuesFirst !== "never" ? (t = this.getCurrentValues()) !== null && t !== void 0 ? t : [] : [];
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
        }, {
            key: "hasFilter",
            value: function e() {
                return !!this.props.filter;
            }
        }, {
            key: "toggleValue",
            value: function e(t, n) {
                var r, o, a;
                var i = (r = this.getCurrentValues()) !== null && r !== void 0 ? r : [];
                var l = i.indexOf(n);
                var s = this.props, c = s.name, u = s.multiple;
                var p;
                if (u) {
                    if (l >= 0) {
                        p = [].concat(Mt(i.slice(0, l)), Mt(i.slice(l + 1)));
                    } else {
                        p = i.concat([ n ]);
                    }
                } else {
                    // non-multiple mode must always have a value
                    p = [ n ];
                }
                var f = !this.isControlled();
                if (f) {
                    this.setState({
                        values: p
                    });
                }
                if (u) {
                    // in uncontrolled multiple mode, keep the menu open
                    if (f) {
                        this.setState({
                            open: true
                        });
                    }
                } else {
                    // non-multiple mode only supports a single selection
                    // so close the menu once a selection is made
                    this.handleRequestClose({
                        reason: "contentClick"
                    });
                    this.focus();
                }
                (o = (a = this.props).onChange) === null || o === void 0 ? void 0 : o.call(a, t, {
                    values: p,
                    name: c,
                    reason: "valueToggle"
                });
            }
            /**
     * Place focus on the toggle.
     */        }, {
            key: "focus",
            value: function e() {
                var t;
                (t = this.dropdown) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "renderControls",
            value: function e(t) {
                var n = t.hasChildren, o = t.placement;
                var a = this.state.filterKeyword;
                var i = this.props, l = i.inputId, s = i.inputRef, c = i.multiple, p = i.selectAllAppearance;
                var f = (0, u._)("Select all options".concat(this.optionSelection === "all" ? " disabled" : ""));
                var d = (0, u._)("Clear all options".concat(this.optionSelection === "none" ? " disabled" : ""));
 // only visually disable these as opposed to fully disabling to avoid losing keyboard focus - see SUI-2731
                                var v =  r().createElement(mt, {
                    $placement: o,
                    key: "selectAll"
                },  r().createElement(yt, {
                    $disabled: this.optionSelection === "all",
                    "aria-label": f,
                    onClick: this.handleSelectAll,
                    "data-test": "select-all"
                }, a ? (0, u._)("Select all Matches") : (0, u._)("Select all")),  r().createElement(yt, {
                    $disabled: this.optionSelection === "none",
                    "aria-label": d,
                    onClick: this.handleClearAll,
                    "data-test": "clear-all"
                }, a ? (0, u._)("Clear all Matches") : (0, u._)("Clear all")));
                return this.hasFilter() &&  r().createElement("div", {
                    key: "controls"
                },  r().createElement(vt, {
                    key: "filter",
                    "data-test": "filter"
                },  r().createElement(Ie(), {
                    value: a,
                    autoCapitalize: "off",
                    autoComplete: "off",
                    autoCorrect: "off",
                    spellCheck: false,
                    onChange: this.handleTextChange,
                    onKeyDown: this.handleTextKeyDown,
                    onFocus: this.handleTextFocus,
                    onBlur: this.handleTextBlur,
                    placeholder: (0, u._)("filter"),
                    role: "combobox",
                    "aria-expanded": "true",
                    "aria-controls": this.menuListboxId,
                    "aria-label": (0, u._)("Filter"),
                    "aria-activedescendant": this.state.textHasFocus && n ? this.activeItemId : undefined,
                    inputRef: s,
                    inputId: l,
                    canClear: true,
                    startAdornment:  r().createElement(ht, null,  r().createElement(Ne, null))
                })), c && n && p === "buttongroup" && v);
            }
        }, {
            key: "render",
            value: function e() {
                var t, o = this;
                var a = this.props, i = a.children, l = a.defaultPlacement, s = a.inputId, c = a.multiple, u = a.repositionMode, p = a.virtualization;
                var f = this.hasFilter();
                var d = (t = this.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var v = n.Children.toArray(i);
                var h = d.some((function(e) {
                    var t = Z()(v, (function(t) {
                        return tn(t) && t.props.value === e;
                    }));
                    return t && !t.props.disabled;
                }));
                var b = this.createChildren();
                var y = this.createToggle();
                var m = function e(t) {
                    var n = t.anchorWidth, a = t.maxHeight, i = t.placement;
                    var l = Zt({
                        anchorWidth: n,
                        isMultiple: o.props.multiple,
                        maxHeight: a,
                        menuStyle: o.props.menuStyle
                    });
                    var s = d.length > 0 && !h && !o.hasFilter() ? 0 : undefined;
                    var u = Gt(Gt({
                        "aria-multiselectable": c || undefined,
                        childrenStart: o.renderControls({
                            placement: i,
                            hasChildren: !!b.length
                        }),
                        controlledExternally: o.hasFilter(),
                        placement: i !== null && i !== void 0 ? i : undefined,
                        onScrollBottom: o.props.onScrollBottom ? o.handleScrollBottom : undefined,
                        "data-test": "results-menu",
                        isLoading: o.props.isLoadingOptions,
                        id: o.menuId,
                        menuId: o.menuListboxId
                    }, pe()(o.props, "noOptionsMessage", "footerMessage", "animateLoading", "loadingMessage", "onScroll")), {}, {
                        style: l,
                        tabIndex: s
                    });
                    if (p) {
                        
                        return r().createElement(Ce.VirtualizedResultsMenu, kt({
                            virtualization: p
                        }, u), b);
                    }
                    
                    return r().createElement(xe(), u, b);
                };
                
                return r().createElement(me(), {
                    closeReasons: en,
                    inputId: s,
                    toggle: y,
                    onRequestOpen: this.handleRequestOpen,
                    onRequestClose: this.handleRequestClose,
                    open: this.state.open,
                    openWithArrowKeys: true,
                    repositionMode: u,
                    defaultPlacement: f ? l : undefined,
                    canCoverAnchor: xt().innerHeight < 500,
                    ref: this.handleDropdownMount,
                    retainFocus: false,
                    takeFocus: d.length === 0 || d.length > 0 && !h || !!f
                }, m);
            }
        } ]);
        return o;
    }(n.Component);
    Jt(rn, "propTypes", Qt);
    Jt(rn, "defaultProps", Xt);
    Jt(rn, "Option", M);
    Jt(rn, "Divider", p.Divider);
    Jt(rn, "Heading", p.Heading);
    Jt(rn, "invalidLinkAppearanceProps", [ "append", "error", "prepend" ]);
    /* harmony default export */    const on = rn;
    // CONCATENATED MODULE: ./src/Multiselect/Compact.tsx
    function an(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            an = function e(t) {
                return typeof t;
            };
        } else {
            an = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return an(e);
    }
    function ln() {
        ln = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return ln.apply(this, arguments);
    }
    function sn(e, t) {
        if (e == null) return {};
        var n = cn(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (o = 0; o < a.length; o++) {
                r = a[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function cn(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, a;
        for (a = 0; a < r.length; a++) {
            o = r[a];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function un(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function pn(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function fn(e, t, n) {
        if (t) pn(e.prototype, t);
        if (n) pn(e, n);
        return e;
    }
    function dn(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) vn(e, t);
    }
    function vn(e, t) {
        vn = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return vn(e, t);
    }
    function hn(e) {
        var t = mn();
        return function n() {
            var r = gn(e), o;
            if (t) {
                var a = gn(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return bn(this, o);
        };
    }
    function bn(e, t) {
        if (t && (an(t) === "object" || typeof t === "function")) {
            return t;
        }
        return yn(e);
    }
    function yn(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function mn() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function gn(e) {
        gn = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return gn(e);
    }
    function On(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var wn = {
        allowNewValues: a().bool,
        animateLoading: a().bool,
        children: a().node,
        controlledFilter: a().bool,
        defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
        defaultValues: a().array,
        describedBy: a().string,
        disabled: a().bool,
        elementRef: a().oneOfType([ a().func, a().object ]),
        error: a().bool,
        filter: a().oneOf([ false, true, "controlled" ]),
        footerMessage: a().node,
        inline: a().bool,
        inputId: a().string,
        inputRef: a().oneOfType([ a().func, a().object ]),
        isLoadingOptions: a().bool,
        labelledBy: a().string,
        loadingMessage: a().node,
        menuStyle: a().object,
        name: a().string,
        noOptionsMessage: a().node,
        onChange: a().func,
        onClose: a().func,
        onFilterChange: a().func,
        onOpen: a().func,
        onScroll: a().func,
        onScrollBottom: a().func,
        placeholder: a().string,
        repositionMode: a().oneOf([ "none", "flip" ]),
        selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
        showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
        tabConfirmsNewValue: a().bool,
        values: a().array,
        /** @private */
        virtualization: a().number
    };
    var Sn = {
        allowNewValues: false,
        animateLoading: false,
        defaultPlacement: "vertical",
        disabled: false,
        inline: false,
        isLoadingOptions: false,
        menuStyle: {},
        noOptionsMessage: (0, u._)("No matches"),
        placeholder: (0, u._)("Select..."),
        showSelectedValuesFirst: "nextOpen",
        tabConfirmsNewValue: false
    };
 // TS: not typed controlled/uncontrolled, handled by Multiselect wrapper component
        var Cn =  function(e) {
        dn(o, e);
        var t = hn(o);
        function o() {
            un(this, o);
            return t.apply(this, arguments);
        }
        fn(o, [ {
            key: "render",
            // @docs-props-type CompactPropsBase
            value: function e() {
                var t = this.props, o = t.defaultValues, a = t.children, i = t.controlledFilter, l = t.filter, s = t.values, c = sn(t, [ "defaultValues", "children", "controlledFilter", "filter", "values" ]);
                var u = true;
                if (l != null) {
                    u = l;
                    if (false) {}
                } else {
                    u = i ? "controlled" : true;
                }
                var p = {
                    children: n.Children.toArray(a).map((function(e) {
                        if (tn(e)) {
                            
                            return r().createElement(M, ln({}, e.props, {
                                multiple: true
                            }));
                        }
                        return e;
                    })),
                    filter: u
                };
                if (o != null) {
                    p.defaultValues = o;
                }
                if (s != null) {
                    p.values = s;
                }
                
                return r().createElement(on, ln({}, c, p, {
                    multiple: true
                }));
            }
        } ]);
        return o;
    }(n.Component);
    On(Cn, "propTypes", wn);
    On(Cn, "defaultProps", Sn);
    On(Cn, "Option", J);
    On(Cn, "Divider", p.Divider);
    On(Cn, "Heading", p.Heading);
    /* harmony default export */    const xn = Cn;
    // CONCATENATED MODULE: external "lodash/defer"
    const kn = require("lodash/defer");
    var In =  e.n(kn);
    // CONCATENATED MODULE: external "lodash/extend"
    const _n = require("lodash/extend");
    var jn =  e.n(_n);
    // CONCATENATED MODULE: external "lodash/get"
    const En = require("lodash/get");
    var Mn =  e.n(En);
    // CONCATENATED MODULE: external "lodash/isString"
    const An = require("lodash/isString");
    var Pn =  e.n(An);
    // CONCATENATED MODULE: external "lodash/last"
    const Vn = require("lodash/last");
    var Rn =  e.n(Vn);
    // CONCATENATED MODULE: external "lodash/pickBy"
    const Dn = require("lodash/pickBy");
    var Tn =  e.n(Dn);
    // CONCATENATED MODULE: external "@splunk/react-ui/Chip"
    const qn = require("@splunk/react-ui/Chip");
    var Bn =  e.n(qn);
    // CONCATENATED MODULE: external "@splunk/react-ui/Popover"
    const Nn = require("@splunk/react-ui/Popover");
    var Ln =  e.n(Nn);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const Fn = require("@splunk/react-ui/ScreenReaderContent");
    var Kn =  e.n(Fn);
    // CONCATENATED MODULE: external "@splunk/ui-utils/format"
    const $n = require("@splunk/ui-utils/format");
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const Hn = require("@splunk/react-ui/Box");
    var zn =  e.n(Hn);
    // CONCATENATED MODULE: ./src/Multiselect/NormalStyles.ts
    var Wn = Fe()(zn()).withConfig({
        displayName: "NormalStyles__StyledBox",
        componentId: "sc-1uwwpco-0"
    })([ "border-radius:", ";align-items:", ";flex-wrap:wrap;min-height:", ";max-height:300px;overflow-y:auto;border:1px solid ", ";padding:", ";", " ", " ", " ", " ", " &[data-inline]{width:400px;}[data-inline='true'] + &{margin-left:", "}" ], Ae.variables.borderRadius, (0, 
    Ae.pick)({
        enterprise: "flex-start",
        prisma: "center"
    }), Ae.variables.inputHeight, (0, Ae.pick)({
        enterprise: {
            light: Ae.variables.gray60,
            dark: Ae.variables.borderColor
        },
        prisma: Ae.variables.interactiveColorBorder
    }), (0, Ae.pick)({
        enterprise: "2px 0 0 2px",
        prisma: "2px"
    }), (0, Ae.pick)({
        enterprise: {
            light: (0, Le.css)([ "background-color:", ";" ], Ae.variables.white),
            dark: (0, Le.css)([ "background-color:", ";" ], Ae.variables.gray22)
        }
    }), (function(e) {
        var t = e.$hasfocus;
        return t && (0, Ae.pick)({
            enterprise: (0, Le.css)([ "box-shadow:", ";" ], Ae.variables.focusShadow),
            prisma: (0, Le.css)([ "border-color:", ";" ], Ae.variables.focusColor)
        });
    }), (function(e) {
        var t = e.$error;
        return t && (0, Le.css)([ "border-color:", ";color:", ";" ], Ae.variables.accentColorNegative, Ae.variables.accentColorNegative);
    }), (function(e) {
        var t = e.$disabled, n = e.$hasfocus;
        return t ? (0, Ae.pick)({
            enterprise: {
                light: (0, Le.css)([ "background-color:", ";border-color:", ";cursor:not-allowed;" ], Ae.variables.gray96, Ae.variables.gray92),
                dark: (0, Le.css)([ "background-color:", ";border-color:", ";cursor:not-allowed;" ], Ae.variables.gray22, Ae.variables.gray30)
            },
            prisma: (0, Le.css)([ "border-color:", ";cursor:not-allowed;" ], Ae.variables.interactiveColorBorderDisabled)
        }) : !n && (0, Le.css)([ "&:hover{border-color:", ";}" ], (0, Ae.pick)({
            enterprise: Ae.variables.borderColor,
            prisma: Ae.variables.interactiveColorBorderHover
        }));
    }), (function(e) {
        var t = e.$popoverOpen;
        return t && (0, Le.css)([ "position:relative;z-index:calc(", " - 2);" ], Ae.variables.zindexFixedNavbar);
    }), (0, Ae.pick)({
        enterprise: Ae.variables.spacingHalf,
        prisma: Ae.variables.spacingSmall
    }));
    var Un = Fe().span.withConfig({
        displayName: "NormalStyles__StyledButtonsWrapper",
        componentId: "sc-1uwwpco-1"
    })([ "display:contents;" ]);
    var Gn = Fe().input.withConfig({
        displayName: "NormalStyles__StyledInput",
        componentId: "sc-1uwwpco-2"
    })([ "", ";flex:1 0 auto;max-width:100%;line-height:12px;", "" ], Ae.mixins.reset("block"), (0, 
    Ae.pick)({
        enterprise: {
            comfortable: (0, Le.css)([ "padding:", ";" ], Ae.variables.spacingQuarter),
            compact: (0, Le.css)([ "padding:3px;" ])
        },
        prisma: {
            comfortable: (0, Le.css)([ "padding:7px 10px;" ]),
            compact: (0, Le.css)([ "padding:3px;" ])
        }
    }));
    var Jn = Fe().div.withConfig({
        displayName: "NormalStyles__StyledOverlay",
        componentId: "sc-1uwwpco-3"
    })([ "", "" ], (function(e) {
        var t = e.$popoveropen;
        return t && (0, Le.css)([ "position:fixed;top:0;left:0;width:100%;height:100%;z-index:calc(", " - 2);" ], Ae.variables.zindexFixedNavbar);
    }));
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function Qn(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/Multiselect/Normal.tsx
    function Xn(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Xn = function e(t) {
                return typeof t;
            };
        } else {
            Xn = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Xn(e);
    }
    function Yn(e) {
        return nr(e) || tr(e) || er(e) || Zn();
    }
    function Zn() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function er(e, t) {
        if (!e) return;
        if (typeof e === "string") return rr(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        if (n === "Object" && e.constructor) n = e.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(e);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return rr(e, t);
    }
    function tr(e) {
        if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
    }
    function nr(e) {
        if (Array.isArray(e)) return rr(e);
    }
    function rr(e, t) {
        if (t == null || t > e.length) t = e.length;
        for (var n = 0, r = new Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function or(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            if (t) r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }));
            n.push.apply(n, r);
        }
        return n;
    }
    function ar(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t] != null ? arguments[t] : {};
            if (t % 2) {
                or(Object(n), true).forEach((function(t) {
                    gr(e, t, n[t]);
                }));
            } else if (Object.getOwnPropertyDescriptors) {
                Object.defineProperties(e, Object.getOwnPropertyDescriptors(n));
            } else {
                or(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
        }
        return e;
    }
    function ir(e, t) {
        if (e == null) return {};
        var n = lr(e, t);
        var r, o;
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (o = 0; o < a.length; o++) {
                r = a[o];
                if (t.indexOf(r) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function lr(e, t) {
        if (e == null) return {};
        var n = {};
        var r = Object.keys(e);
        var o, a;
        for (a = 0; a < r.length; a++) {
            o = r[a];
            if (t.indexOf(o) >= 0) continue;
            n[o] = e[o];
        }
        return n;
    }
    function sr() {
        sr = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return sr.apply(this, arguments);
    }
    function cr(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function ur(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function pr(e, t, n) {
        if (t) ur(e.prototype, t);
        if (n) ur(e, n);
        return e;
    }
    function fr(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) dr(e, t);
    }
    function dr(e, t) {
        dr = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return dr(e, t);
    }
    function vr(e) {
        var t = yr();
        return function n() {
            var r = mr(e), o;
            if (t) {
                var a = mr(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return hr(this, o);
        };
    }
    function hr(e, t) {
        if (t && (Xn(t) === "object" || typeof t === "function")) {
            return t;
        }
        return br(e);
    }
    function br(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function yr() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function mr(e) {
        mr = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return mr(e);
    }
    function gr(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Or = {
        allowNewValues: a().bool,
        animateLoading: a().bool,
        children: a().node,
        controlledFilter: a().bool,
        defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
        defaultValues: a().array,
        describedBy: a().string,
        disabled: a().bool,
        elementRef: a().oneOfType([ a().func, a().object ]),
        error: a().bool,
        footerMessage: a().node,
        inline: a().bool,
        inputId: a().string,
        inputRef: a().oneOfType([ a().func, a().object ]),
        isLoadingOptions: a().bool,
        labelledBy: a().string,
        loadingMessage: a().node,
        menuStyle: a().object,
        name: a().string,
        noOptionsMessage: a().node,
        onChange: a().func,
        onClose: a().func,
        onFilterChange: a().func,
        onOpen: a().func,
        onScroll: a().func,
        onScrollBottom: a().func,
        placeholder: a().string,
        /** @private. */
        required: a().bool,
        repositionMode: a().oneOf([ "none", "flip" ]),
        tabConfirmsNewValue: a().bool,
        useClickawayOverlay: a().bool,
        values: a().array
    };
    var wr = {
        allowNewValues: false,
        animateLoading: false,
        defaultPlacement: "vertical",
        disabled: false,
        inline: false,
        isLoadingOptions: false,
        menuStyle: {},
        noOptionsMessage: (0, u._)("No matches"),
        placeholder: (0, u._)("Select..."),
        tabConfirmsNewValue: false,
        useClickawayOverlay: false
    };
    var Sr = ce()((function(e) {
        return {
            flexBasis: e,
            width: e
        };
    }));
    var Cr = ce()((function(e) {
        var t = e.anchorWidth, n = e.maxHeight, r = e.menuStyle;
        return jn()({
            maxHeight: n,
            overflow: "auto",
            width: Math.max(t !== null && t !== void 0 ? t : 0, 200)
        }, r);
    }));
 // TS: not typed controlled/uncontrolled, handled by Multiselect wrapper component
        var xr =  function(e) {
        fr(o, e);
        var t = vr(o);
        // @docs-props-type NormalPropsBase
                function o(e) {
            var a;
            cr(this, o);
            a = t.call(this, e);
            gr(br(a), "activeItemId", void 0);
            gr(br(a), "activeValue", void 0);
            gr(br(a), "availableOptionCount", void 0);
            gr(br(a), "children", void 0);
            gr(br(a), "controlledExternally", void 0);
            gr(br(a), "input", null);
            gr(br(a), "popoverId", void 0);
            gr(br(a), "previousActiveIndex", null);
            gr(br(a), "handleClick", (function() {
                var e;
                (e = a.input) === null || e === void 0 ? void 0 : e.focus();
            }));
            gr(br(a), "handleRequestRemove", (function(e, t) {
                var n = t.value;
                In()((function() {
                    return a.removeValue(e, n);
                }));
 // allow the event to bubble before removing.
                        }));
            gr(br(a), "handleInputFocus", (function(e) {
                if (a.state.filterKeyword !== "") {
                    var t, n;
                    (t = (n = a.props).onFilterChange) === null || t === void 0 ? void 0 : t.call(n, e, {
                        keyword: ""
                    });
                }
                a.setState({
                    filterKeyword: "",
                    hasFocus: true,
                    open: true
                }, (function() {
                    var e, t;
                    (e = (t = a.props).onOpen) === null || e === void 0 ? void 0 : e.call(t);
                }));
            }));
            gr(br(a), "handleInputKeyDown", (function(e) {
                var t, r;
                var o = a.props, i = o.children, l = o.onScrollBottom, s = o.tabConfirmsNewValue;
                var c = (0, ge.keycode)(e.nativeEvent);
                if (c === "tab" && a.state.open) {
                    if (s && !ae()(a.activeValue) && a.availableOptionCount <= 1) {
                        var u;
                        e.preventDefault();
                        a.addValue(e, a.activeValue);
                        (u = a.input) === null || u === void 0 ? void 0 : u.focus();
                    } else {
                        a.setState({
                            open: false
                        });
                    }
                }
                if (e.shiftKey || e.metaKey || e.ctrlKey) {
                    return;
                }
                if (c === "end" && a.state.open) {
                    e.preventDefault();
                    a.setState({
                        activeIndex: a.availableOptionCount - 1
                    });
                }
                if (c === "home" && a.state.open) {
                    e.preventDefault();
                    a.setState({
                        activeIndex: 0
                    });
                }
                if (c === "down") {
                    e.preventDefault();
                    if (a.state.open) {
                        a.setState((function(e) {
                            return {
                                activeIndex: Math.min(e.activeIndex + 1, a.availableOptionCount - 1)
                            };
                        }));
                    } else {
                        a.setState({
                            activeIndex: 0,
                            open: true
                        });
                    }
                    if (i && l) {
                        var p;
                        var f = n.Children.toArray(i).length - (2 + ((p = a.getCurrentValues()) !== null && p !== void 0 ? p : []).length);
                        if (a.state.activeIndex === f) {
                            a.handleScrollBottom(e);
                        }
                    }
                }
                if (c === "up") {
                    e.preventDefault();
                    if (a.state.open) {
                        a.setState((function(e) {
                            return {
                                activeIndex: Math.max(e.activeIndex - 1, 0)
                            };
                        }));
                    } else {
                        a.setState({
                            activeIndex: 0,
                            open: true
                        });
                    }
                }
                if (c === "enter" && !ae()(a.activeValue) && a.state.open) {
                    a.addValue(e, a.activeValue);
                }
                if (c === "backspace" && ((t = a.input) === null || t === void 0 ? void 0 : t.value) === "" && ((r = a.getCurrentValues()) === null || r === void 0 ? void 0 : r.length)) {
                    a.removeValue(e, Rn()(a.getCurrentValues()));
                }
            }));
            gr(br(a), "handleInputChange", (function(e) {
                var t, n;
                a.setState({
                    filterKeyword: e.target.value,
                    open: true,
                    activeIndex: 0
                });
                (t = (n = a.props).onFilterChange) === null || t === void 0 ? void 0 : t.call(n, e, {
                    keyword: e.target.value
                });
            }));
            gr(br(a), "handleMenuOptionClick", (function(e, t) {
                var n;
                var r = t.value;
                a.addValue(e, r);
                (n = a.input) === null || n === void 0 ? void 0 : n.focus();
            }));
            gr(br(a), "handleInputBlur", (function(e) {
                var t = document.getElementById(a.popoverId);
                var n = e.relatedTarget || document.activeElement;
 // IE11 doesn't support relatedTarget but sets activeElement
                                var r = t && n && t.contains(n);
 // TS: target as Node is an unsafe assumption
                                a.setState((function(e) {
                    return {
                        filterKeyword: r ? e.filterKeyword : "",
                        hasFocus: false
                    };
                }));
                if (!r) {
                    var o, i;
                    (o = (i = a.props).onFilterChange) === null || o === void 0 ? void 0 : o.call(i, e, {
                        keyword: ""
                    });
                }
            }));
            gr(br(a), "handleRequestClose", (function(e) {
                var t;
                var n = e.reason, r = e.event;
                if (n === "escapeKey" || n === "offScreen" || n === "clickAway" && r !== undefined && !((t = a.state.el) === null || t === void 0 ? void 0 : t.contains(r.target))) {
                    a.setState({
                        open: false
                    }, (function() {
                        var e, t;
                        a.previousActiveIndex = null;
                        (e = (t = a.props).onClose) === null || e === void 0 ? void 0 : e.call(t);
                    }));
                }
                if (n === "escapeKey") {
                    var o;
                    (o = a.input) === null || o === void 0 ? void 0 : o.focus();
                }
            }));
            gr(br(a), "handleScrollBottom", (function(e) {
                if (a.state.open && !a.props.isLoadingOptions) {
                    var t, n;
                    (t = (n = a.props).onScrollBottom) === null || t === void 0 ? void 0 : t.call(n, e);
                    a.setState({
                        loadingMoreMessage: "".concat(a.availableOptionCount, " options, loading more options")
                    });
                }
            }));
            gr(br(a), "handleMount", (function(e) {
                a.setState({
                    el: e
                });
                Qn(a.props.elementRef, e);
            }));
            gr(br(a), "handleInputMount", (function(e) {
                a.input = e;
                Qn(a.props.inputRef, e);
            }));
            gr(br(a), "handleActiveOptionMount", (function(e) {
                if (a.previousActiveIndex !== a.state.activeIndex) {
                    e === null || e === void 0 ? void 0 : e.scrollIntoViewIfNeeded();
                }
            }));
            gr(br(a), "renderMenu", (function(e) {
                var t = e.anchorWidth, n = e.maxHeight, o = e.placement;
                var i = Cr({
                    anchorWidth: t,
                    maxHeight: n,
                    menuStyle: a.props.menuStyle
                });
                
                return r().createElement(xe(), sr({
                    controlledExternally: true,
                    placement: o !== null && o !== void 0 ? o : undefined,
                    isLoading: a.props.isLoadingOptions,
                    onScrollBottom: a.props.onScrollBottom ? a.handleScrollBottom : undefined
                }, pe()(a.props, "noOptionsMessage", "footerMessage", "animateLoading", "loadingMessage", "onScroll"), {
                    style: i
                }), a.children);
            }));
            gr(br(a), "getSelectedItemsContent", (function(e) {
                return e.map((function(e) {
                    var t = e;
 // TS: faking props here
                                        var n = t.props;
                    if (n != null) {
                        var o = n.children, a = n.label, i = n.value;
                        
                        return r().createElement("span", {
                            key: i.toString()
                        }, o || a, (0, $n.sprintf)((0, u._)(" selected")));
                    }
                    
                    return r().createElement("span", {
                        key: (0, be.createGUID)()
                    },  r().createElement(r().Fragment, null, t, (0, $n.sprintf)((0, u._)(" selected"))));
                }));
            }));
            a.state = {
                activeIndex: 0,
                el: null,
                filterKeyword: "",
                hasFocus: false,
                open: false,
                values: e.defaultValues || [],
                loadingMoreMessage: ""
            };
            a.availableOptionCount = 0;
            a.children = [];
            a.controlledExternally = l()(e, "values");
            a.activeItemId = (0, be.createDOMID)("active-item");
            a.popoverId = (0, be.createDOMID)("popover");
            if (false) {}
            if (false) {}
            return a;
        }
        pr(o, [ {
            key: "componentDidUpdate",
            value: function e(t, n) {
                if (false) {}
                if (false) {}
                this.previousActiveIndex = n.activeIndex;
                if (this.isControlled() && t.values !== this.props.values) {
                    // eslint-disable-next-line react/no-did-update-set-state
                    this.setState({
                        filterKeyword: "",
                        activeIndex: 0
                    });
                }
            }
        }, {
            key: "getCurrentValues",
            value: function e() {
                return this.isControlled() ? this.props.values : this.state.values;
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
            /**
     * Place focus on the text input.
     */        }, {
            key: "focus",
            value: function e() {
                if (this.input) {
                    this.input.focus();
                }
            }
        }, {
            key: "addValue",
            value: function e(t, n) {
                var r, o, a;
                var i = ((r = this.getCurrentValues()) !== null && r !== void 0 ? r : []).concat([ n ]);
                var l = this.props.name;
                if (!this.isControlled()) {
                    this.setState({
                        values: i,
                        activeIndex: 0,
                        open: true,
                        filterKeyword: ""
                    });
                }
                (o = (a = this.props).onChange) === null || o === void 0 ? void 0 : o.call(a, t, {
                    values: i,
                    name: l
                });
            }
        }, {
            key: "removeValue",
            value: function e(t, n) {
                var r, o;
                var a = he()(this.getCurrentValues(), n);
                var i = this.props.name;
                if (!this.isControlled()) {
                    this.setState({
                        values: a
                    });
                }
                (r = (o = this.props).onChange) === null || r === void 0 ? void 0 : r.call(o, t, {
                    values: a,
                    name: i
                });
            }
        }, {
            key: "renderButtons",
            value: function e(t) {
                var n = this;
                // selectedItems may contain items or unmatched values at this point
                                return t.map((function(e) {
                    var t = e;
 // TS: faking props here
                                        var o = t.props;
                    if (o != null) {
                        var a = o.children, i = o.icon, l = o.label, s = o.selectedAppearance, c = o.selectedBackgroundColor, u = o.selectedForegroundColor, p = o.value;
                        
                        return r().createElement(Bn(), {
                            "aria-selected": true,
                            disabled: n.props.disabled,
                            icon: i,
                            key: p.toString(),
                            "data-test": "selected-option",
                            onRequestRemove: n.handleRequestRemove,
                            role: "option",
                            value: p,
                            appearance: s,
                            backgroundColor: c,
                            foregroundColor: u
                        },  r().createElement(r().Fragment, null, a || l));
                    }
                    
                    return r().createElement(Bn(), {
                        "aria-selected": true,
                        disabled: n.props.disabled,
                        key: (0, be.createGUID)(),
                        "data-test": "selected-option",
                        onRequestRemove: n.handleRequestRemove,
                        role: "option",
                        value: t
                    },  r().createElement(r().Fragment, null, t));
                }));
            }
        }, {
            key: "render",
            value: function e() {
                var t, o = this;
                var a = this.props, i = a.allowNewValues, s = a.children, p = a.controlledFilter, f = a.defaultPlacement, d = a.describedBy, v = a.disabled, h = a.error, b = a.inline, y = a.inputId, m = a.labelledBy, g = a.placeholder, O = a.required, w = a.repositionMode, S = a.useClickawayOverlay, C = ir(a, [ "allowNewValues", "children", "controlledFilter", "defaultPlacement", "describedBy", "disabled", "error", "inline", "inputId", "labelledBy", "placeholder", "required", "repositionMode", "useClickawayOverlay" ]);
                var x = ar(ar({}, Tn()(C, (function(e, t) {
                    return t === "role" || t.indexOf("aria-") === 0;
                }))), {}, {
                    "aria-describedby": d,
                    "aria-labelledby": m,
                    "aria-invalid": h || undefined
                });
                var k = ar({}, Tn()(C, (function(e, t) {
                    return t === "aria-label" || t === "aria-describedby";
                })));
                var I = (t = this.getCurrentValues()) !== null && t !== void 0 ? t : [];
                var _ = I.slice(0);
                var j = I.indexOf(this.state.filterKeyword) >= 0;
 // Map Options to selected values
                                if (I && I.length) {
                    n.Children.toArray(s).filter(n.isValidElement).filter((function(e) {
                        return e.type === J;
                    })).forEach((function(e) {
                        if (e.type === J) {
                            var t = I.indexOf(e.props.value);
                            if (t !== -1) {
                                _[t] = e;
                            }
                        }
                    }));
                }
 // Filter the items
                                var E = (0, Oe.stringToKeywords)(this.state.filterKeyword);
                var M = p ? n.Children.toArray(s) : // ensure consistent keys
                n.Children.toArray(s).filter((function(e) {
                    if (Mn()(e, [ "props", "label" ], false)) {
                        return (0, Oe.testPhrase)(e.props.label, E);
                    }
                    return true;
 // Keep all headers and non-interactive options
                                }));
                this.availableOptionCount = 0;
                this.activeValue = undefined;
                this.children = n.Children.map(M, (function(e, t) {
                    var r = e.props;
                    if (!r || !l()(r, "value")) {
                        // ignore Headings and Dividers
                        return e;
                    }
                    var a = e;
                    var i = a.props, s = i.children, c = i.label, u = i.matchRanges, f = i.value;
 // find out if the search string exactly matches a value
                                        if (f === o.state.filterKeyword) {
                        j = true;
                    }
 // remove items that are already selected
                                        var d = I.indexOf(f);
                    if (d >= 0) {
                        return null;
                    }
 // highlight matched text
                                        var v = s === undefined || Pn()(s);
                    var h = v && !p && !u && E && (0, Oe.keywordLocations)(c, E);
 // clone item
                                        var b =  (0, n.cloneElement)(a, {
                        key: t,
                        onClick: o.handleMenuOptionClick,
                        matchRanges: v && (u || h) || undefined
                    });
                    return b;
                })).filter((function(e) {
                    return e !== null;
                }));
 // Add the option to add the new value
                                if (i && !j && this.state.filterKeyword) {
                    this.children.unshift( r().createElement(J, {
                        label: "".concat(this.state.filterKeyword),
                        description: (0, u._)("(New value)"),
                        descriptionPosition: "right",
                        value: this.state.filterKeyword,
                        key: "newValue",
                        onClick: this.handleMenuOptionClick
                    }));
                }
                if (this.state.open) {
                    // highlight the selected Item
                    this.children = n.Children.map(this.children, (function(e) {
                        var t = e.props;
                        if (!t || !l()(t, "value")) {
                            // ignore Headings and Dividers
                            return e;
                        }
                        var r = e;
                        var a = r.props, i = a.disabled, s = a.value;
                        var c = o.availableOptionCount === o.state.activeIndex;
                        o.availableOptionCount += 1;
                        if (!c) {
                            return r;
                        }
                        if (!i) {
                            o.activeValue = s;
                        }
                        var u =  (0, n.cloneElement)(r, {
                            active: c,
                            id: o.activeItemId,
                            ref: o.handleActiveOptionMount
                        });
                        return u;
                    }));
                }
                var A = Sr("".concat(this.state.filterKeyword.length * .8, "em"));
                
                return r().createElement(r().Fragment, null,  r().createElement(Wn, sr({
                    key: "control",
                    "data-test-values": JSON.stringify(I),
                    inline: b,
                    $hasfocus: this.state.hasFocus
                }, c().apply(void 0, [ C, "animateLoading", "controlledFilter", "defaultValues", "footerMessage", "inputRef", "isLoadingOptions", "labelledBy", "menuStyle", "noOptionsMessage", "onChange", "onFilterChange", "onScroll", "onScrollBottom", "onClose", "onOpen", "values", "useClickawayOverlay" ].concat(Yn(le()(x)))), {
                    onClick: v ? undefined : this.handleClick,
                    $disabled: v,
                    $error: h,
                    "data-test-popover-id": this.popoverId,
                    $popoverOpen: this.state.open,
                    flex: true,
                    elementRef: this.handleMount,
                    role: "group",
                    "aria-disabled": v || undefined,
                    "aria-labelledby": m
                }, k),  r().createElement(Un, {
                    role: "listbox",
                    "aria-invalid": h,
                    "aria-multiselectable": "true"
                }, this.renderButtons(_)), !v &&  r().createElement(Gn, sr({
                    role: "combobox",
                    "data-test": "textbox",
                    id: y,
                    ref: this.handleInputMount,
                    onBlur: this.handleInputBlur,
                    onFocus: this.handleInputFocus,
                    onChange: this.handleInputChange,
                    onKeyDown: this.handleInputKeyDown,
                    value: this.state.filterKeyword,
                    autoCapitalize: "off",
                    autoComplete: "off",
                    autoCorrect: "off",
                    spellCheck: false,
                    style: A,
                    placeholder: I.length ? "" : g,
                    required: O,
                    "aria-activedescendant": this.state.open && this.availableOptionCount > 0 ? this.activeItemId : undefined,
                    "aria-autocomplete": "list",
                    "aria-controls": this.state.open ? this.popoverId : undefined,
                    "aria-owns": this.state.open ? this.popoverId : undefined,
                    "aria-expanded": this.state.open,
                    "aria-haspopup": true
                }, x)),  r().createElement(Ln(), {
                    open: this.state.open && !!this.state.el,
                    autoCloseWhenOffScreen: true,
                    anchor: this.state.el,
                    onRequestClose: this.handleRequestClose,
                    canCoverAnchor: false,
                    defaultPlacement: f,
                    repositionMode: w,
                    id: this.popoverId
                }, this.renderMenu)),  r().createElement(Kn(), {
                    role: "status",
                    "aria-relevant": "text"
                }, this.state.loadingMoreMessage), S && this.state.open ?  r().createElement(Jn, {
                    key: "overlay",
                    $popoveropen: this.state.open,
                    "data-test": "overlay"
                }) : null,  r().createElement(Kn(), {
                    role: "alert",
                    "aria-relevant": "additions"
                }, this.getSelectedItemsContent(_)));
            }
        } ]);
        return o;
    }(n.Component);
    gr(xr, "propTypes", Or);
    gr(xr, "defaultProps", wr);
    gr(xr, "Option", J);
    gr(xr, "Divider", p.Divider);
    gr(xr, "Heading", p.Heading);
    /* harmony default export */    const kr = xr;
    // CONCATENATED MODULE: ./src/Multiselect/Multiselect.tsx
    function Ir(e) {
        "@babel/helpers - typeof";
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            Ir = function e(t) {
                return typeof t;
            };
        } else {
            Ir = function e(t) {
                return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            };
        }
        return Ir(e);
    }
    function _r() {
        _r = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    if (Object.prototype.hasOwnProperty.call(n, r)) {
                        e[r] = n[r];
                    }
                }
            }
            return e;
        };
        return _r.apply(this, arguments);
    }
    function jr(e, t) {
        if (!(e instanceof t)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }
    function Er(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || false;
            r.configurable = true;
            if ("value" in r) r.writable = true;
            Object.defineProperty(e, r.key, r);
        }
    }
    function Mr(e, t, n) {
        if (t) Er(e.prototype, t);
        if (n) Er(e, n);
        return e;
    }
    function Ar(e, t) {
        if (typeof t !== "function" && t !== null) {
            throw new TypeError("Super expression must either be null or a function");
        }
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: true,
                configurable: true
            }
        });
        if (t) Pr(e, t);
    }
    function Pr(e, t) {
        Pr = Object.setPrototypeOf || function e(t, n) {
            t.__proto__ = n;
            return t;
        };
        return Pr(e, t);
    }
    function Vr(e) {
        var t = Tr();
        return function n() {
            var r = qr(e), o;
            if (t) {
                var a = qr(this).constructor;
                o = Reflect.construct(r, arguments, a);
            } else {
                o = r.apply(this, arguments);
            }
            return Rr(this, o);
        };
    }
    function Rr(e, t) {
        if (t && (Ir(t) === "object" || typeof t === "function")) {
            return t;
        }
        return Dr(e);
    }
    function Dr(e) {
        if (e === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return e;
    }
    function Tr() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
            Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
            return true;
        } catch (e) {
            return false;
        }
    }
    function qr(e) {
        qr = Object.setPrototypeOf ? Object.getPrototypeOf : function e(t) {
            return t.__proto__ || Object.getPrototypeOf(t);
        };
        return qr(e);
    }
    function Br(e, t, n) {
        if (t in e) {
            Object.defineProperty(e, t, {
                value: n,
                enumerable: true,
                configurable: true,
                writable: true
            });
        } else {
            e[t] = n;
        }
        return e;
    }
    var Nr = {
        allowNewValues: a().bool,
        animateLoading: a().bool,
        children: a().node,
        compact: a().bool,
        controlledFilter: a().bool,
        defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
        defaultValues: a().array,
        describedBy: a().string,
        disabled: a().bool,
        elementRef: a().oneOfType([ a().func, a().object ]),
        error: a().bool,
        filter: a().oneOf([ false, true, "controlled" ]),
        footerMessage: a().node,
        inline: a().bool,
        inputId: a().string,
        inputRef: a().oneOfType([ a().func, a().object ]),
        isLoadingOptions: a().bool,
        labelledBy: a().string,
        loadingMessage: a().node,
        menuStyle: a().object,
        name: a().string,
        noOptionsMessage: a().node,
        onChange: a().func,
        onClose: a().func,
        onFilterChange: a().func,
        onOpen: a().func,
        onScroll: a().func,
        onScrollBottom: a().func,
        placeholder: a().string,
        repositionMode: a().oneOf([ "none", "flip" ]),
        selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
        showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
        tabConfirmsNewValue: a().bool,
        useClickawayOverlay: a().bool,
        values: a().array,
        /** @private */
        virtualization: a().number
    };
    var Lr = {
        allowNewValues: false,
        animateLoading: false,
        compact: false,
        defaultPlacement: "vertical",
        disabled: false,
        inline: false,
        isLoadingOptions: false,
        menuStyle: {},
        noOptionsMessage: (0, u._)("No matches"),
        placeholder: (0, u._)("Select..."),
        repositionMode: "flip",
        tabConfirmsNewValue: false,
        useClickawayOverlay: false
    };
    function Fr(e) {
        return (e === null || e === void 0 ? void 0 : e.compact) === true;
    }
    var Kr =  function(e) {
        Ar(n, e);
        var t = Vr(n);
        function n() {
            jr(this, n);
            return t.apply(this, arguments);
        }
        Mr(n, [ {
            key: "render",
            // @docs-props-type MultiselectPropsBase
            // TODO: SUI-3402, this can be removed when ControlGroup no longer needs to inspect componentType
            value: function e() {
                if (Fr(this.props)) {
                    
                    return r().createElement(xn, _r({
                        "data-test": "multiselect"
                    }, c()(this.props, "compact")));
                }
                if (false) {}
                if (false) {}
                
                return r().createElement(kr, _r({
                    "data-test": "multiselect"
                }, c()(this.props, "compact")));
            }
        } ]);
        return n;
    }(n.Component);
    Br(Kr, "propTypes", Nr);
    Br(Kr, "defaultProps", Lr);
    Br(Kr, "componentType", "Multiselect");
    Br(Kr, "Option", J);
    Br(Kr, "Heading", p.Heading);
    Br(Kr, "Divider", p.Divider);
    /* harmony default export */    const $r = Kr;
    // CONCATENATED MODULE: ./src/Multiselect/index.ts
    module.exports = t;
    /******/})();