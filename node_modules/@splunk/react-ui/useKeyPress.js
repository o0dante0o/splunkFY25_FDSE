/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, r) => {
            /******/ for (var n in r) {
                /******/ if (e.o(r, n) && !e.o(t, n)) {
                    /******/ Object.defineProperty(t, n, {
                        enumerable: true,
                        get: r[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        default: () => /* binding */ o,
        useKeyPress: () => /* binding */ n
    });
    // CONCATENATED MODULE: external "react"
    const r = require("react");
    // CONCATENATED MODULE: ./src/useKeyPress/index.ts
    /**
 * TargetKey is any key available via event.key: [https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).
 *
 * This example shows a simple function by pressing the arrow up key.
 *
 *
 * ```
 * import React from 'react';
 * import { useKeyPress } from '../../useKeyPress';
 *
 * const YEP = 'Yep';
 * const NOPE = 'Nope';
 *
 * const BasicExample = () => {
 *  const [pressed, setPressed] = React.useState(false);
 *
 *  const handleKeyPress = () => {
 *      setPressed(true);
 *  };
 *
 *     useKeyPress('ArrowUp', handleKeyPress);
 *
 *      return <div>{pressed ? YEP : NOPE}</div>;
 *  };
 *
 *  export default BasicExample;
 * ```
 *
 * @param {String} targetKey - The key value to listen to.
 * @param {Function} handler - A function invoked when the target key is pressed.
 * @public
 */
    function n(e, t) {
        var n = (0, r.useCallback)((function(r) {
            if (r.key === e) {
                t(r);
                r.preventDefault();
            }
        }), [ t, e ]);
 // eslint-disable-next-line consistent-return
                (0, r.useEffect)((function() {
            if (typeof window !== "undefined") {
                window.addEventListener("keyup", n);
                return function() {
                    window.removeEventListener("keyup", n);
                };
            }
        }), [ n ]);
    }
    /* harmony default export */    const o = n;
    module.exports = t;
    /******/})();